<feed xmlns="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0">
<title>nixgnauhcuy</title>

<icon>https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/other/favicon.png</icon>
 
<subtitle>nixgnauhcuy&#39;s blog</subtitle>

<link href="https://www.nixgnauhcuy.cn/atom.xml" rel="self"/>

<link href="https://pubsubhubbub.appspot.com/" rel="hub"/>

<link href="https://www.nixgnauhcuy.cn/"/>
<updated>2024-06-21T15:02:04.000Z</updated>
<id>https://www.nixgnauhcuy.cn/</id>

<author>
<name>nixgnauhcuy</name>

</author>

<generator uri="https://hexo.io/">Hexo</generator>
<webfeeds:cover image="https://cdn.jsdelivr.net/gh/hayschan/static@master/2020/12/gFn7zm.JPG"/>
<webfeeds:icon>https://cdn.jsdelivr.net/gh/hayschan/static@master/2020/12/VAlBPs.png</webfeeds:icon>
<webfeeds:logo>https://cdn.jsdelivr.net/gh/hayschan/static@master/2020/12/XDzm9G.svg</webfeeds:logo>
<webfeeds:accentColor>0abab5</webfeeds:accentColor>
<webfeeds:related layout="card" target="browser"/>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>记录 axf 转 bin python 脚本笔记</title>
<link href="https://www.nixgnauhcuy.cn/60a5dd23b536/"/>
<id>https://www.nixgnauhcuy.cn/60a5dd23b536/</id>
<published>2024-06-21T15:02:04.000Z</published>
<updated>2024-06-21T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>前言</h1><p>记录制作 <code>.axf</code> 文件转换为 <code>.bin</code> 文件的 python 脚本过程遇到的难题和思考，脚本地址是<a href="https://github.com/nixgnauhcuy/python_script">nixgnauhcuy/python_script (github.com)</a>。</p><p>之前写过一篇 <a href="https://www.nixgnauhcuy.cn/05d8ba34e313/">《关于嵌入式的bin、hex、axf、map》</a>的文章，讲述了 <code>.bin</code>、<code>.hex</code>、<code>.axf</code>、<code>.map</code> 文件的概念和用途，那个时候对 <code>.axf</code> 文件的理解过于片面，在制作脚本的过程中，发现了自己的不足，所以这次就来详细记录一下。</p><p>之前都是依赖于 <code>fromelf.exe</code> 工具来转换 <code>.axf</code> 文件为 <code>.bin</code> 文件，但是不知道具体的实现过程，就想自己体验一下这个流程，所以尝试用 python 实现。</p><h1>准备工作</h1><p>在制作脚本之前，我用 Keil 实现了某款芯片的程序，生成了 <code>.axf</code> 文件，然后使用 <code>fromelf.exe</code> 工具转换为 <code>.bin</code> 文件，这里生成的 <code>.axf</code> 文件和 <code>.bin</code> 文件就作为我后面验证脚本的输入文件和验证是否正确的输出文件。</p><h1>初步实现</h1><p>先分析 <code>.axf</code> 文件，打开后，第一反应，“WTF，这怎么看！”，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240621/00.jpg" alt=""></p><p>第一眼，一脸懵逼，无从下手，所以我用对比工具对比下，与 <code>.bin</code> 文件是否有关联，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240621/01.png" alt=""><br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240621/02.png" alt=""></p><p>对比完后，就发现了规律，<code>.axf</code> 的某一数据段正好完全等同于 <code>.bin</code> 文件。这就好办了，直接把 <code>.axf</code> 这一段数据取出，并且重新组成 <code>.bin</code> 文件即可。</p><p>从图里可以看出，<code>.axf</code> 开头的 <code>0x00-0x34</code> 这一段的内容是不需要的，所以要输出的 <code>.bin</code> 文件头索引，就要从 <code>0x35</code> 开始，而 <code>.axf</code> 输出的 <code>.bin</code> 文件的尾巴，内容是 <code>0121002F0F0000022100000003010101</code>，所以我匹配到这一段数据后，我就认为是到顶了即可。</p><p>OK，思路有了，但是还要担心是不是所有的 <code>.axf</code> 文件都是这样的，先不管了，实现了再说，核心代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">AXF_HEAD_SIZE = <span class="number">0x34</span></span><br><span class="line">BIN_END_MARK = <span class="string">b&#x27;\x01\x21\x00\x2F\x0F\x00\x00\x02\x21\x00\x00\x00\x03\x01\x01\`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">with open(axf_file, &#x27;</span><span class="string">rb&#x27;) as input_file:</span></span><br><span class="line"><span class="string">    input_data = input_file.read()</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">start_index = AXF_HEAD_SIZE</span></span><br><span class="line"><span class="string">end_index = input_data.find(BIN_END_MARK, AXF_HEAD_SIZE)</span></span><br><span class="line"><span class="string">if end_index == -1:</span></span><br><span class="line"><span class="string">    raise ValueError(&quot;Convert data failed, can&#x27;</span>t find BIN_END_MARK.<span class="string">&quot;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">output_data = input_data[start_index:end_index]</span></span><br><span class="line"><span class="string">with open(output_file, &#x27;wb&#x27;) as output:</span></span><br><span class="line"><span class="string">    output.write(output_data)</span></span><br></pre></td></tr></table></figure><p>实现后，运行脚本后，结果一致，生成的文件符合预期，换了其他 MCU 的 <code>.axf</code> 文件和 <code>.bin </code> 文件，同样符合预期。</p><h1>完善实现</h1><p>虽然上面完成了，但是心里还是犯嘀咕，万一 <code>AXF_HEAD_SIZE</code> 不是从 <code>0x34</code> 开始，万一 <code>BIN_END_MARK</code> 刚好不匹配，岂不是执行不下，开始反思。</p><p>觉得自己对 <code>.axf</code> 没有理解，只是单纯的对比，发现逻辑并实现，跳过了对 <code>.axf</code> 文件的探索。</p><p>随后开始查询资料，查询 axf 如何 Convert 为 bin，发现好多资料都是提及使用 <code>fromelf.exe</code> 或者其他 <code>xxx.exe</code> 如何实现。</p><p>直到我看到了甲骨文 (oracle) 的文档，<a href="https://docs.oracle.com/cd/E19683-01/816-1386/6m7qcoblh/index.html">Chapter 7 Object File Format (Linker and Libraries Guide) (oracle.com)</a>，才发现之前的想法还是太幼稚了~</p><p><code>.axf</code> 文件的文件格式如图，<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240621/03.png" alt=""></p><p>根据给出的 ELF header 的结构体 <code>Elf32_Ehdr</code> 计算，长度正好符合前面提及的 <code>0x34</code>，并且将数据解析后得到的 <code>e_ehsize</code> 内容，也就是标头长度同样是 <code>0x34</code>，这样就验证了原先的逻辑，但是为了让程序更合理，我要获取的应该是 <code>e_ehsize</code> 的内容。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#define EI_NIDENT       16</span><br><span class="line"> </span><br><span class="line">typedef struct &#123;</span><br><span class="line">        unsigned char   e_ident[EI_NIDENT]; </span><br><span class="line">        Elf32_Half      e_type;</span><br><span class="line">        Elf32_Half      e_machine;</span><br><span class="line">        Elf32_Word      e_version;</span><br><span class="line">        Elf32_Addr      e_entry;</span><br><span class="line">        Elf32_Off       e_phoff;</span><br><span class="line">        Elf32_Off       e_shoff;</span><br><span class="line">        Elf32_Word      e_flags;</span><br><span class="line">        Elf32_Half      e_ehsize;</span><br><span class="line">        Elf32_Half      e_phentsize;</span><br><span class="line">        Elf32_Half      e_phnum;</span><br><span class="line">        Elf32_Half      e_shentsize;</span><br><span class="line">        Elf32_Half      e_shnum;</span><br><span class="line">        Elf32_Half      e_shstrndx;</span><br><span class="line">&#125; Elf32_Ehdr;</span><br></pre></td></tr></table></figure><p>而 <code>.bin</code> 文件的相关又要获取 <code>Program Header:</code> 的内容，过程有点长，我就省略部分篇幅了，最终修正的核心代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">EI_NIDENT = <span class="number">16</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Elf32_Struct</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># @see https://docs.oracle.com/cd/E19683-01/816-1386/chapter6-43405/index.html</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, data</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># ELF Header:</span></span><br><span class="line">        self.e_ident = data[:EI_NIDENT]</span><br><span class="line">        (</span><br><span class="line">            self.e_type,</span><br><span class="line">            self.e_machine,</span><br><span class="line">            self.e_version,</span><br><span class="line">            self.e_entry,</span><br><span class="line">            self.e_phoff,</span><br><span class="line">            self.e_shoff,</span><br><span class="line">            self.e_flags,</span><br><span class="line">            self.e_ehsize,</span><br><span class="line">            self.e_phentsize,</span><br><span class="line">            self.e_phnum,</span><br><span class="line">            self.e_shentsize,</span><br><span class="line">            self.e_shnum,</span><br><span class="line">            self.e_shstrndx</span><br><span class="line">        ) = struct.unpack(<span class="string">&#x27;&lt;HHIIIIIHHHHHH&#x27;</span>, data[EI_NIDENT:EI_NIDENT+struct.calcsize(<span class="string">&#x27;&lt;HHIIIIIHHHHHH&#x27;</span>)])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># ELF Program Headers:</span></span><br><span class="line">        (</span><br><span class="line">            self.p_type,</span><br><span class="line">            self.p_flags,</span><br><span class="line">            self.p_offset,</span><br><span class="line">            self.p_vaddr,</span><br><span class="line">            self.p_paddr,</span><br><span class="line">            self.p_filesz,</span><br><span class="line">            self.p_memsz,</span><br><span class="line">            self.p_align</span><br><span class="line">        ) = struct.unpack(<span class="string">&#x27;&lt;IIIIIIII&#x27;</span>, data[self.e_phoff:self.e_phoff+struct.calcsize(<span class="string">&#x27;&lt;IIIIIIII&#x27;</span>)])</span><br><span class="line">    </span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(axf_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> input_file:</span><br><span class="line">    input_data = input_file.read()</span><br><span class="line"></span><br><span class="line">elf_object = Elf32_Struct(input_data)</span><br><span class="line"></span><br><span class="line">output_data = input_data[elf_object.e_ehsize:elf_object.p_paddr+elf_object.e_ehsize]</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> output:</span><br><span class="line">    output.write(output_data)</span><br></pre></td></tr></table></figure><p>最终根据 <code>ELF Header</code> 和 <code>ELF Program Headers</code> 可以稳定正确的获取 <code>.bin</code> 文件的内容，脚本也算正确的完成了。</p><h1>结语</h1><p>整个实现过程还是发现很多不足，偷懒没有对 <code>.axf</code> 进行一个稍微深度的理解，停留在一个片面理解的程度就进行开发，反而耗费了更长的时间，不过过程中还是学到了不少东西，这波不亏~</p> ]]>
</content>
   
<summary type="html">&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;记录制作 &lt;code&gt;.axf&lt;/code&gt; 文件转换为 &lt;code&gt;.bin&lt;/code&gt; 文件的 python 脚本过程遇到的难题和思考，脚本地址是&lt;a href=&quot;https://github.com/nixgnauhcuy/python_sc</summary>
    
</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>Pyqt QCustomPlot 简介、安装与实用代码示例（四）</title>
<link href="https://www.nixgnauhcuy.cn/423b1931ce58/"/>
<id>https://www.nixgnauhcuy.cn/423b1931ce58/</id>
<published>2024-06-17T15:02:04.000Z</published>
<updated>2024-06-17T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <blockquote><p>完整代码我已经上传到 Github 上了，可前往 <a href="https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study">https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study</a> 获取。<br>完整文章路径：</p><ul><li><a href="https://www.nixgnauhcuy.cn/8d34424033d0/">Pyqt QCustomPlot 简介、安装与实用代码示例（一） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/f1b80f317887/">Pyqt QCustomPlot 简介、安装与实用代码示例（二） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/">Pyqt QCustomPlot 简介、安装与实用代码示例（三） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/423b1931ce58/">Pyqt QCustomPlot 简介、安装与实用代码示例（四） | nixgnauhcuy</a></li></ul></blockquote><h1>前言</h1><p>继上文，继续补充官方示例 demo 实现~</p><h1>实用代码示例</h1><h2 id="Interaction-Example">Interaction Example</h2><blockquote><p>The interaction example showing the user selection of graphs</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget, QMenu, QLineEdit, QInputDialog</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QFont, QColor</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCP, QCPScatterStyle, QCPGraph, QCPAxis</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPTextElement, QCPLegend, QCPDataSelection</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Interaction Example&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.mousePos = <span class="number">0</span></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom | QCP.iSelectAxes | QCP.iSelectLegend | QCP.iSelectPlottables))</span><br><span class="line">        self.customPlot.xAxis.setRange(-<span class="number">8</span>, <span class="number">8</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(-<span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line"></span><br><span class="line">        self.customPlot.plotLayout().insertRow(<span class="number">0</span>)</span><br><span class="line">        self.title = QCPTextElement(self.customPlot, <span class="string">&quot;Interaction Example&quot;</span>, QFont(<span class="string">&quot;sans&quot;</span>, <span class="number">17</span>, QFont.Bold))</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">0</span>, self.title)</span><br><span class="line"></span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;x Axis&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;y Axis&quot;</span>)</span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        legendFont = QFont()</span><br><span class="line">        legendFont.setPointSize(<span class="number">10</span>)</span><br><span class="line">        self.customPlot.legend.setFont(legendFont)</span><br><span class="line">        self.customPlot.legend.setSelectedFont(legendFont)</span><br><span class="line">        self.customPlot.legend.setSelectableParts(QCPLegend.spItems) <span class="comment"># legend box shall not be selectable, only legend items</span></span><br><span class="line"></span><br><span class="line">        self.addRandomGraph()</span><br><span class="line">        self.addRandomGraph()</span><br><span class="line">        self.addRandomGraph()</span><br><span class="line">        self.addRandomGraph()</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># connect slot that ties some axis selections together (especially opposite axes):</span></span><br><span class="line">        self.customPlot.selectionChangedByUser.connect(self.selectionChanged)</span><br><span class="line">        <span class="comment"># connect slots that takes care that when an axis is selected, only that direction can be dragged and zoomed:</span></span><br><span class="line">        self.customPlot.mousePress.connect(self.mousePressCb)</span><br><span class="line">        self.customPlot.mouseWheel.connect(self.mouseWheelCb)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make bottom and left axes transfer their ranges to top and right axes:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged.connect(<span class="keyword">lambda</span>: self.customPlot.xAxis2.setRange(self.customPlot.xAxis2.<span class="built_in">range</span>()))</span><br><span class="line">        self.customPlot.yAxis.rangeChanged.connect(<span class="keyword">lambda</span>: self.customPlot.yAxis2.setRange(self.customPlot.yAxis2.<span class="built_in">range</span>()))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># connect some interaction slots:</span></span><br><span class="line">        self.customPlot.axisDoubleClick.connect(self.axisLabelDoubleClick)</span><br><span class="line">        self.customPlot.legendDoubleClick.connect(self.legendDoubleClick)</span><br><span class="line">        self.title.doubleClicked.connect(self.titleDoubleClick)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># connect slot that shows a message in the status bar when a graph is clicked:</span></span><br><span class="line">        self.customPlot.plottableClick.connect(self.graphClicked)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup policy and connect slot for context menu popup:</span></span><br><span class="line">        self.customPlot.setContextMenuPolicy(Qt.CustomContextMenu)</span><br><span class="line">        self.customPlot.customContextMenuRequested.connect(self.contextMenuRequest)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">addRandomGraph</span>(<span class="params">self</span>):</span><br><span class="line">        n = <span class="number">50</span> <span class="comment"># number of points in graph</span></span><br><span class="line">        xScale = (random.random() + <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        yScale = (random.random() + <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        xOffset = (random.random() - <span class="number">0.5</span>)*<span class="number">4</span></span><br><span class="line">        yOffset = (random.random() - <span class="number">0.5</span>)*<span class="number">10</span></span><br><span class="line">        r1 = (random.random() - <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        r2 = (random.random() - <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        r3 = (random.random() - <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        r4 = (random.random() - <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        x = [i/(n-<span class="number">0.5</span>)*<span class="number">10.0</span>*xScale + xOffset <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        y = [(math.sin(x[i]*r1*<span class="number">5</span>)*math.sin(math.cos(x[i]*r2)*r4*<span class="number">3</span>)+r3*math.cos(math.sin(x[i])*r4*<span class="number">2</span>))*yScale + yOffset <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph().setName(<span class="string">f&quot;New Graph <span class="subst">&#123;self.customPlot.graphCount()-<span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line">        self.customPlot.graph().setData(x, y)</span><br><span class="line"></span><br><span class="line">        self.customPlot.graph().setLineStyle((QCPGraph.LineStyle)(math.floor(random.random()*<span class="number">5</span>)+<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">if</span> (math.floor(random.random()*<span class="number">100</span>) &gt; <span class="number">50</span>):</span><br><span class="line">            self.customPlot.graph().setScatterStyle(QCPScatterStyle((QCPScatterStyle.ScatterShape)(math.floor(random.random()*<span class="number">14</span>)+<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line">        graphPen = QPen()</span><br><span class="line">        graphPen.setColor(QColor(math.floor(random.random()*<span class="number">245</span>+<span class="number">10</span>), math.floor(random.random()*<span class="number">245</span>+<span class="number">10</span>), math.floor(random.random()*<span class="number">245</span>+<span class="number">10</span>)))</span><br><span class="line">        graphPen.setWidthF(random.random()/(random.random()*<span class="number">2</span>+<span class="number">1</span>))</span><br><span class="line">        self.customPlot.graph().setPen(graphPen)</span><br><span class="line">        self.customPlot.graph().setBrush(QColor(<span class="built_in">int</span>(random.random()*<span class="number">255</span>), <span class="built_in">int</span>(random.random()*<span class="number">255</span>), <span class="built_in">int</span>(random.random()*<span class="number">255</span>), <span class="number">20</span>))</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">selectionChanged</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># normally, axis base line, axis tick labels and axis labels are selectable separately, but we want</span></span><br><span class="line">        <span class="comment"># the user only to be able to select the axis as a whole, so we tie the selected states of the tick labels</span></span><br><span class="line">        <span class="comment"># and the axis base line together. However, the axis label shall be selectable individually.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># The selection state of the left and right axes shall be synchronized as well as the state of the</span></span><br><span class="line">        <span class="comment"># bottom and top axes.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Further, we want to synchronize the selection of the graphs with the selection state of the respective</span></span><br><span class="line">        <span class="comment"># legend item belonging to that graph. So the user can select a graph by either clicking on the graph itself</span></span><br><span class="line">        <span class="comment"># or on its legend item.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># make top and bottom axes be selected synchronously, and handle axis and tick labels as one selectable object:</span></span><br><span class="line">        <span class="keyword">if</span> (self.customPlot.xAxis.getPartAt(self.mousePos) == QCPAxis.spAxis <span class="keyword">or</span> self.customPlot.xAxis.getPartAt(self.mousePos) == QCPAxis.spTickLabels <span class="keyword">or</span></span><br><span class="line">            self.customPlot.xAxis2.getPartAt(self.mousePos) == QCPAxis.spAxis <span class="keyword">or</span> self.customPlot.xAxis2.getPartAt(self.mousePos) == QCPAxis.spTickLabels):</span><br><span class="line">            self.customPlot.xAxis2.setSelectedParts(QCPAxis.spAxis|QCPAxis.spTickLabels)</span><br><span class="line">            self.customPlot.xAxis.setSelectedParts(QCPAxis.spAxis|QCPAxis.spTickLabels)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make left and right axes be selected synchronously, and handle axis and tick labels as one selectable object:</span></span><br><span class="line">        <span class="keyword">if</span> (self.customPlot.yAxis.getPartAt(self.mousePos) == QCPAxis.spAxis <span class="keyword">or</span> self.customPlot.yAxis.getPartAt(self.mousePos) == QCPAxis.spTickLabels <span class="keyword">or</span></span><br><span class="line">            self.customPlot.yAxis2.getPartAt(self.mousePos) == QCPAxis.spAxis <span class="keyword">or</span> self.customPlot.yAxis2.getPartAt(self.mousePos) == QCPAxis.spTickLabels):</span><br><span class="line">            self.customPlot.yAxis2.setSelectedParts(QCPAxis.spAxis|QCPAxis.spTickLabels)</span><br><span class="line">            self.customPlot.yAxis.setSelectedParts(QCPAxis.spAxis|QCPAxis.spTickLabels)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># synchronize selection of graphs with selection of corresponding legend items:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.customPlot.graphCount()):</span><br><span class="line">            graph = self.customPlot.graph(i)</span><br><span class="line">            item = self.customPlot.legend.itemWithPlottable(graph)</span><br><span class="line">            <span class="keyword">if</span> (item.selected() <span class="keyword">or</span> graph.selected()):</span><br><span class="line">                item.setSelected(<span class="literal">True</span>)</span><br><span class="line">                graph.setSelection(QCPDataSelection(graph.data().dataRange()))</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mousePressCb</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="comment"># if an axis is selected, only allow the direction of that axis to be dragged</span></span><br><span class="line">        <span class="comment"># if no axis is selected, both directions may be dragged</span></span><br><span class="line"></span><br><span class="line">        self.mousePos = event.pos()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.customPlot.xAxis.getPartAt(event.pos()) == QCPAxis.spAxis:</span><br><span class="line">            self.customPlot.axisRect().setRangeDrag(self.customPlot.xAxis.orientation())</span><br><span class="line">        <span class="keyword">elif</span> self.customPlot.yAxis.getPartAt(event.pos()) == QCPAxis.spAxis:</span><br><span class="line">            self.customPlot.axisRect().setRangeDrag(self.customPlot.yAxis.orientation())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.customPlot.axisRect().setRangeDrag(Qt.Horizontal|Qt.Vertical)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mouseWheelCb</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="comment"># if an axis is selected, only allow the direction of that axis to be zoomed</span></span><br><span class="line">        <span class="comment"># if no axis is selected, both directions may be zoomed</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.customPlot.xAxis.getPartAt(event.pos())  == QCPAxis.spAxis:</span><br><span class="line">            self.customPlot.axisRect().setRangeZoom(self.customPlot.xAxis.orientation())</span><br><span class="line">        <span class="keyword">elif</span> self.customPlot.yAxis.getPartAt(event.pos())  == QCPAxis.spAxis:</span><br><span class="line">            self.customPlot.axisRect().setRangeZoom(self.customPlot.yAxis.orientation())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.customPlot.axisRect().setRangeZoom(Qt.Horizontal|Qt.Vertical)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">removeSelectedGraph</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.customPlot.selectedGraphs()) &gt; <span class="number">0</span>:</span><br><span class="line">            self.customPlot.removeGraph(self.customPlot.selectedGraphs()[<span class="number">0</span>])</span><br><span class="line">            self.customPlot.replot()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">removeAllGraphs</span>(<span class="params">self</span>):</span><br><span class="line">        self.customPlot.clearGraphs()</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">moveLegend</span>(<span class="params">self, alignment</span>):</span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, alignment)</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">contextMenuRequest</span>(<span class="params">self, pos</span>):</span><br><span class="line">        menu = QMenu(self)</span><br><span class="line">        menu.setAttribute(Qt.WA_DeleteOnClose)</span><br><span class="line">        <span class="keyword">if</span> self.customPlot.legend.selectTest(pos, <span class="literal">False</span>) &gt;= <span class="number">0</span>: <span class="comment"># context menu on legend requested</span></span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to top left&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignTop|Qt.AlignLeft))</span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to top center&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignTop|Qt.AlignHCenter))</span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to top right&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignTop|Qt.AlignRight))</span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to bottom right&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignBottom|Qt.AlignRight))</span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to bottom left&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignBottom|Qt.AlignLeft))</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># general context menu on graphs requested</span></span><br><span class="line">            menu.addAction(<span class="string">&quot;Add random graph&quot;</span>, self.addRandomGraph)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(self.customPlot.selectedGraphs()) &gt; <span class="number">0</span>:</span><br><span class="line">                menu.addAction(<span class="string">&quot;Remove selected graph&quot;</span>, self.removeSelectedGraph)</span><br><span class="line">            <span class="keyword">if</span> self.customPlot.graphCount() &gt; <span class="number">0</span>:</span><br><span class="line">                menu.addAction(<span class="string">&quot;Remove all graphs&quot;</span>, self.removeAllGraphs)</span><br><span class="line">        menu.popup(self.customPlot.mapToGlobal(pos))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">axisLabelDoubleClick</span>(<span class="params">self, axis, part</span>):</span><br><span class="line">        <span class="comment"># Set an axis label by double clicking on it</span></span><br><span class="line">        <span class="keyword">if</span> part == QCPAxis.spAxisLabel: <span class="comment"># only react when the actual axis label is clicked, not tick label or axis backbone</span></span><br><span class="line">            newLabel, ok = QInputDialog.getText(self, <span class="string">&quot;QCustomPlot example&quot;</span>, <span class="string">&quot;New axis label:&quot;</span>, QLineEdit.Normal, axis.label())</span><br><span class="line">            <span class="keyword">if</span> ok:</span><br><span class="line">                axis.setLabel(newLabel)</span><br><span class="line">                self.customPlot.replot()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">legendDoubleClick</span>(<span class="params">self, legend, item</span>):</span><br><span class="line">        <span class="comment"># Rename a graph by double clicking on its legend item</span></span><br><span class="line">        <span class="keyword">if</span> item: <span class="comment"># only react if item was clicked (user could have clicked on border padding of legend where there is no item, then item is 0)</span></span><br><span class="line">            plItem = item.plottable()</span><br><span class="line">            newName, ok = QInputDialog.getText(self, <span class="string">&quot;QCustomPlot example&quot;</span>, <span class="string">&quot;New graph name:&quot;</span>, QLineEdit.Normal, plItem.name())</span><br><span class="line">            <span class="keyword">if</span> ok:</span><br><span class="line">                plItem.setName(newName)</span><br><span class="line">                self.customPlot.replot()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">titleDoubleClick</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="comment"># Set the plot title by double clicking on it</span></span><br><span class="line">        newTitle, ok = QInputDialog.getText(self, <span class="string">&quot;QCustomPlot example&quot;</span>, <span class="string">&quot;New plot title:&quot;</span>, QLineEdit.Normal, self.title.text())</span><br><span class="line">        <span class="keyword">if</span> ok:</span><br><span class="line">            self.title.setText(newTitle)</span><br><span class="line">            self.customPlot.replot()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">graphClicked</span>(<span class="params">self, plottable, dataIndex</span>):</span><br><span class="line">        <span class="comment"># since we know we only have QCPGraphs in the plot, we can immediately access interface1D()</span></span><br><span class="line">        <span class="comment"># usually it&#x27;s better to first check whether interface1D() returns non-zero, and only then use it.</span></span><br><span class="line">        dataValue = plottable.interface1D().dataMainValue(dataIndex)</span><br><span class="line">        message = <span class="string">f&quot;Clicked on graph &#x27;<span class="subst">&#123;plottable.name()&#125;</span>&#x27; at data point #<span class="subst">&#123;dataIndex&#125;</span> with value <span class="subst">&#123;dataValue&#125;</span>.&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240617/00.gif" alt=""></p><h2 id="Item-Demo">Item Demo</h2><blockquote><p>Using items like text labels, arrows and a bracket. This is actually animated, see examples project</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QFont</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QMargins, QTimer, QTime</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCP, QCPItemTracer, QCPItemPosition</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPItemBracket, QCPItemText, QCPItemCurve, QCPLineEnding</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Item Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom))</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        n = <span class="number">500</span></span><br><span class="line">        phase = <span class="number">0</span></span><br><span class="line">        k = <span class="number">3</span></span><br><span class="line">        x = [i/(n-<span class="number">1</span>)*<span class="number">34</span> - <span class="number">17</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        y = [math.exp(-x[i]**<span class="number">2</span>/<span class="number">20.0</span>)*math.sin(k*x[i]+phase) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x, y)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(QPen(Qt.blue))</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).rescaleKeyAxis()</span><br><span class="line">        self.customPlot.yAxis.setRange(-<span class="number">1.45</span>, <span class="number">1.65</span>)</span><br><span class="line">        self.customPlot.xAxis.grid().setZeroLinePen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the bracket at the top:</span></span><br><span class="line">        self.bracket = QCPItemBracket(self.customPlot)</span><br><span class="line">        self.bracket.left.setCoords(-<span class="number">8</span>, <span class="number">1.1</span>)</span><br><span class="line">        self.bracket.right.setCoords(<span class="number">8</span>, <span class="number">1.1</span>)</span><br><span class="line">        self.bracket.setLength(<span class="number">13</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the text label at the top:</span></span><br><span class="line">        self.wavePacketText = QCPItemText(self.customPlot)</span><br><span class="line">        self.wavePacketText.position.setParentAnchor(self.bracket.center)</span><br><span class="line">        self.wavePacketText.position.setCoords(<span class="number">0</span>, -<span class="number">10</span>) <span class="comment"># move 10 pixels to the top from bracket center anchor</span></span><br><span class="line">        self.wavePacketText.setPositionAlignment(Qt.AlignBottom|Qt.AlignHCenter)</span><br><span class="line">        self.wavePacketText.setText(<span class="string">&quot;Wavepacket&quot;</span>)</span><br><span class="line">        self.wavePacketText.setFont(QFont(self.font().family(), <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the phase tracer (red circle) which sticks to the graph data (and gets updated in bracketDataSlot by timer event):</span></span><br><span class="line">        self.phaseTracer = QCPItemTracer(self.customPlot)</span><br><span class="line">        self.itemDemoPhaseTracer = self.phaseTracer <span class="comment"># so we can access it later in the bracketDataSlot for animation</span></span><br><span class="line">        self.phaseTracer.setGraph(self.customPlot.graph(<span class="number">0</span>))</span><br><span class="line">        self.phaseTracer.setGraphKey((math.pi*<span class="number">1.5</span>-phase)/k)</span><br><span class="line">        self.phaseTracer.setInterpolating(<span class="literal">True</span>)</span><br><span class="line">        self.phaseTracer.setStyle(QCPItemTracer.tsCircle)</span><br><span class="line">        self.phaseTracer.setPen(QPen(Qt.red))</span><br><span class="line">        self.phaseTracer.setBrush(Qt.red)</span><br><span class="line">        self.phaseTracer.setSize(<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add label for phase tracer:</span></span><br><span class="line">        self.phaseTracerText = QCPItemText(self.customPlot)</span><br><span class="line">        self.phaseTracerText.position.setType(QCPItemPosition.ptAxisRectRatio)</span><br><span class="line">        self.phaseTracerText.setPositionAlignment(Qt.AlignRight|Qt.AlignBottom)</span><br><span class="line">        self.phaseTracerText.position.setCoords(<span class="number">1.0</span>, <span class="number">0.95</span>) <span class="comment"># lower right corner of axis rect</span></span><br><span class="line">        self.phaseTracerText.setText(<span class="string">&quot;Points of fixed\nphase define\nphase velocity vp&quot;</span>)</span><br><span class="line">        self.phaseTracerText.setTextAlignment(Qt.AlignLeft)</span><br><span class="line">        self.phaseTracerText.setFont(QFont(self.font().family(), <span class="number">9</span>))</span><br><span class="line">        self.phaseTracerText.setPadding(QMargins(<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add arrow pointing at phase tracer, coming from label:</span></span><br><span class="line">        self.phaseTracerArrow = QCPItemCurve(self.customPlot)</span><br><span class="line">        self.phaseTracerArrow.start.setParentAnchor(self.phaseTracerText.left)</span><br><span class="line">        self.phaseTracerArrow.startDir.setParentAnchor(self.phaseTracerArrow.start)</span><br><span class="line">        self.phaseTracerArrow.startDir.setCoords(-<span class="number">40</span>, <span class="number">0</span>) <span class="comment"># direction 30 pixels to the left of parent anchor (tracerArrow-&gt;start)</span></span><br><span class="line">        self.phaseTracerArrow.end.setParentAnchor(self.phaseTracer.position)</span><br><span class="line">        self.phaseTracerArrow.end.setCoords(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">        self.phaseTracerArrow.endDir.setParentAnchor(self.phaseTracerArrow.end)</span><br><span class="line">        self.phaseTracerArrow.endDir.setCoords(<span class="number">30</span>, <span class="number">30</span>)</span><br><span class="line">        self.phaseTracerArrow.setHead(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line">        self.phaseTracerArrow.setTail(QCPLineEnding(QCPLineEnding.esBar, (self.phaseTracerText.bottom.pixelPosition().y()-self.phaseTracerText.top.pixelPosition().y())*<span class="number">0.85</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the group velocity tracer (green circle):</span></span><br><span class="line">        self.groupTracer = QCPItemTracer(self.customPlot)</span><br><span class="line">        self.groupTracer.setGraph(self.customPlot.graph(<span class="number">0</span>))</span><br><span class="line">        self.groupTracer.setGraphKey(<span class="number">5.5</span>)</span><br><span class="line">        self.groupTracer.setInterpolating(<span class="literal">True</span>)</span><br><span class="line">        self.groupTracer.setStyle(QCPItemTracer.tsCircle)</span><br><span class="line">        self.groupTracer.setPen(QPen(Qt.green))</span><br><span class="line">        self.groupTracer.setBrush(Qt.green)</span><br><span class="line">        self.groupTracer.setSize(<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add label for group tracer:</span></span><br><span class="line">        self.groupTracerText = QCPItemText(self.customPlot)</span><br><span class="line">        self.groupTracerText.position.setType(QCPItemPosition.ptAxisRectRatio)</span><br><span class="line">        self.groupTracerText.setPositionAlignment(Qt.AlignRight|Qt.AlignTop)</span><br><span class="line">        self.groupTracerText.position.setCoords(<span class="number">1.0</span>, <span class="number">0.20</span>) <span class="comment"># lower right corner of axis rect</span></span><br><span class="line">        self.groupTracerText.setText(<span class="string">&quot;Fixed positions in\nwave packet define\ngroup velocity vg&quot;</span>)</span><br><span class="line">        self.groupTracerText.setTextAlignment(Qt.AlignLeft)</span><br><span class="line">        self.groupTracerText.setFont(QFont(self.font().family(), <span class="number">9</span>))</span><br><span class="line">        self.groupTracerText.setPadding(QMargins(<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># add arrow pointing at group tracer, coming from label:</span></span><br><span class="line">        self.groupTracerArrow = QCPItemCurve(self.customPlot)</span><br><span class="line">        self.groupTracerArrow.start.setParentAnchor(self.groupTracerText.left)</span><br><span class="line">        self.groupTracerArrow.startDir.setParentAnchor(self.groupTracerArrow.start)</span><br><span class="line">        self.groupTracerArrow.startDir.setCoords(-<span class="number">40</span>, <span class="number">0</span>) <span class="comment"># direction 30 pixels to the left of parent anchor (tracerArrow-&gt;start)</span></span><br><span class="line">        self.groupTracerArrow.end.setCoords(<span class="number">5.5</span>, <span class="number">0.4</span>)</span><br><span class="line">        self.groupTracerArrow.endDir.setParentAnchor(self.groupTracerArrow.end)</span><br><span class="line">        self.groupTracerArrow.endDir.setCoords(<span class="number">0</span>, -<span class="number">40</span>)</span><br><span class="line">        self.groupTracerArrow.setHead(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line">        self.groupTracerArrow.setTail(QCPLineEnding(QCPLineEnding.esBar, (self.groupTracerText.bottom.pixelPosition().y()-self.groupTracerText.top.pixelPosition().y())*<span class="number">0.85</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add dispersion arrow:</span></span><br><span class="line">        self.arrow = QCPItemCurve(self.customPlot)</span><br><span class="line">        self.arrow.start.setCoords(<span class="number">1</span>, -<span class="number">1.1</span>)</span><br><span class="line">        self.arrow.startDir.setCoords(-<span class="number">1</span>, -<span class="number">1.3</span>)</span><br><span class="line">        self.arrow.endDir.setCoords(-<span class="number">5</span>, -<span class="number">0.3</span>)</span><br><span class="line">        self.arrow.end.setCoords(-<span class="number">10</span>, -<span class="number">0.2</span>)</span><br><span class="line">        self.arrow.setHead(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the dispersion arrow label:</span></span><br><span class="line">        self.dispersionText = QCPItemText(self.customPlot)</span><br><span class="line">        self.dispersionText.position.setCoords(-<span class="number">6</span>, -<span class="number">0.9</span>)</span><br><span class="line">        self.dispersionText.setRotation(<span class="number">40</span>)</span><br><span class="line">        self.dispersionText.setText(<span class="string">&quot;Dispersion with\nvp &lt; vg&quot;</span>)</span><br><span class="line">        self.dispersionText.setFont(QFont(self.font().family(), <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup a timer that repeatedly calls MainWindow::bracketDataSlot:</span></span><br><span class="line">        self.curTime = QTime.currentTime()</span><br><span class="line">        self.dataTimer = QTimer(self)</span><br><span class="line">        self.dataTimer.timeout.connect(self.bracketDataSlot)</span><br><span class="line">        self.dataTimer.start(<span class="number">0</span>) <span class="comment"># Interval 0 means to refresh as fast as possible</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bracketDataSlot</span>(<span class="params">self</span>):</span><br><span class="line">        key = self.curTime.msecsTo(QTime.currentTime())/<span class="number">1000.0</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment"># update data to make phase move:</span></span><br><span class="line">        n = <span class="number">500</span></span><br><span class="line">        phase = key*<span class="number">5</span></span><br><span class="line">        k = <span class="number">3</span></span><br><span class="line">        x = [i/(n-<span class="number">1</span>)*<span class="number">34</span> - <span class="number">17</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        y = [math.exp(-x[i]**<span class="number">2</span>/<span class="number">20.0</span>)*math.sin(k*x[i]+phase) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x, y)</span><br><span class="line">        self.itemDemoPhaseTracer.setGraphKey((<span class="number">8</span>*math.pi+math.fmod(math.pi*<span class="number">1.5</span>-phase, <span class="number">6</span>*math.pi))/k)</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240617/01.gif" alt=""></p><h2 id="Advanced-Axes-Demo">Advanced Axes Demo</h2><blockquote><p>QCP supports multiple axes on one axis rect side and multiple axis rects per plot widget</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, random, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QColor, QPen, QBrush</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPLayoutGrid, QCP, QCPAxis, QCPScatterStyle, QCPBars, QCPGraph</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPAxisRect, QCPMarginGroup, QCPGraphData, QCPAxisTickerFixed</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Advanced Axes Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure axis rect:</span></span><br><span class="line">        self.customPlot.plotLayout().clear() <span class="comment"># clear default axis rect so we can start from scratch</span></span><br><span class="line">        self.wideAxisRect = QCPAxisRect(self.customPlot)</span><br><span class="line">        self.wideAxisRect.setupFullAxesBox(<span class="literal">True</span>)</span><br><span class="line">        self.wideAxisRect.axis(QCPAxis.atRight, <span class="number">0</span>).setTickLabels(<span class="literal">True</span>)</span><br><span class="line">        self.wideAxisRect.addAxis(QCPAxis.atLeft).setTickLabelColor(QColor(<span class="string">&quot;#6050F8&quot;</span>)) <span class="comment"># add an extra axis on the left and color its numbers</span></span><br><span class="line">        self.subLayout = QCPLayoutGrid()</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">0</span>, self.wideAxisRect) <span class="comment"># insert axis rect in first row</span></span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">1</span>, <span class="number">0</span>, self.subLayout) <span class="comment"># sub layout in second row (grid layout will grow accordingly)</span></span><br><span class="line">        <span class="comment"># customPlot-&gt;plotLayout()-&gt;setRowStretchFactor(1, 2);</span></span><br><span class="line">        <span class="comment"># prepare axis rects that will be placed in the sublayout:</span></span><br><span class="line">        self.subRectLeft = QCPAxisRect(self.customPlot, <span class="literal">False</span>) <span class="comment"># false means to not setup default axes</span></span><br><span class="line">        self.subRectRight = QCPAxisRect(self.customPlot, <span class="literal">False</span>)</span><br><span class="line">        self.subLayout.addElement(<span class="number">0</span>, <span class="number">0</span>, self.subRectLeft)</span><br><span class="line">        self.subLayout.addElement(<span class="number">0</span>, <span class="number">1</span>, self.subRectRight)</span><br><span class="line">        self.subRectRight.setMaximumSize(<span class="number">150</span>, <span class="number">150</span>) <span class="comment"># make bottom right axis rect size fixed 150x150</span></span><br><span class="line">        self.subRectRight.setMinimumSize(<span class="number">150</span>, <span class="number">150</span>) <span class="comment"># make bottom right axis rect size fixed 150x150</span></span><br><span class="line">        <span class="comment"># setup axes in sub layout axis rects:</span></span><br><span class="line">        self.subRectLeft.addAxes(QCPAxis.atBottom | QCPAxis.atLeft)</span><br><span class="line">        self.subRectRight.addAxes(QCPAxis.atBottom | QCPAxis.atRight)</span><br><span class="line">        self.subRectLeft.axis(QCPAxis.atLeft).ticker().setTickCount(<span class="number">2</span>)</span><br><span class="line">        self.subRectRight.axis(QCPAxis.atRight).ticker().setTickCount(<span class="number">2</span>)</span><br><span class="line">        self.subRectRight.axis(QCPAxis.atBottom).ticker().setTickCount(<span class="number">2</span>)</span><br><span class="line">        self.subRectLeft.axis(QCPAxis.atBottom).grid().setVisible(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># synchronize the left and right margins of the top and bottom axis rects:</span></span><br><span class="line">        self.marginGroup = QCPMarginGroup(self.customPlot)</span><br><span class="line">        self.subRectLeft.setMarginGroup(QCP.msLeft, self.marginGroup)</span><br><span class="line">        self.subRectRight.setMarginGroup(QCP.msRight, self.marginGroup)</span><br><span class="line">        self.wideAxisRect.setMarginGroup(QCP.msLeft | QCP.msRight, self.marginGroup)</span><br><span class="line">        <span class="comment"># move newly created axes on &quot;axes&quot; layer and grids on &quot;grid&quot; layer:</span></span><br><span class="line">        <span class="keyword">for</span> rect <span class="keyword">in</span> self.customPlot.axisRects():</span><br><span class="line">            <span class="keyword">for</span> axis <span class="keyword">in</span> rect.axes():</span><br><span class="line">                axis.setLayer(<span class="string">&quot;axes&quot;</span>)</span><br><span class="line">                axis.grid().setLayer(<span class="string">&quot;grid&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare data:</span></span><br><span class="line">        dataCos = [QCPGraphData(i/<span class="number">20.0</span>*<span class="number">10</span>-<span class="number">5.0</span>, math.cos(i/<span class="number">20.0</span>*<span class="number">10</span>-<span class="number">5.0</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">21</span>)]</span><br><span class="line">        dataGauss = [QCPGraphData(i/<span class="number">50</span>*<span class="number">10</span>-<span class="number">5.0</span>, math.exp(-(i/<span class="number">50</span>*<span class="number">10</span>-<span class="number">5.0</span>)*(i/<span class="number">50</span>*<span class="number">10</span>-<span class="number">5.0</span>)*<span class="number">0.2</span>)*<span class="number">1000</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>)]</span><br><span class="line">        dataRandom = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">            dataRandom[i].key = i/<span class="number">100</span>*<span class="number">10</span></span><br><span class="line">            dataRandom[i].value = random.random()-<span class="number">0.5</span>+dataRandom[<span class="built_in">max</span>(<span class="number">0</span>, i-<span class="number">1</span>)].value</span><br><span class="line"></span><br><span class="line">        x3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">        y3 = [<span class="number">2</span>, <span class="number">2.5</span>, <span class="number">4</span>, <span class="number">1.5</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create and configure plottables:</span></span><br><span class="line">        self.mainGraphCos = self.customPlot.addGraph(self.wideAxisRect.axis(QCPAxis.atBottom), self.wideAxisRect.axis(QCPAxis.atLeft))</span><br><span class="line">        self.mainGraphCos.data().<span class="built_in">set</span>(dataCos)</span><br><span class="line">        self.mainGraphCos.valueAxis().setRange(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        self.mainGraphCos.rescaleKeyAxis()</span><br><span class="line">        self.mainGraphCos.setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, QPen(Qt.black), QBrush(Qt.white), <span class="number">6</span>))</span><br><span class="line">        self.mainGraphCos.setPen(QPen(QColor(<span class="number">120</span>, <span class="number">120</span>, <span class="number">120</span>), <span class="number">2</span>))</span><br><span class="line">        self.mainGraphGauss = self.customPlot.addGraph(self.wideAxisRect.axis(QCPAxis.atBottom), self.wideAxisRect.axis(QCPAxis.atLeft, <span class="number">1</span>))</span><br><span class="line">        self.mainGraphGauss.data().<span class="built_in">set</span>(dataGauss)</span><br><span class="line">        self.mainGraphGauss.setPen(QPen(QColor(<span class="string">&quot;#8070B8&quot;</span>), <span class="number">2</span>))</span><br><span class="line">        self.mainGraphGauss.setBrush(QColor(<span class="number">110</span>, <span class="number">170</span>, <span class="number">110</span>, <span class="number">30</span>))</span><br><span class="line">        self.mainGraphCos.setChannelFillGraph(self.mainGraphGauss)</span><br><span class="line">        self.mainGraphCos.setBrush(QColor(<span class="number">255</span>, <span class="number">161</span>, <span class="number">0</span>, <span class="number">50</span>))</span><br><span class="line">        self.mainGraphGauss.valueAxis().setRange(<span class="number">0</span>, <span class="number">1000</span>)</span><br><span class="line">        self.mainGraphGauss.rescaleKeyAxis()</span><br><span class="line"></span><br><span class="line">        self.subGraphRandom = self.customPlot.addGraph(self.subRectLeft.axis(QCPAxis.atBottom), self.subRectLeft.axis(QCPAxis.atLeft))</span><br><span class="line">        self.subGraphRandom.data().<span class="built_in">set</span>(dataRandom)</span><br><span class="line">        self.subGraphRandom.setLineStyle(QCPGraph.lsImpulse)</span><br><span class="line">        self.subGraphRandom.setPen(QPen(QColor(<span class="string">&quot;#FFA100&quot;</span>), <span class="number">1.5</span>))</span><br><span class="line">        self.subGraphRandom.rescaleAxes()</span><br><span class="line"></span><br><span class="line">        self.subBars = QCPBars(self.subRectRight.axis(QCPAxis.atBottom), self.subRectRight.axis(QCPAxis.atRight))</span><br><span class="line">        self.subBars.setWidth(<span class="number">3</span>/<span class="built_in">len</span>(x3))</span><br><span class="line">        self.subBars.setData(x3, y3)</span><br><span class="line">        self.subBars.setPen(QPen(Qt.black))</span><br><span class="line">        self.subBars.setAntialiased(<span class="literal">False</span>)</span><br><span class="line">        self.subBars.setAntialiasedFill(<span class="literal">False</span>)</span><br><span class="line">        self.subBars.setBrush(QColor(<span class="string">&quot;#705BE8&quot;</span>))</span><br><span class="line">        self.subBars.keyAxis().setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.subBars.rescaleAxes()</span><br><span class="line">        <span class="comment"># setup a ticker for subBars key axis that only gives integer ticks:</span></span><br><span class="line">        intTicker = QCPAxisTickerFixed()</span><br><span class="line">        intTicker.setTickStep(<span class="number">1.0</span>)</span><br><span class="line">        intTicker.setScaleStrategy(QCPAxisTickerFixed.ssMultiples)</span><br><span class="line">        self.subBars.keyAxis().setTicker(intTicker)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240617/02.png" alt=""></p><h2 id="Financial-Chart-Demo">Financial Chart Demo</h2><blockquote><p>QCP showing financial and stock data with the typical Candlestick and OHLC charts</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QColor, QPen</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QDateTime, QDate, QMargins</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPFinancial, QCP, QCPAxis, QCPBars</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPAxisRect, QCPMarginGroup, QCPAxisTickerDateTime</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Financial Chart Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># generate two sets of random walk data (one for candlestick and one for ohlc chart):</span></span><br><span class="line">        n = <span class="number">500</span></span><br><span class="line">        start = QDateTime(QDate(<span class="number">2014</span>, <span class="number">6</span>, <span class="number">11</span>))</span><br><span class="line">        start.setTimeSpec(Qt.UTC)</span><br><span class="line">        startTime = start.toTime_t()</span><br><span class="line">        binSize = <span class="number">3600</span>*<span class="number">24</span> <span class="comment"># bin data in 1 day intervals</span></span><br><span class="line">        time = [startTime + <span class="number">3600</span>*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        value1 = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        value1[<span class="number">0</span>] = <span class="number">60</span></span><br><span class="line">        value2 = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        value2[<span class="number">0</span>] = <span class="number">20</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">            value1[i] = value1[i-<span class="number">1</span>] + (random.random()-<span class="number">0.5</span>)*<span class="number">10</span></span><br><span class="line">            value2[i] = value2[i-<span class="number">1</span>] + (random.random()-<span class="number">0.5</span>)*<span class="number">3</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># create candlestick chart:</span></span><br><span class="line">        candlesticks = QCPFinancial(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        candlesticks.setName(<span class="string">&quot;Candlestick&quot;</span>)</span><br><span class="line">        candlesticks.setChartStyle(QCPFinancial.csCandlestick)</span><br><span class="line">        candlesticks.data().<span class="built_in">set</span>(QCPFinancial.timeSeriesToOhlc(time, value1, binSize, startTime))</span><br><span class="line">        candlesticks.setWidth(binSize*<span class="number">0.9</span>)</span><br><span class="line">        candlesticks.setTwoColored(<span class="literal">True</span>)</span><br><span class="line">        candlesticks.setBrushPositive(QColor(<span class="number">245</span>, <span class="number">245</span>, <span class="number">245</span>))</span><br><span class="line">        candlesticks.setBrushNegative(QColor(<span class="number">40</span>, <span class="number">40</span>, <span class="number">40</span>))</span><br><span class="line">        candlesticks.setPenPositive(QPen(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)))</span><br><span class="line">        candlesticks.setPenNegative(QPen(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create ohlc chart:</span></span><br><span class="line">        ohlc = QCPFinancial(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        ohlc.setName(<span class="string">&quot;OHLC&quot;</span>)</span><br><span class="line">        ohlc.setChartStyle(QCPFinancial.csOhlc)</span><br><span class="line">        ohlc.data().<span class="built_in">set</span>(QCPFinancial.timeSeriesToOhlc(time, value2, binSize/<span class="number">3.0</span>, startTime)) <span class="comment"># divide binSize by 3 just to make the ohlc bars a bit denser</span></span><br><span class="line">        ohlc.setWidth(binSize*<span class="number">0.2</span>)</span><br><span class="line">        ohlc.setTwoColored(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create bottom axis rect for volume bar chart:</span></span><br><span class="line">        volumeAxisRect = QCPAxisRect(self.customPlot)</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">1</span>, <span class="number">0</span>, volumeAxisRect)</span><br><span class="line">        volumeAxisRect.setMaximumSize(<span class="number">16777215</span>, <span class="number">100</span>)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).setLayer(<span class="string">&quot;axes&quot;</span>)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).grid().setLayer(<span class="string">&quot;grid&quot;</span>)</span><br><span class="line">        <span class="comment"># bring bottom and main axis rect closer together:</span></span><br><span class="line">        self.customPlot.plotLayout().setRowSpacing(<span class="number">0</span>)</span><br><span class="line">        volumeAxisRect.setAutoMargins(QCP.MarginSides(QCP.msLeft|QCP.msRight|QCP.msBottom))</span><br><span class="line">        volumeAxisRect.setMargins(QMargins(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="comment"># create two bar plottables, for positive (green) and negative (red) volume bars:</span></span><br><span class="line">        self.customPlot.setAutoAddPlottableToLegend(<span class="literal">False</span>)</span><br><span class="line">        volumePos = QCPBars(volumeAxisRect.axis(QCPAxis.atBottom), volumeAxisRect.axis(QCPAxis.atLeft))</span><br><span class="line">        volumeNeg = QCPBars(volumeAxisRect.axis(QCPAxis.atBottom), volumeAxisRect.axis(QCPAxis.atLeft))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n//<span class="number">5</span>):</span><br><span class="line">            v = random.randint(-<span class="number">20000</span>, <span class="number">20000</span>)</span><br><span class="line">            <span class="keyword">if</span> v &lt; <span class="number">0</span>:</span><br><span class="line">                volumeNeg.addData(startTime+<span class="number">3600</span>*<span class="number">5.0</span>*i, <span class="built_in">abs</span>(v))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                volumePos.addData(startTime+<span class="number">3600</span>*<span class="number">5.0</span>*i, <span class="built_in">abs</span>(v))</span><br><span class="line">        volumePos.setWidth(<span class="number">3600</span>*<span class="number">4</span>)</span><br><span class="line">        volumePos.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        volumePos.setBrush(QColor(<span class="number">100</span>, <span class="number">180</span>, <span class="number">110</span>))</span><br><span class="line">        volumeNeg.setWidth(<span class="number">3600</span>*<span class="number">4</span>)</span><br><span class="line">        volumeNeg.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        volumeNeg.setBrush(QColor(<span class="number">180</span>, <span class="number">90</span>, <span class="number">90</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># interconnect x axis ranges of main and bottom axis rects:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged.connect(volumeAxisRect.axis(QCPAxis.atBottom).setRange)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).rangeChanged.connect(self.customPlot.xAxis.setRange)</span><br><span class="line">        <span class="comment"># configure axes of both main and bottom axis rect:</span></span><br><span class="line">        dateTimeTicker = QCPAxisTickerDateTime()</span><br><span class="line">        dateTimeTicker.setDateTimeSpec(Qt.UTC)</span><br><span class="line">        dateTimeTicker.setDateTimeFormat(<span class="string">&quot;dd. MMMM&quot;</span>)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).setTicker(dateTimeTicker)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).setTickLabelRotation(<span class="number">15</span>)</span><br><span class="line">        self.customPlot.xAxis.setBasePen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        self.customPlot.xAxis.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setTicks(<span class="literal">False</span>) <span class="comment"># only want vertical grid in main axis rect, so hide xAxis backbone, ticks, and labels</span></span><br><span class="line">        self.customPlot.xAxis.setTicker(dateTimeTicker)</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        self.customPlot.xAxis.scaleRange(<span class="number">1.025</span>, self.customPlot.xAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        self.customPlot.yAxis.scaleRange(<span class="number">1.1</span>, self.customPlot.yAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># make axis rects&#x27; left side line up:</span></span><br><span class="line">        group = QCPMarginGroup(self.customPlot)</span><br><span class="line">        self.customPlot.axisRect().setMarginGroup(QCP.msLeft|QCP.msRight, group)</span><br><span class="line">        volumeAxisRect.setMarginGroup(QCP.msLeft|QCP.msRight, group)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240617/03.png" alt=""></p><h1>结语</h1><p>至此，官方 demo 已经全部实现了，后续看看有没有时间再更新些其他的。</p> ]]>
</content>
 
<summary type="html">基于 Pyqt 的 QCustomPlot 简介、安装以及实用代码示例分享续篇三，并且是完结篇。</summary>
  
<category term="python" scheme="https://www.nixgnauhcuy.cn/categories/python/"/>
 
<category term="python" scheme="https://www.nixgnauhcuy.cn/tags/python/"/>

<category term="pyqt" scheme="https://www.nixgnauhcuy.cn/tags/pyqt/"/>

<category term="QCustomPlot" scheme="https://www.nixgnauhcuy.cn/tags/QCustomPlot/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>Pyqt QCustomPlot 简介、安装与实用代码示例（三）</title>
<link href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/"/>
<id>https://www.nixgnauhcuy.cn/a0c7dce1d4fa/</id>
<published>2024-06-14T15:02:04.000Z</published>
<updated>2024-06-14T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <blockquote><p>完整代码我已经上传到 Github 上了，可前往 <a href="https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study">https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study</a> 获取。<br>完整文章路径：</p><ul><li><a href="https://www.nixgnauhcuy.cn/8d34424033d0/">Pyqt QCustomPlot 简介、安装与实用代码示例（一） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/f1b80f317887/">Pyqt QCustomPlot 简介、安装与实用代码示例（二） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/">Pyqt QCustomPlot 简介、安装与实用代码示例（三） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/423b1931ce58/">Pyqt QCustomPlot 简介、安装与实用代码示例（四） | nixgnauhcuy</a></li></ul></blockquote><h1>前言</h1><p>继上文，继续补充官方示例 demo 实现~</p><h1>实用代码示例</h1><h2 id="Line-Style-Demo">Line Style Demo</h2><blockquote><p>A demonstration of several line styles</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Line Style Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setFont(QFont(<span class="string">&quot;Helvetica&quot;</span>, <span class="number">9</span>))</span><br><span class="line">        pen = QPen()</span><br><span class="line">        lineNames = [<span class="string">&quot;lsNone&quot;</span>, <span class="string">&quot;lsLine&quot;</span>, <span class="string">&quot;lsStepLeft&quot;</span>, <span class="string">&quot;lsStepRight&quot;</span>, <span class="string">&quot;lsStepCenter&quot;</span>, <span class="string">&quot;lsImpulse&quot;</span>]</span><br><span class="line">        <span class="comment"># add graphs with different line styles:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(QCPGraph.lsNone, QCPGraph.lsImpulse+<span class="number">1</span>):</span><br><span class="line">            self.customPlot.addGraph()</span><br><span class="line">            pen.setColor(QColor(<span class="built_in">int</span>(math.sin(i*<span class="number">1</span>+<span class="number">1.2</span>)*<span class="number">80</span>+<span class="number">80</span>), <span class="built_in">int</span>(math.sin(i*<span class="number">0.3</span>+<span class="number">0</span>)*<span class="number">80</span>+<span class="number">80</span>), <span class="built_in">int</span>(math.sin(i*<span class="number">0.3</span>+<span class="number">1.5</span>)*<span class="number">80</span>+<span class="number">80</span>)))</span><br><span class="line">            self.customPlot.graph().setPen(pen)</span><br><span class="line">            self.customPlot.graph().setName(lineNames[i-QCPGraph.lsNone])</span><br><span class="line">            self.customPlot.graph().setLineStyle(QCPGraph.LineStyle(i))</span><br><span class="line">            self.customPlot.graph().setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, <span class="number">5</span>))</span><br><span class="line">            <span class="comment"># generate data:</span></span><br><span class="line">            x = [j/<span class="number">15.0</span> * <span class="number">5</span>*<span class="number">3.14</span> + <span class="number">0.01</span> <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>)]</span><br><span class="line">            y = [<span class="number">7</span>*math.sin(x[j])/x[j] - (i-QCPGraph.lsNone)*<span class="number">5</span> + (QCPGraph.lsImpulse)*<span class="number">5</span> + <span class="number">2</span> <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>)]</span><br><span class="line">            self.customPlot.graph().setData(x, y)</span><br><span class="line">            self.customPlot.graph().rescaleAxes(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># zoom out a bit:</span></span><br><span class="line">        self.customPlot.yAxis.scaleRange(<span class="number">1.1</span>, self.customPlot.yAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        self.customPlot.xAxis.scaleRange(<span class="number">1.1</span>, self.customPlot.xAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        <span class="comment"># set blank axis lines:</span></span><br><span class="line">        self.customPlot.xAxis.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis.setTicks(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis.setTickLabels(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># make top right axes clones of bottom left axes:</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/00.png" alt=""></p><h2 id="Date-Axis-Demo">Date Axis Demo</h2><blockquote><p>Random walks with fill and smart date ticks on the bottom axis</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QBrush, QFont</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QDateTime, QLocale</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPGraphData, QCPAxisTickerText, QCPAxisTickerDateTime</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Date Axis Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set locale to english, so we get english month names:</span></span><br><span class="line">        self.customPlot.setLocale(QLocale(QLocale.English, QLocale.UnitedKingdom))</span><br><span class="line">        <span class="comment"># seconds of current time, we&#x27;ll use it as starting point in time for data:</span></span><br><span class="line">        self.now = QDateTime.currentDateTime().toTime_t()</span><br><span class="line">        <span class="comment"># create multiple graphs:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            self.customPlot.addGraph()</span><br><span class="line">            color = QColor(<span class="built_in">int</span>(<span class="number">20</span>+<span class="number">200</span>/<span class="number">4.0</span>*i), <span class="built_in">int</span>(<span class="number">70</span>*(<span class="number">1.6</span>-i/<span class="number">4.0</span>)), <span class="number">150</span>, <span class="number">150</span>)</span><br><span class="line">            self.customPlot.graph().setLineStyle(QCPGraph.lsLine)</span><br><span class="line">            self.customPlot.graph().setPen(QPen(color.lighter(<span class="number">200</span>)))</span><br><span class="line">            self.customPlot.graph().setBrush(QBrush(color))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># generate random walk data:</span></span><br><span class="line">            timeData = [QCPGraphData() <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>)]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>):</span><br><span class="line">                timeData[j].key = self.now + <span class="number">24</span>*<span class="number">3600</span>*j</span><br><span class="line">                <span class="keyword">if</span> j == <span class="number">0</span>:</span><br><span class="line">                    timeData[j].value = (j/<span class="number">50.0</span>+<span class="number">1</span>)*(random.random()/<span class="number">5.0</span>-<span class="number">0.5</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    timeData[j].value = math.fabs(timeData[j-<span class="number">1</span>].value)*(<span class="number">1</span>+<span class="number">0.02</span>/<span class="number">4.0</span>*(<span class="number">4</span>-i)) + (j/<span class="number">50.0</span>+<span class="number">1</span>)*(random.random()-<span class="number">0.5</span>)</span><br><span class="line">            self.customPlot.graph().data().<span class="built_in">set</span>(timeData)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure bottom axis to show date instead of number:</span></span><br><span class="line">        dateTicker = QCPAxisTickerDateTime()</span><br><span class="line">        dateTicker.setDateTimeFormat(<span class="string">&quot;d. MMMM\nyyyy&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.setTicker(dateTicker)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure left axis text labels:</span></span><br><span class="line">        textTicker = QCPAxisTickerText()</span><br><span class="line">        textTicker.addTick(<span class="number">10</span>, <span class="string">&quot;a bit\nlow&quot;</span>)</span><br><span class="line">        textTicker.addTick(<span class="number">50</span>, <span class="string">&quot;quite\nhigh&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setTicker(textTicker)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set a more compact font size for bottom and left axis tick labels:</span></span><br><span class="line">        self.customPlot.xAxis.setTickLabelFont(QFont(QFont().family(), <span class="number">8</span>))</span><br><span class="line">        self.customPlot.yAxis.setTickLabelFont(QFont(QFont().family(), <span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set axis labels:</span></span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;Date&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;Random wobbly lines value&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make top and right axes visible but without ticks and labels:</span></span><br><span class="line">        self.customPlot.xAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set axis ranges to show all data:</span></span><br><span class="line">        self.customPlot.xAxis.setRange(self.now, self.now+<span class="number">24</span>*<span class="number">3600</span>*<span class="number">249</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># show legend with slightly transparent background brush:</span></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setBrush(QColor(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">150</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/01.png" alt=""></p><h2 id="Parametric-Curves-Demo">Parametric Curves Demo</h2><blockquote><p>Parametric curves with translucent gradient filling</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QBrush, QRadialGradient</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QPointF</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCP, QCPCurve, QCPCurveData</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Parametric Curves Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create empty curve objects:</span></span><br><span class="line">        self.fermatSpiral1 = QCPCurve(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.fermatSpiral2 = QCPCurve(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.deltoidRadial = QCPCurve(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># generate the curve data points:</span></span><br><span class="line">        pointCount = <span class="number">500</span></span><br><span class="line">        dataSpiral1 = [QCPCurveData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pointCount)]</span><br><span class="line">        dataSpiral2 = [QCPCurveData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pointCount)]</span><br><span class="line">        dataDeltoid = [QCPCurveData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pointCount)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pointCount):</span><br><span class="line">            phi = i/(pointCount-<span class="number">1</span>)*<span class="number">8</span>*math.pi</span><br><span class="line">            theta = i/(pointCount-<span class="number">1</span>)*<span class="number">2</span>*math.pi</span><br><span class="line">            dataSpiral1[i] = QCPCurveData(i, math.sqrt(phi)*math.cos(phi), math.sqrt(phi)*math.sin(phi))</span><br><span class="line">            dataSpiral2[i] = QCPCurveData(i, -dataSpiral1[i].key, -dataSpiral1[i].value)</span><br><span class="line">            dataDeltoid[i] = QCPCurveData(i, <span class="number">2</span>*math.cos(<span class="number">2</span>*theta)+math.cos(<span class="number">1</span>*theta)+<span class="number">2</span>*math.sin(theta), <span class="number">2</span>*math.sin(<span class="number">2</span>*theta)-math.sin(<span class="number">1</span>*theta))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the data to the curves; we know t (i in loop above) is ascending, so set alreadySorted=True (saves an extra internal sort):</span></span><br><span class="line">        self.fermatSpiral1.data().<span class="built_in">set</span>(dataSpiral1, <span class="literal">True</span>)</span><br><span class="line">        self.fermatSpiral2.data().<span class="built_in">set</span>(dataSpiral2, <span class="literal">True</span>)</span><br><span class="line">        self.deltoidRadial.data().<span class="built_in">set</span>(dataDeltoid, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># color the curves:</span></span><br><span class="line">        self.fermatSpiral1.setPen(QPen(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)))</span><br><span class="line">        self.fermatSpiral1.setBrush(QBrush(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">20</span>)))</span><br><span class="line">        self.fermatSpiral2.setPen(QPen(QColor(<span class="number">255</span>, <span class="number">120</span>, <span class="number">0</span>)))</span><br><span class="line">        self.fermatSpiral2.setBrush(QBrush(QColor(<span class="number">255</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">30</span>)))</span><br><span class="line">        radialGrad = QRadialGradient(QPointF(<span class="number">310</span>, <span class="number">180</span>), <span class="number">200</span>)</span><br><span class="line">        radialGrad.setColorAt(<span class="number">0</span>, QColor(<span class="number">170</span>, <span class="number">20</span>, <span class="number">240</span>, <span class="number">100</span>))</span><br><span class="line">        radialGrad.setColorAt(<span class="number">0.5</span>, QColor(<span class="number">20</span>, <span class="number">10</span>, <span class="number">255</span>, <span class="number">40</span>))</span><br><span class="line">        radialGrad.setColorAt(<span class="number">1</span>,QColor(<span class="number">120</span>, <span class="number">20</span>, <span class="number">240</span>, <span class="number">10</span>))</span><br><span class="line">        self.deltoidRadial.setPen(QPen(QColor(<span class="number">170</span>, <span class="number">20</span>, <span class="number">240</span>)))</span><br><span class="line">        self.deltoidRadial.setBrush(QBrush(radialGrad))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set some basic customPlot config:</span></span><br><span class="line">        self.customPlot.setInteractions(QCP.iRangeDrag | QCP.iRangeZoom | QCP.iSelectPlottables)</span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/02.png" alt=""></p><h2 id="Bar-Chart-Demo">Bar Chart Demo</h2><blockquote><p>Three stacked bar charts with manual x axis tick labels</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QBrush, QFont, QLinearGradient</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPBars, QCP, QCPAxisTickerText</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Bar Chart Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set dark background gradient:</span></span><br><span class="line">        gradient = QLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">400</span>)</span><br><span class="line">        gradient.setColorAt(<span class="number">0</span>, QColor(<span class="number">90</span>, <span class="number">90</span>, <span class="number">90</span>))</span><br><span class="line">        gradient.setColorAt(<span class="number">0.38</span>, QColor(<span class="number">105</span>, <span class="number">105</span>, <span class="number">105</span>))</span><br><span class="line">        gradient.setColorAt(<span class="number">1</span>, QColor(<span class="number">70</span>, <span class="number">70</span>, <span class="number">70</span>))</span><br><span class="line">        self.customPlot.setBackground(QBrush(gradient))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create empty bar chart objects:</span></span><br><span class="line">        self.regen = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.nuclear = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.fossil = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.regen.setAntialiased(<span class="literal">False</span>) <span class="comment"># gives more crisp, pixel aligned bar borders</span></span><br><span class="line">        self.nuclear.setAntialiased(<span class="literal">False</span>)</span><br><span class="line">        self.fossil.setAntialiased(<span class="literal">False</span>)</span><br><span class="line">        self.regen.setStackingGap(<span class="number">1</span>)</span><br><span class="line">        self.nuclear.setStackingGap(<span class="number">1</span>)</span><br><span class="line">        self.fossil.setStackingGap(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># set names and colors:</span></span><br><span class="line">        self.fossil.setName(<span class="string">&quot;Fossil fuels&quot;</span>)</span><br><span class="line">        self.fossil.setPen(QPen(QColor(<span class="number">111</span>, <span class="number">9</span>, <span class="number">176</span>).lighter(<span class="number">170</span>)))</span><br><span class="line">        self.fossil.setBrush(QColor(<span class="number">111</span>, <span class="number">9</span>, <span class="number">176</span>))</span><br><span class="line">        self.nuclear.setName(<span class="string">&quot;Nuclear&quot;</span>)</span><br><span class="line">        self.nuclear.setPen(QPen(QColor(<span class="number">250</span>, <span class="number">170</span>, <span class="number">20</span>).lighter(<span class="number">150</span>)))</span><br><span class="line">        self.nuclear.setBrush(QColor(<span class="number">250</span>, <span class="number">170</span>, <span class="number">20</span>))</span><br><span class="line">        self.regen.setName(<span class="string">&quot;Regenerative&quot;</span>)</span><br><span class="line">        self.regen.setPen(QPen(QColor(<span class="number">0</span>, <span class="number">168</span>, <span class="number">140</span>).lighter(<span class="number">130</span>)))</span><br><span class="line">        self.regen.setBrush(QColor(<span class="number">0</span>, <span class="number">168</span>, <span class="number">140</span>))</span><br><span class="line">        <span class="comment"># stack bars on top of each other:</span></span><br><span class="line">        self.nuclear.moveAbove(self.fossil)</span><br><span class="line">        self.regen.moveAbove(self.nuclear)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare x axis with country labels:</span></span><br><span class="line">        ticks = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">        labels = [<span class="string">&quot;USA&quot;</span>, <span class="string">&quot;Japan&quot;</span>, <span class="string">&quot;Germany&quot;</span>, <span class="string">&quot;France&quot;</span>, <span class="string">&quot;UK&quot;</span>, <span class="string">&quot;Italy&quot;</span>, <span class="string">&quot;Canada&quot;</span>]</span><br><span class="line">        textTicker = QCPAxisTickerText()</span><br><span class="line">        textTicker.addTicks(ticks, labels)</span><br><span class="line">        self.customPlot.xAxis.setTicker(textTicker)</span><br><span class="line">        self.customPlot.xAxis.setTickLabelRotation(<span class="number">60</span>)</span><br><span class="line">        self.customPlot.xAxis.setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLength(<span class="number">0</span>, <span class="number">4</span>)</span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">0</span>, <span class="number">8</span>)</span><br><span class="line">        self.customPlot.xAxis.setBasePen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.xAxis.setTickPen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.xAxis.grid().setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis.grid().setPen(QPen(QColor(<span class="number">130</span>, <span class="number">130</span>, <span class="number">130</span>), <span class="number">0</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.xAxis.setTickLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.xAxis.setLabelColor(Qt.white)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare y axis:</span></span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">12.1</span>)</span><br><span class="line">        self.customPlot.yAxis.setPadding(<span class="number">5</span>) <span class="comment"># a bit more space to the left border</span></span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;Power Consumption in\nKilowatts per Capita (2007)&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setBasePen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.yAxis.setTickPen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.yAxis.setSubTickPen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis.setTickLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.yAxis.setLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.yAxis.grid().setPen(QPen(QColor(<span class="number">130</span>, <span class="number">130</span>, <span class="number">130</span>), <span class="number">0</span>, Qt.SolidLine))</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridPen(QPen(QColor(<span class="number">130</span>, <span class="number">130</span>, <span class="number">130</span>), <span class="number">0</span>, Qt.DotLine))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add data:</span></span><br><span class="line">        self.fossilData  = [<span class="number">0.86</span>*<span class="number">10.5</span>, <span class="number">0.83</span>*<span class="number">5.5</span>, <span class="number">0.84</span>*<span class="number">5.5</span>, <span class="number">0.52</span>*<span class="number">5.8</span>, <span class="number">0.89</span>*<span class="number">5.2</span>, <span class="number">0.90</span>*<span class="number">4.2</span>, <span class="number">0.67</span>*<span class="number">11.2</span>]</span><br><span class="line">        self.nuclearData = [<span class="number">0.08</span>*<span class="number">10.5</span>, <span class="number">0.12</span>*<span class="number">5.5</span>, <span class="number">0.40</span>*<span class="number">5.8</span>, <span class="number">0.09</span>*<span class="number">5.2</span>, <span class="number">0.00</span>*<span class="number">4.2</span>, <span class="number">0.07</span>*<span class="number">11.2</span>]</span><br><span class="line">        self.regenData   = [<span class="number">0.06</span>*<span class="number">10.5</span>, <span class="number">0.05</span>*<span class="number">5.5</span>, <span class="number">0.04</span>*<span class="number">5.5</span>, <span class="number">0.06</span>*<span class="number">5.8</span>, <span class="number">0.02</span>*<span class="number">5.2</span>, <span class="number">0.07</span>*<span class="number">4.2</span>, <span class="number">0.25</span>*<span class="number">11.2</span>]</span><br><span class="line">        self.fossil.setData(ticks, self.fossilData)</span><br><span class="line">        self.nuclear.setData(ticks, self.nuclearData)</span><br><span class="line">        self.regen.setData(ticks, self.regenData)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup legend:</span></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, Qt.AlignTop|Qt.AlignHCenter)</span><br><span class="line">        self.customPlot.legend.setBrush(QColor(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">100</span>))</span><br><span class="line">        self.customPlot.legend.setBorderPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        legendFont = QFont()</span><br><span class="line">        legendFont.setPointSize(<span class="number">10</span>)</span><br><span class="line">        self.customPlot.legend.setFont(legendFont)</span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/03.png" alt=""></p><h2 id="Statistical-Box-Demo">Statistical Box Demo</h2><blockquote><p>Statistical 5-parameter-box-plot with outliers</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QColor, QBrush</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPStatisticalBox, QCP, QCPAxisTickerText</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Statistical Box Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        statistical = QCPStatisticalBox(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        boxBrush = QBrush(QColor(<span class="number">60</span>, <span class="number">60</span>, <span class="number">255</span>, <span class="number">100</span>))</span><br><span class="line">        boxBrush.setStyle(Qt.Dense6Pattern)  <span class="comment"># make it look oldschool</span></span><br><span class="line">        statistical.setBrush(boxBrush)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># specify data:</span></span><br><span class="line">        statistical.addData(<span class="number">1</span>, <span class="number">1.1</span>, <span class="number">1.9</span>, <span class="number">2.25</span>, <span class="number">2.7</span>, <span class="number">4.2</span>)</span><br><span class="line">        statistical.addData(<span class="number">2</span>, <span class="number">0.8</span>, <span class="number">1.6</span>, <span class="number">2.2</span>, <span class="number">3.2</span>, <span class="number">4.9</span>, [<span class="number">0.7</span>, <span class="number">0.34</span>, <span class="number">0.45</span>, <span class="number">6.2</span>, <span class="number">5.84</span>])  <span class="comment"># provide some outliers as list</span></span><br><span class="line">        statistical.addData(<span class="number">3</span>, <span class="number">0.2</span>, <span class="number">0.7</span>, <span class="number">1.1</span>, <span class="number">1.6</span>, <span class="number">2.9</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare manual x axis labels:</span></span><br><span class="line">        self.customPlot.xAxis.setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLength(<span class="number">0</span>, <span class="number">4</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLabelRotation(<span class="number">20</span>)</span><br><span class="line">        textTicker = QCPAxisTickerText()</span><br><span class="line">        textTicker.addTick(<span class="number">1</span>, <span class="string">&quot;Sample 1&quot;</span>)</span><br><span class="line">        textTicker.addTick(<span class="number">2</span>, <span class="string">&quot;Sample 2&quot;</span>)</span><br><span class="line">        textTicker.addTick(<span class="number">3</span>, <span class="string">&quot;Control Group&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.setTicker(textTicker)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare axes:</span></span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;O₂ Absorption [mg]&quot;</span>)</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        self.customPlot.xAxis.scaleRange(<span class="number">1.7</span>, self.customPlot.xAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">7</span>)</span><br><span class="line">        self.customPlot.setInteractions(QCP.iRangeDrag | QCP.iRangeZoom)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/04.png" alt=""></p> ]]>
</content>
 
<summary type="html">基于 Pyqt 的 QCustomPlot 简介、安装以及实用代码示例分享续篇二。</summary>
  
<category term="python" scheme="https://www.nixgnauhcuy.cn/categories/python/"/>
 
<category term="python" scheme="https://www.nixgnauhcuy.cn/tags/python/"/>

<category term="pyqt" scheme="https://www.nixgnauhcuy.cn/tags/pyqt/"/>

<category term="QCustomPlot" scheme="https://www.nixgnauhcuy.cn/tags/QCustomPlot/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>Pyqt QCustomPlot 简介、安装与实用代码示例（二）</title>
<link href="https://www.nixgnauhcuy.cn/f1b80f317887/"/>
<id>https://www.nixgnauhcuy.cn/f1b80f317887/</id>
<published>2024-06-13T15:02:04.000Z</published>
<updated>2024-06-13T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <blockquote><p>完整代码我已经上传到 Github 上了，可前往 <a href="https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study">https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study</a> 获取。<br>完整文章路径：</p><ul><li><a href="https://www.nixgnauhcuy.cn/8d34424033d0/">Pyqt QCustomPlot 简介、安装与实用代码示例（一） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/f1b80f317887/">Pyqt QCustomPlot 简介、安装与实用代码示例（二） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/">Pyqt QCustomPlot 简介、安装与实用代码示例（三） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/423b1931ce58/">Pyqt QCustomPlot 简介、安装与实用代码示例（四） | nixgnauhcuy</a></li></ul></blockquote><h1>前言</h1><p>继上文，继续补充官方示例 demo 实现~</p><h1>实用代码示例</h1><h2 id="彩色图演示">彩色图演示</h2><blockquote><p>A 2D color map with color scale. Color scales can be dragged and zoomed just like axes</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPAxis, QCPColorScale, QCPColorMap</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPColorGradient, QCPMarginGroup, QCP, QCPRange</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;彩色地图演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure axis rect:</span></span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom)) <span class="comment"># this will also allow rescaling the color scale by dragging/zooming</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;y&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set up the QCPColorMap:</span></span><br><span class="line">        self.colorMap = QCPColorMap(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        nx = <span class="number">200</span></span><br><span class="line">        ny = <span class="number">200</span></span><br><span class="line">        self.colorMap.data().setSize(nx, ny) <span class="comment"># we want the color map to have nx * ny data points</span></span><br><span class="line">        self.colorMap.data().setRange(QCPRange(-<span class="number">4</span>, <span class="number">4</span>), QCPRange(-<span class="number">4</span>, <span class="number">4</span>)) <span class="comment"># and span the coordinate range -4..4 in both key (x) and value (y) dimensions</span></span><br><span class="line">        <span class="comment"># now we assign some data, by accessing the QCPColorMapData instance of the color map:</span></span><br><span class="line">        x, y, z = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> xIndex <span class="keyword">in</span> <span class="built_in">range</span>(nx):</span><br><span class="line">            <span class="keyword">for</span> yIndex <span class="keyword">in</span> <span class="built_in">range</span>(ny):</span><br><span class="line">                x, y =self.colorMap.data().cellToCoord(xIndex, yIndex)</span><br><span class="line">                r = <span class="number">3</span>*math.sqrt(x*x+y*y)+<span class="number">1e-2</span></span><br><span class="line">                z = <span class="number">2</span>*x*(math.cos(r+<span class="number">2</span>)/r-math.sin(r+<span class="number">2</span>)/r) <span class="comment"># the B field strength of dipole radiation (modulo physical constants)</span></span><br><span class="line">                self.colorMap.data().setCell(xIndex, yIndex, z)</span><br><span class="line">        <span class="comment"># add a color scale:</span></span><br><span class="line">        self.colorScale = QCPColorScale(self.customPlot)</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">1</span>, self.colorScale) <span class="comment"># add it to the right of the main axis rect</span></span><br><span class="line">        self.colorScale.setType(QCPAxis.atRight) <span class="comment"># scale shall be vertical bar with tick/axis labels right (actually atRight is already the default)</span></span><br><span class="line">        self.colorMap.setColorScale(self.colorScale) <span class="comment"># associate the color map with the color scale</span></span><br><span class="line">        self.colorScale.axis().setLabel(<span class="string">&quot;Magnetic Field Strength&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set the color gradient of the color map to one of the presets:</span></span><br><span class="line">        self.colorMap.setGradient(QCPColorGradient(QCPColorGradient.gpPolar))</span><br><span class="line">        <span class="comment"># we could have also created a QCPColorGradient instance and added own colors to</span></span><br><span class="line">        <span class="comment"># the gradient, see the documentation of QCPColorGradient for what&#x27;s possible.</span></span><br><span class="line"></span><br><span class="line">        self.colorMap.rescaleDataRange() </span><br><span class="line"></span><br><span class="line">        <span class="comment"># make sure the axis rect and color scale synchronize their bottom and top margins (so they line up):</span></span><br><span class="line">        marginGroup = QCPMarginGroup(self.customPlot)</span><br><span class="line">        self.customPlot.axisRect().setMarginGroup(QCP.msBottom|QCP.msTop, marginGroup)</span><br><span class="line">        self.colorScale.setMarginGroup(QCP.msBottom|QCP.msTop, marginGroup)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># rescale the key (x) and value (y) axes so the whole color map is visible:</span></span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/00.png" alt=""></p><h2 id="散点像素图演示">散点像素图演示</h2><blockquote><p>Pixmap scatter points and a multi-lined axis label, as well as a plot title at the top</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont, QBrush, QPixmap</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPTextElement, QCPScatterStyle, QCPGraph</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;散点像素图演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.axisRect().setBackground(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph().setLineStyle(QCPGraph.lsLine)</span><br><span class="line">        pen = QPen(QColor(<span class="number">255</span>, <span class="number">200</span>, <span class="number">20</span>, <span class="number">200</span>))</span><br><span class="line">        pen.setStyle(Qt.DashLine)</span><br><span class="line">        pen.setWidthF(<span class="number">2.5</span>)</span><br><span class="line">        self.customPlot.graph().setPen(pen)</span><br><span class="line">        self.customPlot.graph().setBrush(QBrush(QColor(<span class="number">255</span>,<span class="number">200</span>,<span class="number">20</span>,<span class="number">70</span>)))</span><br><span class="line">        self.customPlot.graph().setScatterStyle(QCPScatterStyle(QPixmap(<span class="string">&quot;./tmp.png&quot;</span>)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set graph name, will show up in legend next to icon:</span></span><br><span class="line">        self.customPlot.graph().setName(<span class="string">&quot;Data from Photovoltaic\nenergy barometer 2011&quot;</span>)</span><br><span class="line">        <span class="comment"># set data:</span></span><br><span class="line">        year = [<span class="number">2005</span>, <span class="number">2006</span>, <span class="number">2007</span>, <span class="number">2008</span>, <span class="number">2009</span>, <span class="number">2010</span>, <span class="number">2011</span>]</span><br><span class="line">        value = [<span class="number">2.17</span>, <span class="number">3.42</span>, <span class="number">4.94</span>, <span class="number">10.38</span>, <span class="number">15.86</span>, <span class="number">29.33</span>, <span class="number">52.1</span>]</span><br><span class="line">        self.customPlot.graph().setData(year, value)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set title of plot:</span></span><br><span class="line">        self.customPlot.plotLayout().insertRow(<span class="number">0</span>)</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">0</span>, QCPTextElement(self.customPlot, <span class="string">&quot;Regenerative Energies&quot;</span>, QFont(<span class="string">&quot;sans&quot;</span>, <span class="number">12</span>, QFont.Bold)))</span><br><span class="line">        <span class="comment"># axis configurations:</span></span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;Year&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;Installed Gigawatts of\nphotovoltaic in the European Union&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis2.setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">2004.5</span>, <span class="number">2011.5</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">52</span>)</span><br><span class="line">        <span class="comment"># setup legend:</span></span><br><span class="line">        self.customPlot.legend.setFont(QFont(self.font().family(), <span class="number">7</span>))</span><br><span class="line">        self.customPlot.legend.setIconSize(<span class="number">50</span>, <span class="number">20</span>)</span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, Qt.AlignLeft | Qt.AlignTop)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/01.png" alt=""></p><blockquote><p>官方 demo 的背景图我没有，随便用黑色底了，太阳 logo 也没有，随便找了一个，效果一样就行~</p></blockquote><h2 id="实时数据演示">实时数据演示</h2><blockquote><p>Real time generated data and time bottom axis</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QTime, QTimer</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPAxisTickerTime</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;实时数据演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.lastPointKey = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(QPen(QColor(<span class="number">40</span>, <span class="number">110</span>, <span class="number">255</span>)))</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(QPen(QColor(<span class="number">255</span>, <span class="number">110</span>, <span class="number">40</span>)))</span><br><span class="line"></span><br><span class="line">        timeTicker = QCPAxisTickerTime()</span><br><span class="line">        timeTicker.setTimeFormat(<span class="string">&quot;%h:%m:%s&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.setTicker(timeTicker)</span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line">        self.customPlot.yAxis.setRange(-<span class="number">1.2</span>, <span class="number">1.2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make left and bottom axes transfer their ranges to right and top axes:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged.connect(self.customPlot.xAxis2.setRange)</span><br><span class="line">        self.customPlot.yAxis.rangeChanged.connect(self.customPlot.yAxis2.setRange)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup a timer that repeatedly calls MainWindow::realtimeDataSlot:</span></span><br><span class="line">        self.curTime = QTime.currentTime()</span><br><span class="line">        self.dataTimer = QTimer(self)</span><br><span class="line">        self.dataTimer.timeout.connect(self.realtimeDataSlot)</span><br><span class="line">        self.dataTimer.start(<span class="number">0</span>) <span class="comment"># Interval 0 means to refresh as fast as possible</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">realtimeDataSlot</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># calculate two new data points:</span></span><br><span class="line">        key = self.curTime.msecsTo(QTime.currentTime())/<span class="number">1000.0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> key-self.lastPointKey &gt; <span class="number">0.002</span>: <span class="comment"># at most add point every 2 ms</span></span><br><span class="line">            <span class="comment"># add data to lines:</span></span><br><span class="line">            self.customPlot.graph(<span class="number">0</span>).addData(key, math.sin(key)+random.random()*<span class="number">1</span>*math.sin(key/<span class="number">0.3843</span>))</span><br><span class="line">            self.customPlot.graph(<span class="number">1</span>).addData(key, math.cos(key)+random.random()*<span class="number">0.5</span>*math.sin(key/<span class="number">0.4364</span>))</span><br><span class="line">            <span class="comment"># rescale value (vertical) axis to fit the current data:</span></span><br><span class="line">            <span class="comment"># self.customPlot.graph(0).rescaleValueAxis()</span></span><br><span class="line">            <span class="comment"># self.customPlot.graph(1).rescaleValueAxis(True)</span></span><br><span class="line">            self.lastPointKey = key</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make key axis range scroll with the data (at a constant range size of 8):</span></span><br><span class="line">        self.customPlot.xAxis.setRange(key, <span class="number">8</span>, Qt.AlignRight)</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/02.gif" alt=""></p><h2 id="多轴演示">多轴演示</h2><blockquote><p>Multiple plot styles with different key/value axes and pi tick labeling at top axis</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont, QBrush</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QLocale</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle, QCPTextElement, QCPAxisTickerPi, QCPErrorBars</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;多轴演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.setLocale(QLocale(QLocale.English, QLocale.UnitedKingdom)) <span class="comment"># period as decimal separator and comma as thousand separator</span></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        legendFont = self.font()  <span class="comment"># start out with MainWindow&#x27;s font..</span></span><br><span class="line">        legendFont.setPointSize(<span class="number">9</span>) <span class="comment"># and make a bit smaller for legend</span></span><br><span class="line">        self.customPlot.legend.setFont(legendFont)</span><br><span class="line">        self.customPlot.legend.setBrush(QBrush(QColor(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">230</span>)))</span><br><span class="line">        <span class="comment"># by default, the legend is in the inset layout of the main axis rect. So this is how we access it to change legend placement:</span></span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, Qt.AlignBottom|Qt.AlignRight)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 0: key axis left, value axis bottom</span></span><br><span class="line">        <span class="comment"># will contain left maxwell-like function</span></span><br><span class="line">        self.customPlot.addGraph(self.customPlot.yAxis, self.customPlot.xAxis)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(QPen(QColor(<span class="number">255</span>, <span class="number">100</span>, <span class="number">0</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setLineStyle(QCPGraph.lsLine)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssDisc, <span class="number">5</span>))</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setName(<span class="string">&quot;Left maxwell function&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 1: key axis bottom, value axis left (those are the default axes)</span></span><br><span class="line">        <span class="comment"># will contain bottom maxwell-like function with error bars</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(QPen(Qt.red))</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setLineStyle(QCPGraph.lsStepCenter)</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, Qt.red, Qt.white, <span class="number">7</span>))</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setName(<span class="string">&quot;Bottom maxwell function&quot;</span>)</span><br><span class="line">        errorBars = QCPErrorBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        errorBars.removeFromLegend()</span><br><span class="line">        errorBars.setDataPlottable(self.customPlot.graph(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 2: key axis top, value axis right</span></span><br><span class="line">        <span class="comment"># will contain high frequency sine with low frequency beating:</span></span><br><span class="line">        self.customPlot.addGraph(self.customPlot.xAxis2, self.customPlot.yAxis2)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setPen(QPen(Qt.blue))</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setName(<span class="string">&quot;High frequency sine&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 3: same axes as graph 2</span></span><br><span class="line">        <span class="comment"># will contain low frequency beating envelope of graph 2</span></span><br><span class="line">        self.customPlot.addGraph(self.customPlot.xAxis2, self.customPlot.yAxis2)</span><br><span class="line">        blueDotPen = QPen(QColor(<span class="number">30</span>, <span class="number">40</span>, <span class="number">255</span>, <span class="number">150</span>))</span><br><span class="line">        blueDotPen.setStyle(Qt.DotLine)</span><br><span class="line">        blueDotPen.setWidthF(<span class="number">4</span>)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setPen(blueDotPen)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setName(<span class="string">&quot;Sine envelope&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 4: key axis right, value axis top</span></span><br><span class="line">        <span class="comment"># will contain parabolically distributed data points with some random perturbance</span></span><br><span class="line">        self.customPlot.addGraph(self.customPlot.yAxis2, self.customPlot.xAxis2)</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setPen(QPen(QColor(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>, <span class="number">255</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setLineStyle(QCPGraph.lsNone)</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, <span class="number">4</span>))</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setName(<span class="string">&quot;Some random data around\na quadratic function&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># generate data, just playing with numbers, not much to learn here:</span></span><br><span class="line">        x0 = [<span class="number">3</span>*i/<span class="number">25.0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>)]</span><br><span class="line">        y0 = [math.exp(-x*x*<span class="number">0.8</span>)*(x*x+x) <span class="keyword">for</span> x <span class="keyword">in</span> x0]</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x0, y0)</span><br><span class="line"></span><br><span class="line">        x1 = [<span class="number">3</span>*i/<span class="number">15.0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>)]</span><br><span class="line">        y1 = [math.exp(-x*x)*(x*x)*<span class="number">2.6</span> <span class="keyword">for</span> x <span class="keyword">in</span> x1]</span><br><span class="line">        y1err = [y*<span class="number">0.25</span> <span class="keyword">for</span> y <span class="keyword">in</span> y1]</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setData(x1, y1)</span><br><span class="line">        errorBars.setData(y1err, y1err)</span><br><span class="line"></span><br><span class="line">        x2 = [i/<span class="number">250.0</span>*<span class="number">3</span>*math.pi <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>)]</span><br><span class="line">        y2 = [math.sin(x*<span class="number">12</span>)*math.cos(x)*<span class="number">10</span> <span class="keyword">for</span> x <span class="keyword">in</span> x2]</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setData(x2, y2)</span><br><span class="line"></span><br><span class="line">        x3 = x2</span><br><span class="line">        y3 = [math.cos(x)*<span class="number">10</span> <span class="keyword">for</span> x <span class="keyword">in</span> x3]</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setData(x3, y3)</span><br><span class="line"></span><br><span class="line">        x4 = [i/<span class="number">250.0</span>*<span class="number">100</span>-<span class="number">50</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>)]</span><br><span class="line">        y4 = [<span class="number">0.01</span>*x*x + <span class="number">1.5</span>*(random.random()-<span class="number">0.5</span>) + <span class="number">1.5</span>*math.pi <span class="keyword">for</span> x <span class="keyword">in</span> x4]</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setData(x4, y4)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># activate top and right axes, which are invisible by default:</span></span><br><span class="line">        self.customPlot.xAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set ranges appropriate to show data:</span></span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">0</span>, <span class="number">2.7</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">2.6</span>)</span><br><span class="line">        self.customPlot.xAxis2.setRange(<span class="number">0</span>, <span class="number">3.0</span>*math.pi)</span><br><span class="line">        self.customPlot.yAxis2.setRange(-<span class="number">70</span>, <span class="number">35</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set pi ticks on top axis:</span></span><br><span class="line">        self.customPlot.xAxis2.setTicker(QCPAxisTickerPi())</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add title layout element:</span></span><br><span class="line">        self.customPlot.plotLayout().insertRow(<span class="number">0</span>)</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">0</span>, QCPTextElement(self.customPlot, <span class="string">&quot;Way too many graphs in one plot&quot;</span>, QFont(<span class="string">&quot;sans&quot;</span>, <span class="number">12</span>, QFont.Bold)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set labels:</span></span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;Bottom axis with outward ticks&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;Left axis label&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis2.setLabel(<span class="string">&quot;Top axis label&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis2.setLabel(<span class="string">&quot;Right axis label&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make ticks on bottom axis go outward:</span></span><br><span class="line">        self.customPlot.xAxis.setTickLength(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">        self.customPlot.xAxis.setSubTickLength(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make ticks on right axis go inward and outward:</span></span><br><span class="line">        self.customPlot.yAxis2.setTickLength(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">        self.customPlot.yAxis2.setSubTickLength(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/03.png" alt=""></p><h2 id="对数轴演示">对数轴演示</h2><blockquote><p>Logarithmic axis scaling. Note correct display of the sine function crossing zero in negative infinity</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QBrush</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPGraphData, QCP, QCPAxis, QCPAxisTickerLog</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;对数轴演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.setNoAntialiasingOnDrag(<span class="literal">True</span>) <span class="comment"># more performance/responsiveness during dragging</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        pen = QPen(QColor(<span class="number">255</span>,<span class="number">170</span>,<span class="number">100</span>))</span><br><span class="line">        pen.setWidth(<span class="number">2</span>)</span><br><span class="line">        pen.setStyle(Qt.DotLine)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setName(<span class="string">&quot;x&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(QPen(Qt.red))</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setBrush(QBrush(QColor(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">20</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setName(<span class="string">&quot;-sin(x)exp(x)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setPen(QPen(Qt.blue))</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setBrush(QBrush(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">20</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setName(<span class="string">&quot; sin(x)exp(x)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph ()</span><br><span class="line">        pen = QPen(QColor(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">        pen.setWidth(<span class="number">1</span>)</span><br><span class="line">        pen.setStyle(Qt.DashLine)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setPen(pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setBrush(QBrush(QColor(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">15</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setLineStyle(QCPGraph.lsStepCenter)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setName(<span class="string">&quot;x!&quot;</span>)</span><br><span class="line"></span><br><span class="line">        dataCount = <span class="number">200</span></span><br><span class="line">        dataFactorialCount = <span class="number">21</span></span><br><span class="line">        dataLinear = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataCount)]</span><br><span class="line">        dataMinusSinExp = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataCount)]</span><br><span class="line">        dataPlusSinExp = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataCount)]</span><br><span class="line">        dataFactorial = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataFactorialCount)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataCount):</span><br><span class="line">            dataLinear[i].key = i/<span class="number">10.0</span></span><br><span class="line">            dataLinear[i].value = dataLinear[i].key</span><br><span class="line">            dataMinusSinExp[i].key = i/<span class="number">10.0</span></span><br><span class="line">            dataMinusSinExp[i].value = -math.sin(dataMinusSinExp[i].key)*math.exp(dataMinusSinExp[i].key)</span><br><span class="line">            dataPlusSinExp[i].key = i/<span class="number">10.0</span></span><br><span class="line">            dataPlusSinExp[i].value = math.sin(dataPlusSinExp[i].key)*math.exp(dataPlusSinExp[i].key)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataFactorialCount):</span><br><span class="line">            dataFactorial[i].key = i</span><br><span class="line">            dataFactorial[i].value = <span class="number">1.0</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i+<span class="number">1</span>):</span><br><span class="line">                dataFactorial[i].value *= k</span><br><span class="line"></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).data().<span class="built_in">set</span>(dataLinear)</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).data().<span class="built_in">set</span>(dataMinusSinExp)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).data().<span class="built_in">set</span>(dataPlusSinExp)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).data().<span class="built_in">set</span>(dataFactorial)</span><br><span class="line">        </span><br><span class="line">        self.customPlot.xAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis.setScaleType(QCPAxis.stLogarithmic)</span><br><span class="line">        self.customPlot.yAxis2.setScaleType(QCPAxis.stLogarithmic)</span><br><span class="line">        logTicker = QCPAxisTickerLog()</span><br><span class="line">        self.customPlot.yAxis.setTicker(logTicker)</span><br><span class="line">        self.customPlot.yAxis2.setTicker(logTicker)</span><br><span class="line">        self.customPlot.yAxis.setNumberFormat(<span class="string">&quot;eb&quot;</span>) <span class="comment"># e = exponential, b = beautiful decimal powers</span></span><br><span class="line">        self.customPlot.yAxis.setNumberPrecision(<span class="number">0</span>) <span class="comment"># makes sure &quot;1*10^4&quot; is displayed only as &quot;10^4&quot;</span></span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">0</span>, <span class="number">19.9</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">1e-2</span>, <span class="number">1e10</span>)</span><br><span class="line">        <span class="comment"># make range draggable and zoomable:</span></span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom))</span><br><span class="line">        <span class="comment"># make top right axes clones of bottom left axes:</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line">        <span class="comment"># connect signals so top and right axes move in sync with bottom and left axes:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged.connect(self.customPlot.xAxis2.setRange)</span><br><span class="line">        self.customPlot.yAxis.rangeChanged.connect(self.customPlot.yAxis2.setRange)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setBrush(QBrush(QColor(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">150</span>)))</span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, Qt.AlignLeft|Qt.AlignTop) <span class="comment"># make legend align in top left corner or axis rect</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/04.png" alt=""></p><h1>结语</h1><p>还剩下一些示例，待续篇更新！~</p> ]]>
</content>
 
<summary type="html">基于 Pyqt 的 QCustomPlot 简介、安装以及实用代码示例分享续篇一。</summary>
  
<category term="python" scheme="https://www.nixgnauhcuy.cn/categories/python/"/>
 
<category term="python" scheme="https://www.nixgnauhcuy.cn/tags/python/"/>

<category term="pyqt" scheme="https://www.nixgnauhcuy.cn/tags/pyqt/"/>

<category term="QCustomPlot" scheme="https://www.nixgnauhcuy.cn/tags/QCustomPlot/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>Pyqt QCustomPlot 简介、安装与实用代码示例（一）</title>
<link href="https://www.nixgnauhcuy.cn/8d34424033d0/"/>
<id>https://www.nixgnauhcuy.cn/8d34424033d0/</id>
<published>2024-06-12T15:02:04.000Z</published>
<updated>2024-06-12T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <blockquote><p>完整代码我已经上传到 Github 上了，可前往 <a href="https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study">https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study</a> 获取。<br>完整文章路径：</p><ul><li><a href="https://www.nixgnauhcuy.cn/8d34424033d0/">Pyqt QCustomPlot 简介、安装与实用代码示例（一） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/f1b80f317887/">Pyqt QCustomPlot 简介、安装与实用代码示例（二） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/">Pyqt QCustomPlot 简介、安装与实用代码示例（三） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/423b1931ce58/">Pyqt QCustomPlot 简介、安装与实用代码示例（四） | nixgnauhcuy</a></li></ul></blockquote><h1>简介</h1><p><strong><a href="https://www.qcustomplot.com/">QCustomPlot</a></strong> 是一个用于绘图和数据可视化的 Qt C++ 小部件。它没有其他依赖项，并且有详细的文档说明。这个绘图库专注于制作高质量的、适合发表的二维图表和图形，同时在实时可视化应用中提供高性能。</p><p><strong>QCustomPlot</strong> 可以导出为多种格式，例如矢量化的 PDF 文件和光栅化图像（如 PNG、JPG 和 BMP）。QCustomPlot 是在应用程序内部显示实时数据以及为其他媒体制作高质量图表的解决方案。</p><blockquote><p><strong>QCustomPlot</strong> is a Qt C++ widget for plotting and data visualization. It has no further dependencies and is <a href="https://www.qcustomplot.com/index.php/support/documentation">well documented</a>. This plotting library focuses on making good looking, publication quality 2D plots, graphs and charts, as well as offering high performance for realtime visualization applications. Have a look at the <a href="https://www.qcustomplot.com/index.php/tutorials/settingup">Setting Up</a> and the <a href="https://www.qcustomplot.com/index.php/tutorials/basicplotting">Basic Plotting</a> tutorials to get started.</p><p>QCustomPlot can export to various formats such as vectorized PDF files and rasterized images like PNG, JPG and BMP. QCustomPlot is the solution for displaying of realtime data inside the application as well as producing high quality plots for other media.</p></blockquote><h1>安装</h1><p>推荐安装 <strong>QCustomPlot_PyQt5</strong>，<strong>QCustomPlot2</strong> 目前许多源都无法下载，目前只有<s>豆瓣源</s>和腾讯源有（豆瓣源已失效）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install QCustomPlot_PyQt5</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">pip install -i https://mirrors.cloud.tencent.com/pypi/simple/ QCustomPlot2</span><br></pre></td></tr></table></figure><h1>实用代码示例</h1><p>官方提供了多个 demo，不过都是使用 qtC++实现的，由于我们使用的 pyqt，故使用 pyqt 实现。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/00.png" alt=""></p><h2 id="带有填充的简单衰减正弦函数及其红色的指数包络线">带有填充的简单衰减正弦函数及其红色的指数包络线</h2><blockquote><p>A simple decaying sine function with fill and its exponential envelope in red</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QBrush, QColor</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCP, QCPAxisTickerTime, QCPRange</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;带有填充的简单衰减正弦函数及其红色的指数包络线&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">400</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add two new graphs and set their look:</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(QPen(Qt.blue)) <span class="comment"># line color blue for first graph</span></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setBrush(QBrush(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">20</span>))) <span class="comment"># first graph will be filled with translucent blue</span></span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(QPen(Qt.red)) <span class="comment"># line color red for second graph</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># generate some points of data (y0 for first, y1 for second graph):</span></span><br><span class="line">        x = []</span><br><span class="line">        y0 = []</span><br><span class="line">        y1 = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">251</span>):</span><br><span class="line">            x.append(i)</span><br><span class="line">            y0.append(math.exp(-i/<span class="number">150.0</span>)*math.cos(i/<span class="number">10.0</span>)) <span class="comment"># exponentially decaying cosine</span></span><br><span class="line">            y1.append(math.exp(-i/<span class="number">150.0</span>)) <span class="comment"># exponential envelope</span></span><br><span class="line"></span><br><span class="line">        self.customPlot.xAxis.setTicker(QCPAxisTickerTime())</span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">0</span>, <span class="number">250</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(-<span class="number">1.1</span>, <span class="number">1.1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure right and top axis to show ticks but no labels:</span></span><br><span class="line">        <span class="comment"># (see QCPAxisRect::setupFullAxesBox for a quicker method to do this)</span></span><br><span class="line">        self.customPlot.xAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass data points to graphs:</span></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x, y0)</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setData(x, y1)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># let the ranges scale themselves so graph 0 fits perfectly in the visible area:</span></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).rescaleAxes()</span><br><span class="line">        <span class="comment"># same thing for graph 1, but only enlarge ranges (in case graph 1 is smaller than graph 0):</span></span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).rescaleAxes(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># Note: we could have also just called customPlot-&gt;rescaleAxes(); instead</span></span><br><span class="line">        <span class="comment"># Allow user to drag axis ranges with mouse, zoom with mouse wheel and select graphs by clicking:</span></span><br><span class="line">        self.customPlot.setInteractions(QCP.iRangeDrag | QCP.iRangeZoom | QCP.iSelectPlottables)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make left and bottom axes always transfer their ranges to right and top axes:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged[QCPRange].connect(self.customPlot.xAxis2.setRange)</span><br><span class="line">        self.customPlot.yAxis.rangeChanged[QCPRange].connect(self.customPlot.yAxis2.setRange)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/01.png" alt=""></p><h2 id="具有数据点的-sinc-函数、相应的误差条和-2–sigma-置信带">具有数据点的 sinc 函数、相应的误差条和 2–sigma 置信带</h2><blockquote><p>sinc function with data points, corresponding error bars and a 2-sigma confidence band</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QBrush, QColor, QFont</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QLocale</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle, QCPErrorBars</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;具有数据点的 sinc 函数、相应的误差条和 2--sigma 置信带&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">400</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setFont(QFont(<span class="string">&quot;Helvetica&quot;</span>,<span class="number">9</span>))</span><br><span class="line">        <span class="comment"># set locale to english, so we get english decimal separator:</span></span><br><span class="line">        self.customPlot.setLocale(QLocale(QLocale.English, QLocale.UnitedKingdom))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add confidence band graphs:</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.pen = QPen(Qt.PenStyle.DotLine)</span><br><span class="line">        self.pen.setWidth(<span class="number">1</span>)</span><br><span class="line">        self.pen.setColor(QColor(<span class="number">180</span>,<span class="number">180</span>,<span class="number">180</span>))</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setName(<span class="string">&quot;Confidence Band 68%&quot;</span>)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(self.pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setBrush(QBrush(QColor(<span class="number">255</span>,<span class="number">50</span>,<span class="number">30</span>,<span class="number">20</span>)))</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.legend.removeItem(self.customPlot.legend.itemCount()-<span class="number">1</span>) <span class="comment"># don&#x27;t show two confidence band graphs in legend</span></span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(self.pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setChannelFillGraph(self.customPlot.graph(<span class="number">1</span>))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># add theory curve graph:</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.pen.setStyle(Qt.PenStyle.DashLine)</span><br><span class="line">        self.pen.setWidth(<span class="number">2</span>)</span><br><span class="line">        self.pen.setColor(Qt.GlobalColor.red)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setPen(self.pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setName(<span class="string">&quot;Theory Curve&quot;</span>)</span><br><span class="line">        <span class="comment"># add data point graph:</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setPen(QPen(Qt.GlobalColor.blue))</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setLineStyle(QCPGraph.lsNone)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCross, <span class="number">4</span>))</span><br><span class="line">        <span class="comment"># add error bars:</span></span><br><span class="line">        self.errorBars = QCPErrorBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.errorBars.removeFromLegend()</span><br><span class="line">        self.errorBars.setAntialiased(<span class="literal">False</span>)</span><br><span class="line">        self.errorBars.setDataPlottable(self.customPlot.graph(<span class="number">3</span>))</span><br><span class="line">        self.errorBars.setPen(QPen(QColor(<span class="number">180</span>,<span class="number">180</span>,<span class="number">180</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setName(<span class="string">&quot;Measurement&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># generate ideal sinc curve data and some randomly perturbed data for scatter plot:</span></span><br><span class="line">        x0 = []</span><br><span class="line">        y0 = []</span><br><span class="line">        yConfUpper = []</span><br><span class="line">        yConfLower = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>):</span><br><span class="line">            x0.append((i/<span class="number">249.0</span>-<span class="number">0.5</span>)*<span class="number">30</span>+<span class="number">0.01</span>) <span class="comment"># by adding a small offset we make sure not do divide by zero in next code line</span></span><br><span class="line">            y0.append(math.sin(x0[i])/x0[i]) <span class="comment"># sinc function</span></span><br><span class="line">            yConfUpper.append(y0[i]+<span class="number">0.15</span>)</span><br><span class="line">            yConfLower.append(y0[i]-<span class="number">0.15</span>)</span><br><span class="line">            x0[i] *= <span class="number">1000</span></span><br><span class="line">        x1 = []</span><br><span class="line">        y1 = []</span><br><span class="line">        y1err = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">            <span class="comment"># generate a gaussian distributed random number:</span></span><br><span class="line">            tmp1 = random.random()</span><br><span class="line">            tmp2 = random.random()</span><br><span class="line">            r = math.sqrt(-<span class="number">2</span>*math.log(tmp1))*math.cos(<span class="number">2</span>*math.pi*tmp2) <span class="comment"># box-muller transform for gaussian distribution</span></span><br><span class="line">            <span class="comment"># set y1 to value of y0 plus a random gaussian pertubation:</span></span><br><span class="line">            x1.append((i/<span class="number">50.0</span>-<span class="number">0.5</span>)*<span class="number">30</span>+<span class="number">0.25</span>)</span><br><span class="line">            y1.append(math.sin(x1[i])/x1[i]+r*<span class="number">0.15</span>)</span><br><span class="line">            x1[i] *= <span class="number">1000</span></span><br><span class="line">            y1err.append(<span class="number">0.15</span>)</span><br><span class="line">        <span class="comment"># pass data to graphs and let QCustomPlot determine the axes ranges so the whole thing is visible:</span></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x0, yConfUpper)</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setData(x0, yConfLower)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setData(x0, y0)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setData(x1, y1)</span><br><span class="line">        self.errorBars.setData(y1err, y1err) <span class="comment"># Wanging: There may be something wrong here</span></span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).rescaleAxes()</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).rescaleAxes(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># setup look of bottom tick labels:</span></span><br><span class="line">        self.customPlot.xAxis.setTickLabelRotation(<span class="number">30</span>)c</span><br><span class="line">        self.customPlot.xAxis.ticker().setTickCount(<span class="number">9</span>)</span><br><span class="line">        self.customPlot.xAxis.setNumberFormat(<span class="string">&quot;ebc&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.setNumberPrecision(<span class="number">1</span>)</span><br><span class="line">        self.customPlot.xAxis.moveRange(-<span class="number">10</span>)</span><br><span class="line">        <span class="comment"># make top right axes clones of bottom left axes. Looks prettier:</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/02.png" alt=""></p><h2 id="几种散点样式的演示">几种散点样式的演示</h2><blockquote><p>A demonstration of several scatter point styles</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont, QPainterPath</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;几种散点样式的演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">400</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setFont(QFont(<span class="string">&quot;Helvetica&quot;</span>, <span class="number">9</span>))</span><br><span class="line">        self.customPlot.legend.setRowSpacing(-<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        shapes = [</span><br><span class="line">            QCPScatterStyle.ssCross, </span><br><span class="line">            QCPScatterStyle.ssPlus, </span><br><span class="line">            QCPScatterStyle.ssCircle, </span><br><span class="line">            QCPScatterStyle.ssDisc, </span><br><span class="line">            QCPScatterStyle.ssSquare, </span><br><span class="line">            QCPScatterStyle.ssDiamond, </span><br><span class="line">            QCPScatterStyle.ssStar, </span><br><span class="line">            QCPScatterStyle.ssTriangle, </span><br><span class="line">            QCPScatterStyle.ssTriangleInverted, </span><br><span class="line">            QCPScatterStyle.ssCrossSquare, </span><br><span class="line">            QCPScatterStyle.ssPlusSquare, </span><br><span class="line">            QCPScatterStyle.ssCrossCircle, </span><br><span class="line">            QCPScatterStyle.ssPlusCircle, </span><br><span class="line">            QCPScatterStyle.ssPeace, </span><br><span class="line">            QCPScatterStyle.ssCustom</span><br><span class="line">        ]</span><br><span class="line">        shapes_names = [</span><br><span class="line">            <span class="string">&quot;ssCross&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssPlus&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssCircle&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssDisc&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssSquare&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssDiamond&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssStar&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssTriangle&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssTriangleInverted&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssCrossSquare&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssPlusSquare&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssCrossCircle&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssPlusCircle&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssPeace&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssCustom&quot;</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">        self.pen = QPen()</span><br><span class="line">        <span class="comment"># add graphs with different scatter styles:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(shapes)):</span><br><span class="line">            self.customPlot.addGraph()</span><br><span class="line">            self.pen.setColor(QColor(<span class="built_in">int</span>(math.sin(i*<span class="number">0.3</span>)*<span class="number">100</span>+<span class="number">100</span>), <span class="built_in">int</span>(math.sin(i*<span class="number">0.6</span>+<span class="number">0.7</span>)*<span class="number">100</span>+<span class="number">100</span>), <span class="built_in">int</span>(math.sin(i*<span class="number">0.4</span>+<span class="number">0.6</span>)*<span class="number">100</span>+<span class="number">100</span>)))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># generate data:</span></span><br><span class="line">            x = [k/<span class="number">10.0</span> * <span class="number">4</span>*<span class="number">3.14</span> + <span class="number">0.01</span> <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">            y = [<span class="number">7</span>*math.sin(x[k])/x[k] + (<span class="built_in">len</span>(shapes)-i)*<span class="number">5</span> <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line"></span><br><span class="line">            self.customPlot.graph(i).setData(x, y)</span><br><span class="line">            self.customPlot.graph(i).rescaleAxes(<span class="literal">True</span>)</span><br><span class="line">            self.customPlot.graph(i).setPen(self.pen)</span><br><span class="line">            self.customPlot.graph(i).setName(shapes_names[i])</span><br><span class="line">            self.customPlot.graph(i).setLineStyle(QCPGraph.lsLine)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># set scatter style:</span></span><br><span class="line">            <span class="keyword">if</span> shapes[i] != QCPScatterStyle.ssCustom:</span><br><span class="line">                self.customPlot.graph(i).setScatterStyle(QCPScatterStyle(shapes[i], <span class="number">10</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                customScatterPath = QPainterPath()</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">                    customScatterPath.cubicTo(math.cos(<span class="number">2</span>*math.pi*j/<span class="number">3.0</span>)*<span class="number">9</span>, math.sin(<span class="number">2</span>*math.pi*j/<span class="number">3.0</span>)*<span class="number">9</span>, math.cos(<span class="number">2</span>*math.pi*(j+<span class="number">0.9</span>)/<span class="number">3.0</span>)*<span class="number">9</span>, math.sin(<span class="number">2</span>*math.pi*(j+<span class="number">0.9</span>)/<span class="number">3.0</span>)*<span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">                self.customPlot.graph(i).setScatterStyle(QCPScatterStyle(customScatterPath, QPen(Qt.black, <span class="number">0</span>), QColor(<span class="number">40</span>, <span class="number">70</span>, <span class="number">255</span>, <span class="number">50</span>), <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set blank axis lines:</span></span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        self.customPlot.xAxis.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis.setTickLabels(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make top right axes clones of bottom left axes:</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/03.png" alt=""></p><h2 id="展示-QCustomPlot-在设计绘图方面的多功能性">展示 QCustomPlot 在设计绘图方面的多功能性</h2><blockquote><p>Demonstrating QCustomPlot’s versatility in styling the plot</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont, QBrush, QLinearGradient</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle, QCPBars, QCPLineEnding</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;展示 QCustomPlot 在设计绘图方面的多功能性&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare data:</span></span><br><span class="line">        x1 = [i/(<span class="number">20</span>-<span class="number">1</span>)*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>)]</span><br><span class="line">        y1 = [math.cos(x*<span class="number">0.8</span>+math.sin(x*<span class="number">0.16</span>+<span class="number">1.0</span>))*math.sin(x*<span class="number">0.54</span>)+<span class="number">1.4</span> <span class="keyword">for</span> x <span class="keyword">in</span> x1]</span><br><span class="line">        x2 = [i/(<span class="number">100</span>-<span class="number">1</span>)*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>)]</span><br><span class="line">        y2 = [math.cos(x*<span class="number">0.85</span>+math.sin(x*<span class="number">0.165</span>+<span class="number">1.1</span>))*math.sin(x*<span class="number">0.50</span>)+<span class="number">1.7</span> <span class="keyword">for</span> x <span class="keyword">in</span> x2]</span><br><span class="line">        x3 = [i/(<span class="number">20</span>-<span class="number">1</span>)*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>)]</span><br><span class="line">        y3 = [<span class="number">0.05</span>+<span class="number">3</span>*(<span class="number">0.5</span>+math.cos(x*x*<span class="number">0.2</span>+<span class="number">2</span>)*<span class="number">0.5</span>)/(x+<span class="number">0.7</span>)+random.random()/<span class="number">100</span> <span class="keyword">for</span> x <span class="keyword">in</span> x3]</span><br><span class="line">        x4 = x3</span><br><span class="line">        y4 = [(<span class="number">0.5</span>-y)+((x-<span class="number">2</span>)*(x-<span class="number">2</span>)*<span class="number">0.02</span>) <span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">zip</span>(x4,y3)]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create and configure plottables:</span></span><br><span class="line">        graph1 = QCPGraph(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        graph1.setData(x1, y1)</span><br><span class="line">        graph1.setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, QPen(Qt.black, <span class="number">1.5</span>), QBrush(Qt.white), <span class="number">9</span>))</span><br><span class="line">        graph1.setPen(QPen(QColor(<span class="number">120</span>, <span class="number">120</span>, <span class="number">120</span>), <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">        graph2 = QCPGraph(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        graph2.setData(x2, y2)</span><br><span class="line">        graph2.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        graph2.setBrush(QColor(<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">20</span>))</span><br><span class="line">        graph2.setChannelFillGraph(graph1)</span><br><span class="line"></span><br><span class="line">        bars1 = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        bars1.setWidth(<span class="number">9</span>/(<span class="number">20</span>-<span class="number">1</span>))</span><br><span class="line">        bars1.setData(x3, y3)</span><br><span class="line">        bars1.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        bars1.setBrush(QColor(<span class="number">10</span>, <span class="number">140</span>, <span class="number">70</span>, <span class="number">160</span>))</span><br><span class="line"></span><br><span class="line">        bars2 = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        bars2.setWidth(<span class="number">9</span>/(<span class="number">20</span>-<span class="number">1</span>))</span><br><span class="line">        bars2.setData(x4, y4)</span><br><span class="line">        bars2.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        bars2.setBrush(QColor(<span class="number">10</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">70</span>))</span><br><span class="line">        bars2.moveAbove(bars1)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># move bars above graphs and grid below bars:</span></span><br><span class="line">        self.customPlot.addLayer(<span class="string">&quot;abovemain&quot;</span>, self.customPlot.layer(<span class="string">&quot;main&quot;</span>), QCustomPlot.limAbove)</span><br><span class="line">        self.customPlot.addLayer(<span class="string">&quot;belowmain&quot;</span>, self.customPlot.layer(<span class="string">&quot;main&quot;</span>), QCustomPlot.limBelow)</span><br><span class="line">        graph1.setLayer(<span class="string">&quot;abovemain&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.grid().setLayer(<span class="string">&quot;belowmain&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.grid().setLayer(<span class="string">&quot;belowmain&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set some pens, brushes and backgrounds:</span></span><br><span class="line">        self.customPlot.xAxis.setBasePen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.yAxis.setBasePen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.xAxis.setTickPen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.yAxis.setTickPen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.xAxis.setSubTickPen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.yAxis.setSubTickPen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.xAxis.setTickLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.yAxis.setTickLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.xAxis.grid().setPen(QPen(QColor(<span class="number">140</span>, <span class="number">140</span>, <span class="number">140</span>), <span class="number">1</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.yAxis.grid().setPen(QPen(QColor(<span class="number">140</span>, <span class="number">140</span>, <span class="number">140</span>), <span class="number">1</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.xAxis.grid().setSubGridPen(QPen(QColor(<span class="number">80</span>, <span class="number">80</span>, <span class="number">80</span>), <span class="number">1</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridPen(QPen(QColor(<span class="number">80</span>, <span class="number">80</span>, <span class="number">80</span>), <span class="number">1</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.xAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis.grid().setZeroLinePen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        self.customPlot.yAxis.grid().setZeroLinePen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        self.customPlot.xAxis.setUpperEnding(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line">        self.customPlot.yAxis.setUpperEnding(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line"></span><br><span class="line">        plotGradient = QLinearGradient()</span><br><span class="line">        plotGradient.setStart(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        plotGradient.setFinalStop(<span class="number">0</span>, <span class="number">350</span>)</span><br><span class="line">        plotGradient.setColorAt(<span class="number">0</span>, QColor(<span class="number">80</span>, <span class="number">80</span>, <span class="number">80</span>))</span><br><span class="line">        plotGradient.setColorAt(<span class="number">1</span>, QColor(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>))</span><br><span class="line">        self.customPlot.setBackground(plotGradient)</span><br><span class="line">        axisRectGradient = QLinearGradient()</span><br><span class="line">        axisRectGradient.setStart(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        axisRectGradient.setFinalStop(<span class="number">0</span>, <span class="number">350</span>)</span><br><span class="line">        axisRectGradient.setColorAt(<span class="number">0</span>, QColor(<span class="number">80</span>, <span class="number">80</span>, <span class="number">80</span>))</span><br><span class="line">        axisRectGradient.setColorAt(<span class="number">1</span>, QColor(<span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>))</span><br><span class="line">        self.customPlot.axisRect().setBackground(axisRectGradient)</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setFont(QFont(<span class="string">&quot;Helvetica&quot;</span>, <span class="number">9</span>))</span><br><span class="line">        self.customPlot.legend.setRowSpacing(-<span class="number">3</span>)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/04.png" alt=""></p><h1>结语</h1><p>官网给的示例太多了，一篇塞进太多内容也不好，所以其他的示例放在后面吧，后续有空再更新出来~</p> ]]>
</content>
 
<summary type="html">基于 Pyqt 的 QCustomPlot 简介、安装以及实用代码示例分享。</summary>
  
<category term="python" scheme="https://www.nixgnauhcuy.cn/categories/python/"/>
 
<category term="python" scheme="https://www.nixgnauhcuy.cn/tags/python/"/>

<category term="pyqt" scheme="https://www.nixgnauhcuy.cn/tags/pyqt/"/>

<category term="QCustomPlot" scheme="https://www.nixgnauhcuy.cn/tags/QCustomPlot/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>S32DS Build Command 技巧</title>
<link href="https://www.nixgnauhcuy.cn/42c8065d1ad6/"/>
<id>https://www.nixgnauhcuy.cn/42c8065d1ad6/</id>
<published>2024-05-24T15:02:04.000Z</published>
<updated>2024-05-24T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>前言</h1><p>这一篇与上一篇介绍 Keil MDK IDE 基本一致，所以直接引用上一篇的前言。</p><blockquote><p>Keil MDK 是嵌入式开发中高频使用的 IDE 工具，许多芯片的 SDK 都包含 keil 对应的开发工程。</p><p>最近在使用过程中，同事提出了一个需求，希望将编译的输出文件（如 bin、hex、axf、map）统一输出到整个项目的根目录，便于统一管理，这样就不用每次进入项目里，一层一层的查找输出的文件。这些文件还可能分布在不同的地方，例如 <code>./Listings</code> 目录中存放 <code>.bin</code> 和 <code>.map</code> 文件，而 <code>./Objects</code> 目录中存放 <code>.axf</code> 和 <code>.hex</code> 文件。这对不了解项目结构的工程师非常不友好。</p><p>对于他的考虑，我完全赞同，因为在一个项目中，后续接手的人可能不需要了解代码的具体实现和工程结构，他们只需要找到对应的输出文件，拿来对芯片进行烧录。</p><p>既然需求有了，那么就需要考虑怎样实现了，原先我想的是在根目录里，写一个 python 脚本，直接运行定位到具体文件路径并拷贝出来，但是这样还需要多一个步骤，就是手动运行脚本，所以不是特别的自动化，那么有没有办法直接在运行的过程中，就将文件处理好呢？</p><p>当然是有的，不然就没有这篇文章了，Keil 提供的 <code>Command Items</code>，可以实现上面的需求。</p></blockquote><h1>Build Command</h1><p>S32DS 提供的 Build Command，在 <code>菜单栏 - Project - Properties - C/C++ Build - Settings - Build Steps</code> 里，可以找到以下选项：</p><ul><li>Pre-build steps - 编译前运行</li><li>Post-build steps - 编译后运行</li></ul><p>提供了一条可运行项，用户可以根据自己的需求填入相应的命令，实现所需的功能。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240524/00.png" alt=""></p><p>基于上面提出的需求，需要在编译之后，将输出文件拷贝到指定目录。因此，我们需要利用 <code>Post-build steps</code> 功能，在编译完成后执行相关命令，将输出文件拷贝到目标文件夹中。</p><p>首先，在工程目录中（即 <code>.mex</code> 文件所在的目录），创建一个 <code>.bat</code> 文件。我将其命名为 <code>build_script.bat</code>，文件内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">REM Check if ProjName parameter is provided</span><br><span class="line">if &quot;%1&quot;==&quot;&quot; (</span><br><span class="line">    echo Usage: build_script.bat ProjName</span><br><span class="line">    exit /b 1</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">REM Set ProjName Variable</span><br><span class="line">set ProjName=%1</span><br><span class="line"></span><br><span class="line">REM Set Build Path Variable</span><br><span class="line">set OUTPUT_PATH=&quot;..\build_out&quot;</span><br><span class="line"></span><br><span class="line">REM Create build_out directory if it doesn&#x27;t exist</span><br><span class="line">if not exist %OUTPUT_PATH% mkdir %OUTPUT_PATH%</span><br><span class="line"></span><br><span class="line">REM Execute objcopy commands with ProjName</span><br><span class="line">copy %ProjName%.elf %OUTPUT_PATH% &gt;nul</span><br><span class="line">copy %ProjName%.map %OUTPUT_PATH% &gt;nul</span><br><span class="line">arm-none-eabi-objcopy -O srec %ProjName%.elf %OUTPUT_PATH%\%ProjName%.s19</span><br><span class="line">arm-none-eabi-objcopy -O ihex %ProjName%.elf %OUTPUT_PATH%\%ProjName%.hex</span><br><span class="line">arm-none-eabi-objcopy -O binary %ProjName%.elf %OUTPUT_PATH%\%ProjName%.bin</span><br><span class="line"></span><br><span class="line">echo Compilation completed successfully. Output files copied to build_out folder.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 S32DS 中，在 <code>菜单栏 - Project - Properties - C/C++ Build - Settings - Build Steps</code> 中的 <code>Post-build steps</code> 中填入以下命令：<code>../build_script.bat $&#123;ProjName&#125;</code>。</p><p>这个 <code>.bat</code> 文件的主要功能如下：</p><ol><li><strong>接收参数</strong>：通过 <code>set ProjName=%1</code> 接收传入的参数，对应 S32DS 工程的名称 <code>$&#123;ProjName&#125;</code>。</li><li><strong>设置输出路径</strong>：使用 <code>set OUTPUT_PATH=&quot;..\build_out&quot;</code> 指定输出文件的路径。</li><li><strong>创建输出目录</strong>：使用 <code>if not exist %OUTPUT_PATH% mkdir %OUTPUT_PATH%</code> 判断输出目录是否存在，如果不存在则创建它。</li><li><strong>复制文件</strong>：使用 <code>copy</code> 命令将生成的 <code>.elf</code> 和 <code>.map</code> 文件复制到输出目录中。</li><li><strong>生成其他格式文件</strong>：使用 <code>arm-none-eabi-objcopy</code> 命令将 <code>.elf</code> 文件转换为 <code>.s19</code>、<code>.hex</code> 和 <code>.bin</code> 格式，并存放在输出目录中。</li><li><strong>完成提示</strong>：脚本执行完成后，打印提示信息 <code>Compilation completed successfully. Output files copied to build_out folder.</code>。</li></ol><p>通过上述步骤，我们可以在编译完成后，自动将所有需要的输出文件统一拷贝到指定的目录中，从而实现统一管理，简化后续操作。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240524/01.png" alt=""></p><p>所以每次编译完，就会运行对应的 .bat 脚本，将输出的内容 copy 到对应的文件，这样，就完成了之前提出的需求了。</p><h1>结语</h1><p>上述就是针对 S32DS 这个 IDE，运用其提供的对应的 Build Command，完成我们需要的一些需求，当然不局限于我上述的，可以根据自己的需求，利用该功能定制化实现。</p> ]]>
</content>
 
<summary type="html">S32DS IDE 的 build command 使用技巧。</summary>
  
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
 
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>

<category term="软件" scheme="https://www.nixgnauhcuy.cn/tags/%E8%BD%AF%E4%BB%B6/"/>

<category term="S32DS" scheme="https://www.nixgnauhcuy.cn/tags/S32DS/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>Keil5 Build Command 技巧</title>
<link href="https://www.nixgnauhcuy.cn/2b6702a14918/"/>
<id>https://www.nixgnauhcuy.cn/2b6702a14918/</id>
<published>2024-05-23T15:02:04.000Z</published>
<updated>2024-05-23T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>前言</h1><p>Keil MDK 是嵌入式开发中高频使用的 IDE 工具，许多芯片的 SDK 都包含 keil 对应的开发工程。</p><p>最近在使用过程中，同事提出了一个需求，希望将编译的输出文件（如 bin、hex、axf、map）统一输出到整个项目的根目录，便于统一管理，这样就不用每次进入项目里，一层一层的查找输出的文件。这些文件还可能分布在不同的地方，例如 <code>./Listings</code> 目录中存放 <code>.bin</code> 和 <code>.map</code> 文件，而 <code>./Objects</code> 目录中存放 <code>.axf</code> 和 <code>.hex</code> 文件。这对不了解项目结构的工程师非常不友好。</p><p>对于他的考虑，我完全赞同，因为在一个项目中，后续接手的人可能不需要了解代码的具体实现和工程结构，他们只需要找到对应的输出文件，拿来对芯片进行烧录。</p><p>既然需求有了，那么就需要考虑怎样实现了，原先我想的是在根目录里，写一个 python 脚本，直接运行定位到具体文件路径并拷贝出来，但是这样还需要多一个步骤，就是手动运行脚本，所以不是特别的自动化，那么有没有办法直接在运行的过程中，就将文件处理好呢？</p><p>当然是有的，不然就没有这篇文章了，Keil 提供的 <code>Command Items</code>，可以实现上面的需求。</p><h1>Build Command</h1><p>Keil 提供的 Command Items，在 <code>Keil - 魔术棒 - User</code> 里，分别提供了几个选项：</p><ul><li>Before Compile C/C++ File - 编译 C/C++ 文件之前运行</li><li>Before Build/Rebuild - 编译之前运行</li><li>After Build/Rebuild - 编译之后运行</li></ul><p>每个选项提供了两条可运行的命令，我们需要根据需求在 User Command 中填入相应的命令，以实现所需功能。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240523/00.png" alt=""></p><p>基于我们之前的需求，即在编译之后运行命令将输出文件拷贝到目标目录，我们需要使用 <code>After Build/Rebuild</code> 选项。然而，Keil 只提供了两条可运行的命令，这对于我们的需求显然是不够的。所以我保留了一条用于将 .axf 文件转换为 .bin 的命令，将另一条命令用来实现文件的拷贝操作。</p><p>首先，在工程目录（即 <code>.uvprojx</code> 文件所在目录）创建一个 <code>.bat</code> 文件，我将其命名为 <code>build_script.bat</code>，内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set BUILD_NAME=%1</span><br><span class="line">set OUTPUT_PATH=&quot;..\..\build_out&quot;</span><br><span class="line"></span><br><span class="line">mkdir %OUTPUT_PATH% 2&gt;nul</span><br><span class="line"></span><br><span class="line">copy Listings\%BUILD_NAME%.bin %OUTPUT_PATH% &gt;nul</span><br><span class="line">copy Listings\%BUILD_NAME%.map %OUTPUT_PATH% &gt;nul</span><br><span class="line">copy Objects\%BUILD_NAME%.hex %OUTPUT_PATH% &gt;nul</span><br><span class="line">copy Objects\%BUILD_NAME%.axf %OUTPUT_PATH% &gt;nul</span><br><span class="line"></span><br><span class="line">echo Done</span><br><span class="line"></span><br><span class="line">exit /b 0</span><br></pre></td></tr></table></figure><p>在 Keil 中，填写的命令如下图所示：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240523/01.png" alt=""></p><p>命令为：<code>.\build_script.bat test_project</code></p><p>这个 .bat 文件的主要功能如下：</p><ol><li><strong>设置变量</strong>：通过 set BUILD_NAME=%1 接收传入的参数，对应项目的名称。</li><li><strong>设置输出路径</strong>：使用 set OUTPUT_PATH=“…..\build_out” 指定输出文件的路径。</li><li><strong>创建输出目录</strong>：使用 mkdir %OUTPUT_PATH% 2&gt;nul 判断输出目录是否存在，如果不存在则创建它。</li><li><strong>复制文件</strong>：使用 copy 命令将生成的 .bin、.map、.hex 和 .axf 文件复制到输出目录中。</li><li><strong>完成提示</strong>：脚本执行完成后，打印提示信息 Done 并退出。</li></ol><p>通过上述步骤，我们可以在编译完成后，自动将所有需要的输出文件统一拷贝到指定的目录中，从而实现统一管理，简化后续操作。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240523/02.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240523/03.png" alt=""></p><p>所以每次编译完，就会运行对应的 .bat 脚本，将输出的内容 copy 到对应的文件，这样，就完成了之前提出的需求了。</p><h1>结语</h1><p>所以善用，Keil 的 Build Command，可以实现不同的效果，不需要局限与我上述的需求例子。</p> ]]>
</content>
 
<summary type="html">Keil mdk 软件的 build command 使用技巧。</summary>
  
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
 
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>

<category term="软件" scheme="https://www.nixgnauhcuy.cn/tags/%E8%BD%AF%E4%BB%B6/"/>

<category term="keil" scheme="https://www.nixgnauhcuy.cn/tags/keil/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>蓝牙多点测距小记</title>
<link href="https://www.nixgnauhcuy.cn/91206d67d16b/"/>
<id>https://www.nixgnauhcuy.cn/91206d67d16b/</id>
<published>2024-03-28T15:02:04.000Z</published>
<updated>2024-03-28T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <p>最近在学习蓝牙多点测距的内容，故此记录一下。</p><h2 id="基于-RSSI-的距离计算方法">基于 RSSI 的距离计算方法</h2><p>在蓝牙定位技术中，最常用的方法是基于信号强度 RSSI  值，测距方法的本质是通过计算当前环境下信号强度与距离的关系，从信号强度的 RSSI 值计算出两个设备之间的距离。</p><p>首先 RSSI 信号的衰减和距离的对数成正比，在最简单的情况下，RSSI 的计算方式可以表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mi>S</mi><mi>S</mi><mi>I</mi><mo>=</mo><mi>T</mi><mi>x</mi><mi>P</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo>−</mo><mn>10</mn><mo>∗</mo><mi>n</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RSSI = TxPower - 10 * n * log(d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RSS</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></span></p><p>转换为距离公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mfrac><mrow><mi>T</mi><mi>x</mi><mi>P</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>R</mi><mi>S</mi><mi>S</mi><mi>I</mi></mrow><mrow><mn>10</mn><mo>∗</mo><mi>n</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">d = 10 ^{(\frac{TxPower - RSSI}{10 * n})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0235em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0235em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">10</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">RSS</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中，</p><ul><li><code>TxPower</code> - 发射和接收相隔 1 米时的信号强度</li><li><code>d</code> - 距离</li><li><code>n</code> - 环境衰减因子</li><li><code>RSSI</code> - 接收信号强度</li></ul><p>使用 C 代码实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_LOG_10_VALUE 2.3026</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_TXPOWER_1M 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_DECREASE_FACTOR 2</span></span><br><span class="line"><span class="type">double</span> distance = <span class="built_in">exp</span>((<span class="built_in">abs</span>(rssi) - ALG_TXPOWER_1M) / (ALG_DECREASE_FACTOR * <span class="number">10</span>) * ALG_LOG_10_VALUE);</span><br></pre></td></tr></table></figure><p>Or</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_TXPOWER_1M 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_DECREASE_FACTOR 2</span></span><br><span class="line"><span class="type">double</span> distance = <span class="built_in">pow</span>(<span class="number">10</span>, (<span class="built_in">abs</span>(RSSI) - ALG_TXPOWER_1M) / (ALG_DECREASE_FACTOR * <span class="number">10</span>));</span><br></pre></td></tr></table></figure><p>其中 <code>ALG_TXPOWER_1M</code> 和 <code>ALG_DECREASE_FACTOR</code> 要根据实际情况，调节对应的宏定义参数。</p><p>环境衰减因子 n 的经典值：</p><table><thead><tr><th>Environment</th><th></th><th>n</th></tr></thead><tbody><tr><td>Outdoor</td><td>Open Space</td><td>2</td></tr><tr><td></td><td>Covered Space</td><td>2.7-5</td></tr><tr><td>Indoor</td><td>Open Space</td><td>1.6-1.8</td></tr><tr><td></td><td>Covered Space</td><td>4-6</td></tr></tbody></table><blockquote><p>数据来自：<a href="https://iopscience.iop.org/article/10.1088/1742-6596/1631/1/012162/pdf">https://iopscience.iop.org/article/10.1088/1742-6596/1631/1/012162/pdf</a></p></blockquote><h2 id="三点定位（三边测量、三角测量）算法">三点定位（三边测量、三角测量）算法</h2><p>三点定位，是通过已知的三个圆的坐标和半径，求得三个圆的交点，从而达到定位的效果。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240328/00.png" alt=""></p><p>在上图中，每个圆代表手机在基站给定距离（半径）处的所有可能位置。三边测量算法的目的是计算三个圆的交点的 (x, y) 坐标。</p><p>三个圆的方程为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msubsup><mi>r</mi><mn>1</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(x - x_1)^2 + (y - y_1)^2 = r_1^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(x - x_2)^2 + (y - y_2)^2 = r_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mn>3</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msubsup><mi>r</mi><mn>3</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(x - x_3)^2 + (y - y_3)^2 = r_3^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>将三个方程展开：</p><ol><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>x</mi><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>y</mi><msub><mi>y</mi><mn>1</mn></msub><mo>+</mo><msubsup><mi>y</mi><mn>1</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>r</mi><mn>1</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">x^2 - 2xx_1 + x_1^2 + y^2 - 2yy_1 + y_1^2 = r_1^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>x</mi><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>y</mi><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">x^2 - 2xx_2 + x_2^2 + y^2 - 2yy_2 + y_2^2 = r_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>x</mi><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><msubsup><mi>x</mi><mn>3</mn><mn>2</mn></msubsup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>y</mi><msub><mi>y</mi><mn>3</mn></msub><mo>+</mo><msubsup><mi>y</mi><mn>3</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>r</mi><mn>3</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">x^2 - 2xx_3 + x_3^2 + y^2 - 2yy_3 + y_3^2 = r_3^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p></li></ol><p>方程 1 减去方程 2，方程 2 减去方程 3 后可得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>y</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi>y</mi><mo>=</mo><msubsup><mi>r</mi><mn>1</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>y</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(-2x_1 + 2x_2)x+(-2y_1+2y_2)y=r_1^2-r_2^2-x_1^2+x_2^2-y_1^2+y_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>y</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi>y</mi><mo>=</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>r</mi><mn>3</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>3</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>y</mi><mn>3</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(-2x_2 + 2x_3)x+(-2y_2+2y_3)y=r_2^2-r_3^2-x_2^2+x_3^2-y_2^2+y_3^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>由于除了 x 和 y，其他的变量都已知，所以可以将方程简化为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>x</mi><mo>+</mo><mi>B</mi><mi>y</mi><mo>=</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">Ax+By=C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>x</mi><mo>+</mo><mi>E</mi><mi>y</mi><mo>=</mo><mi>F</mi></mrow><annotation encoding="application/x-tex">Dx+Ey=F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>y</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mo>=</mo><msubsup><mi>r</mi><mn>1</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>y</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>D</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>E</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>y</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mo>=</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>r</mi><mn>3</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>3</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>y</mi><mn>3</mn><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}   A = (-2x_1 + 2x_2) \\   B = (-2y_1 + 2y_2) \\   C = r_1^2 - r_2^2 - x_1^2 + x_2^2 - y_1^2 + y_2^2 \\   D = (-2x_2 + 2x_3) \\   E = (-2y_2 + 2y_3) \\   F = r_2^2 - r_3^2 - x_2^2 + x_3^2 - y_2^2 + y_3^2 \\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.64em;vertical-align:-4.07em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.45em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewBox="0 0 888.89 2416" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-4.416em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-5.558em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewBox="0 0 888.89 2416" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-7.966em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.57em;"><span style="top:-6.57em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:0.63em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.07em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>最后，由已知的条件可以得出：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><mfrac><mrow><mi>C</mi><mi>E</mi><mo>−</mo><mi>F</mi><mi>B</mi></mrow><mrow><mi>E</mi><mi>A</mi><mo>−</mo><mi>B</mi><mi>D</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x = \frac{CE-FB}{EA-BD}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">CE</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">FB</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mfrac><mrow><mi>C</mi><mi>D</mi><mo>−</mo><mi>A</mi><mi>F</mi></mrow><mrow><mi>B</mi><mi>D</mi><mo>−</mo><mi>A</mi><mi>E</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">y = \frac{CD-AF}{BD-AE  }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>由上面的方程总结完可以得到对应的计算接口：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">&#125; POINT_T;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    POINT_T center;</span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">&#125; CIRCLE_T;</span><br><span class="line"></span><br><span class="line">POINT_T <span class="title function_">calculate_circle_intersection</span><span class="params">(CIRCLE_T c1, CIRCLE_T c2, CIRCLE_T c3)</span></span><br><span class="line">&#123;</span><br><span class="line">    POINT_T point;</span><br><span class="line">    <span class="type">int</span> A, B, C, D, E, F;</span><br><span class="line">    A = <span class="number">2</span> * c2.center.x - <span class="number">2</span> * c1.center.x;</span><br><span class="line">    B = <span class="number">2</span> * c2.center.y - <span class="number">2</span> * c1.center.y;</span><br><span class="line">    C = c1.r * c1.r - c2.r * c2.r - c1.center.x * c1.center.x + c2.center.x * c2.center.x - c1.center.y * c1.center.y + c2.center.y * c2.center.y;</span><br><span class="line">    D = <span class="number">2</span> * c3.center.x - <span class="number">2</span> * c2.center.x;</span><br><span class="line">    E = <span class="number">2</span> * c3.center.y - <span class="number">2</span> * c2.center.y;</span><br><span class="line">    F = c2.r * c2.r - c3.r * c3.r - c2.center.x * c2.center.x + c3.center.x * c3.center.x - c2.center.y * c2.center.y + c3.center.y * c3.center.y;</span><br><span class="line"></span><br><span class="line">    point.x = (C * E - F * B) / (E * A - B * D);</span><br><span class="line">    point.y = (C * D - A * F) / (B * D - A * E);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> point;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> ]]>
</content>
 
<summary type="html">学习蓝牙多点RSSI测距小记。</summary>
  
<category term="蓝牙" scheme="https://www.nixgnauhcuy.cn/categories/%E8%93%9D%E7%89%99/"/>
 
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>

<category term="BLE" scheme="https://www.nixgnauhcuy.cn/tags/BLE/"/>

<category term="蓝牙" scheme="https://www.nixgnauhcuy.cn/tags/%E8%93%9D%E7%89%99/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>imx6ull logo 更改</title>
<link href="https://www.nixgnauhcuy.cn/732fd0ca5c67/"/>
<id>https://www.nixgnauhcuy.cn/732fd0ca5c67/</id>
<published>2023-12-20T15:02:04.000Z</published>
<updated>2023-12-20T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>1 前期准备</h1><p>安装依赖工具，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo pacman -S netbpm</span><br></pre></td></tr></table></figure><p>将要显示的 logo 图片准备好，logo 格式可以是 png，bmp 或 jpge。</p><p>我用的是 png 格式的 logo，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/00.png" alt=""></p><p>uboot 的 logo 是 bmp 格式的，那么需要先转化为 bmp 格式，这里不能直接用 windows 的画图软件直接转化，直接转化后烧录 logo 会不显示，使用下述命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngtopnm ./mylogo.png | ppmquant 31 | ppmtobmp -bpp 8 &gt; ./mylogo.bmp</span><br></pre></td></tr></table></figure><p>命令及输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; pngtopnm ./mylogo.png | ppmquant 31 | ppmtobmp -bpp 8 &gt; ./mylogo.bmp</span><br><span class="line">pnmcolormap: making histogram...  </span><br><span class="line">pnmcolormap: Scanning image 0  </span><br><span class="line">pnmcolormap: 8753 colors so far  </span><br><span class="line">pnmcolormap: 8753 colors found  </span><br><span class="line">pnmcolormap: choosing 31 colors...  </span><br><span class="line">pnmremap: 31 colors found <span class="keyword">in</span> colormap  </span><br><span class="line">ppmtobmp: analyzing colors...  </span><br><span class="line">ppmtobmp: 31 colors found  </span><br><span class="line">ppmtobmp: Writing 8 bits per pixel with a color palette</span><br></pre></td></tr></table></figure><p>kernel 的 logo 需要转化为 224 色的 ppm 文件，所以同样的，输入下述命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngtopnm logo.png | ppmquant -fs 224 | pnmtoplainpnm &gt; logo_linux_clut224.ppm</span><br></pre></td></tr></table></figure><p>命令和输出如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/02.png" alt=""></p><p>如果使用的不是 png，将 <code>pngtopnm</code> 更改为 <code>bmptopnm</code> 或 <code>jpegtopnm</code> 即可。</p><p>上述生产了 uboot 需要的 <code>mylogo.bmp</code> 和 kernel 需要的 <code>logo_linux_clut224.ppm</code>。</p><h1>2 uboot</h1><p>将生成的 <code>mylogo.bmp</code>  copy 到 uboot 源码的 <code>./tools/logos/</code> 中，然后修改 <code>./tools/Makefile</code> 文件，添加下述代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOGO_BMP= $(srctree)/$(src)/logos/mylogo.bmp</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/03.png" alt=""></p><p>添加完成后，重新编译并烧录即可。</p><h1>3 kernel</h1><p>将生成的 <code>logo_linux_clut224.ppm</code>  文件 copy 到 kernel 源码的 <code>./drivers/video/logo/</code> 中，并直接覆盖原始的 logo ppm 文件，</p><p>由于我生成的是和我屏幕同样大小的图片，也就是 800x480 的图片，所以需要更改 logo 显示的坐标，</p><p>定位到 <code>fb_show_logo_line</code> 函数，将 image.dx 和 image.dy 设置为 0，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/04.png" alt=""></p><p>完成后重新编译内核并烧录运行。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/01.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/05.png" alt=""></p> ]]>
</content>
 
<summary type="html">记录基于 imx6ull uboot、kernel logo 更改。</summary>
  
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
 
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>SPI、DSPI、QSPI 笔记</title>
<link href="https://www.nixgnauhcuy.cn/93cfe9c2432d/"/>
<id>https://www.nixgnauhcuy.cn/93cfe9c2432d/</id>
<published>2023-12-01T15:02:04.000Z</published>
<updated>2023-12-01T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>1 前言</h1><p>复习下，SPI、DSPI、QSPI 对应的接口时序，并作笔记。</p><h1>2 SPI</h1><h2 id="2-1-简介">2.1 简介</h2><p><strong>SPI（Serial Peripheral Interface）</strong>，是一种同步串行通信协议，用于在微控制器与各种外围设备进行<strong>全双工</strong>通信，它是一种<strong>全双工通讯协议</strong>，意味着数据可以同时在两个方向上传输。它是由摩托摩拉公司设计。</p><p>SPI 协议通常由一个主设备（主机）和一个或多个从设备（从机）组成。主设备负责发起通信并控制数据传输的时序，而从设备则被动地响应主设备的指令并提供数据。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/00.png" alt=""></p><h2 id="2-2-接口">2.2 接口</h2><p>SPI 通信涉及四条线：</p><ol><li><strong>SCLK</strong>：串行时钟（Serial Clock），由主设备产生，用于同步数据传输。</li><li><strong>MOSI</strong>：主出从入（Master Out Slave In），用于从主设备向从设备传输数据。</li><li><strong>MISO</strong>：主入从出（Master In Slave Out），用于从从设备向主设备传输数据。</li><li><strong>SS</strong>（或CS）：片选（Slave Select），主设备用来选中特定的从设备进行通信。</li></ol><p>SPI 协议的<strong>工作方式</strong>是通过主设备产生时钟信号来同步数据传输。主设备通过 SCLK 线产生时钟脉冲，每个时钟脉冲对应一个数据位的传输。在每个时钟脉冲期间，主设备将一个数据位发送到 MOSI 线上，同时从设备将一个数据位发送到 MISO 线上。通过这种方式，主设备和从设备可以同时传输数据。</p><h2 id="2-3-时序">2.3 时序</h2><h3 id="2-3-1-读时序">2.3.1 读时序</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/01.png" alt=""></p><h3 id="2-3-2-写时序">2.3.2 写时序</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/02.png" alt=""></p><h2 id="2-4-模式">2.4 模式</h2><p>认识四种模式前，需要先了解两个概念：</p><ul><li><strong>Clock Polarity</strong> - 时钟极性，用来描述 SCLK 时钟信号空闲状态的电平，0：低电平 1：高电平。</li><li><strong>Clock Phase</strong> - 时钟相位，一个时钟周期会有 2 个跳变沿，相位用来规定 SCLK 时钟信号是第一个跳变沿有效还是第二个跳变沿有效，0：第一个跳变沿 1：第二个跳变沿。</li></ul><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/03.png" alt=""></p><table><thead><tr><th>MODE</th><th>CPOL(Clock Polarity)</th><th>CPHA(Clock Phase)</th><th>NOTE</th></tr></thead><tbody><tr><td>mode 0</td><td>0</td><td>0</td><td>SCLK 空闲电平为低并且相位是一个跳变沿有效，那么说明是上升沿有效</td></tr><tr><td>mode 1</td><td>0</td><td>1</td><td>SCLK 空闲电平为低并且相位是二个跳变沿有效，那么说明是下降沿有效</td></tr><tr><td>mode 2</td><td>1</td><td>0</td><td>SCLK 空闲电平为高并且相位是一个跳变沿有效，那么说明是下降沿有效</td></tr><tr><td>mode 3</td><td>1</td><td>1</td><td>SCLK 空闲电平为高并且相位是二个跳变沿有效，那么说明是上升沿有效</td></tr></tbody></table><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/04.png" alt=""></p><h1>3 DSPI</h1><h2 id="3-1-简介">3.1 简介</h2><p><strong>DSPI（Dual Serial Peripheral Interface）</strong>，是 SPI 的一种扩展，在不使用 SPI 全双工性质的情况下，扩展使用<strong>半双工配置</strong>的两个数据引脚，在每个时钟周期发送两位。</p><p>它将 MOSI 线变成 SIO0、MISO 变为 SIO1，分别携带偶数位和奇数位，例如 SIO0 携带每个字节的位 6、4、2 和 0，SIO1 携带字节的位 7、5、3 和 1。</p><h2 id="3-2-接口">3.2 接口</h2><p>DSPI 通信涉及四条线：</p><ol><li><strong>SCLK</strong>：串行时钟（Serial Clock），由主设备产生，用于同步数据传输。</li><li><strong>SIO0</strong>(MOSI)：Data Input Output 1。</li><li><strong>SIO1</strong>(MISO)：Data Input Output 2。</li><li><strong>SS</strong>（或 CS）：片选（Slave Select），主设备用来选中特定的从设备进行通信。</li></ol><h2 id="3-3-时序">3.3 时序</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/05.png" alt=""></p><p>上述流程为：</p><p>CS 拉低 -&gt; 发送指令(3B) -&gt; 发送地址(A0-A23，24 位地址) -&gt; 等待 8 个空指令周期 -&gt; 数据阶段，开始双线发送任意数量字节</p><h1>4 QSPI</h1><h2 id="4-1-简介">4.1 简介</h2><p><strong>QSPI（Quad Serial Peripheral Interface）</strong>，同样是 SPI 的扩展，进一步的提高了传输速度，数据可以通过四条数据线同时传输，因此，在每个时间周期可以传输四个数据位。</p><h2 id="4-2-接口">4.2 接口</h2><p>QSPI 通信涉及六条线：</p><ol><li><strong>SCLK</strong>：串行时钟（Serial Clock），由主设备产生，用于同步数据传输。</li><li><strong>IO0，IO1，IO2，IO3</strong>：四条 Input Output Data 线。</li><li><strong>SS</strong>（或 CS）：片选（Slave Select），主设备用来选中特定的从设备进行通信。</li></ol><h2 id="4-3-时序">4.3 时序</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/06.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/07.png" alt=""></p><p>上述是一个典型的 QSPI 时序，工作模式切换到 QSPI 四线模式后，大致流程如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">指令(Instruction) + 地址(Address) + 扩展信息(Alt) + Dummy Clock(空闲周期) + 数据(Data) 。</span><br></pre></td></tr></table></figure> ]]>
</content>
 
<summary type="html">记录 SPI、DSPI、QSPI 笔记。</summary>
  
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
 
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>ESP32-C3-LCDkit GPIO 学习</title>
<link href="https://www.nixgnauhcuy.cn/c476b577ab06/"/>
<id>https://www.nixgnauhcuy.cn/c476b577ab06/</id>
<published>2023-11-03T15:02:04.000Z</published>
<updated>2023-11-03T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>1 前言</h1><p>学习并记录下 <code>ESP32-C3-LCDkit</code> 开发板的 GPIO 的使用。</p><h1>2 Get-Started</h1><p><code>.\esp-idf\examples\peripherals\gpio</code> 目录下有二个例程，分别是 <strong>generic_gpio</strong> 和 <strong>matrix_keyboard</strong>，<strong>matrix_keyboard</strong> 是矩阵键盘的例程，手头上没有，干脆就不试了，简单看看 <strong>generic_gpio</strong> 这个例程。</p><p>copy esp-idf 的 generic_gpio 文件夹到自己的开发目录，这里我创建了个 esp_study 目录来存放，用于学习对应的 esp 例程。</p><h2 id="2-1-generic-gpio-配置和实现">2.1 generic_gpio 配置和实现</h2><p>使用 vscode 打开 generic_gpio 工程，并且在 generic_gpio 根目录下保存工作区，并新建一个 <code>.vscode</code>，存放该工作区项目配置和工具相关文件，这个在前一篇基础入门的时候说过，就不多赘述了。</p><p>我们先配置一下工程，并让工程跑起来，同样的设置串口和使用的芯片，这里我选择 <code>COM16</code> 和 <code>esp32c3</code>，看 demo 的 <a href="http://README.md">README.md</a>，可以知道，这个例程实现了两个 IO 作为输出、两个 IO 作为输入并配置中断，输出和输入 IO 为相连时，没有触发中断，则只会输出 cnt 计数，输出和输入相接时，会产生中断，并输出中断产生的 IO 和值。所以我需要先选四个 IO 出来，为了接线方便，我选了 LCD 接口相邻的四个 IO，分别是 GPIO0、1、7、2，并配置输出为 0 和 7，输入为 1 和 2，这样接线用杜邦线好接一些。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/00.png" alt=""></p><p>上述配置完成后，编译并进行烧录，我们看下效果：</p><p>GIF太大了，放到第三方图床了，<a href="https://www.z4a.net/image/VqkwGv">https://www.z4a.net/image/VqkwGv</a></p><h2 id="2-2-generic-gpio-代码">2.2 generic_gpio 代码</h2><p>从 app_main 入口开始，可以看到对应 gpio config 的结构体声明，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/01.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/02.png" alt=""></p><p>通过上面，我们可以得到，<br>作为输出的 0 和 7 被配置为不开启中断、模式为输出、上拉和下拉关闭。<br>作为输入的 1 和 2 被配置为了上升沿中断触发、模式为输入、开启上拉。</p><p>继续往下看，创建了队列和一个任务，用于产生中断时打印触发中断 IO 当前的电平状态，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/03.png" alt=""></p><p>最后 while 循环，延时 1S 打印计数值和翻转对应的 IO，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/04.png" alt=""></p><h1>3 总结</h1><p>这个例程主要实现了对 IO 初始化、中断的配置，</p><p>对于 IO 初始化，调用的 <code>gpio_config</code>，配置好传参，也就是 gpio_config_t，配置对应的 IO 功能，并传入到接口 <code>gpio_config</code>，</p><p>对于中断，调用 <code>gpio_install_isr_service</code>，开启对 GPIO 的中断，并调用 <code>gpio_isr_handler_add()</code> 函数注册各个管教的中断处理程序，也可以调用 <code>gpio_isr_handler_remove()</code> 去除对应 IO 的中断。</p><h1>4 结语</h1><p>到这里，基本都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p> ]]>
</content>
 
<summary type="html">记录基于 ESP32-C3-LCDkit GPIO 的学习笔记。</summary>
  
<category term="ESP32" scheme="https://www.nixgnauhcuy.cn/categories/ESP32/"/>
 
<category term="ESP32" scheme="https://www.nixgnauhcuy.cn/tags/ESP32/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>ESP32-C3-LCDkit 基础入门</title>
<link href="https://www.nixgnauhcuy.cn/272c4a3365cb/"/>
<id>https://www.nixgnauhcuy.cn/272c4a3365cb/</id>
<published>2023-11-02T15:02:04.000Z</published>
<updated>2023-11-02T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>1 前言</h1><p>上篇 <a href="https://www.nixgnauhcuy.cn/fab2071f499b/">ESP32-C3 开发环境搭建</a> 提到了，我买了块乐鑫的 <strong>ESP32-C3-LCDkit</strong> 开发板，并且搭建好了环境，所以准备跑下 <code>.\esp-idf\examples\get-started</code> 的例程，试试基础的功能。</p><h1>2 Get-Started</h1><p><code>.\esp-idf\examples\get-started</code> 目录下有三个例程，分别是 <strong>hello_world</strong>、<strong>sample_project</strong>、<strong>blink</strong>，所以我们简单分析并运行下这三个例程。</p><p>copy esp-idf 的 get-started 文件夹到自己的开发目录，这里我创建了个 esp_study 目录来存放，用于学习对应的 esp 例程。</p><h2 id="2-1-hello-world">2.1 hello_world</h2><p>使用 vscode 打开 hello_world 工程，并且在 hello_world 根目录下保存工作区，并新建一个 <code>.vscode</code>，存放该工作区项目配置和工具相关文件。</p><p>完成后，在 <code>.vscode</code> 创建 <code>c_cpp_properties.json</code>，并填入下述内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/**&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compileCommands&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.\\build\\compile_commands.json&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这个目的主要是为该工程导入 esp-idf 的文件，防止看代码的时候没办法跳转，不知道函数具体实现。</p><p>上述内容填充完毕后，后续的两个工程都可以同样用该方式实现，后面就不赘述了，接下来看代码前，我们先配置一下工程，并让工程跑起来。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/00.png" alt=""></p><ol><li>填充 <code>c_cpp_properties.json</code> 内容</li><li>连接设备，并设置 COM 端口</li><li>选择对应的芯片</li><li>点击火焰图标，该按钮会进行编译、烧录并且打开日志监控</li><li>查看输出内容</li></ol><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/01.png" alt=""></p><p>上述图片可以看出，实现的功能具体是打印了 <code>Hello World!</code>、芯片型号及芯片的资源，随后延时计数 10S 最终调用软件复位接口，复位软件。</p><p>我们简单看下代码，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/02.png" alt=""></p><ol><li>输出 <code>Hello world!</code></li><li>调用 <code>esp_chip_info</code> 接口，获取芯片信息，先确定它获取了什么信息，定位到 <code>esp_chip_info_t chip_info</code> 的结构体，它作为变量传入接口，<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/03.png" alt=""></li></ol><p>可以看出该结构体，定义了芯片型号、功能、版本、核心数，那么 <code>esp_chip_info</code> 这个接口，就是为了获取这些内容，我们跳转进去看看，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/04.png" alt=""></p><p>上面图片可以看到最终为传参填充的数据，不过版本号的获取，还调用了一个函数 <code>efuse_hal_chip_revision</code>，同样的，跳转进去看看，函数最终返回了 <code>efuse_hal_get_major_chip_version() * 100 + efuse_hal_get_minor_chip_version();</code>，为了减少大量图片的引用，所以我直接跳过到最后，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/05.png" alt=""></p><p>这里能看出，主要版本号和次要版本号都是从 <code>EFUSE - rd_mac_spi_sys_5</code> 寄存器中获取，关于乐鑫这款芯片的可以访问 <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32c3/api-reference/system/efuse.html">EFUSE</a>，里面有对应的 eFuse 管理器说明，我们只需要知道它是在 EFUSE BLOCK 寄存器中获取的就可以了。</p><blockquote><p>在路径 <code>.\esp-idf\components\efuse\esp32c3\</code> 可以看到 <code>esp_efuse_table.csv</code>，它描述了 Efuse 的字段。</p></blockquote><p>确定了芯片信息获取接口执行的内容后，这些打印的信息就简单多了。</p><ol><li>调用 <code>esp_flash_get_size</code> 接口，这个很好理解，读取对应的 flash 大小，工程默认配置是 2M flash，所以输出的时候是不对的，需要去 <code>menuconfig</code> 修改工程配置 <code>Serial flasher config</code> -&gt; <code>Flash size</code> -&gt; <code>4MB</code>。不过 esp32-c3-lcdkit 标注的是内部 4MBFlash，但其是相对于 <code>ESP32-C3-MINI-1 这个模组</code>，对于 <code>ESP32-C3</code> 芯片来说，其实是外部的 Flash，所以输出的日志可以看到是外部 2Mb flash，这点一开始我存在疑惑，<strong>我也提交了对应的 <a href="https://github.com/espressif/esp-idf/issues/12495">PR</a>，感谢乐鑫开发者的不吝指教</strong>。</li><li>调用 <code>esp_get_minimum_free_heap_size</code> 获取了剩余的堆的大小，这个暂时不深究，了解其作用就可以了。</li><li>for 循环 10 次，每次延时 1S 并输出 log，最后调用 <code>esp_restart</code>，进行复位。</li></ol><h2 id="2-2-sample-project">2.2 sample_project</h2><p>对于 <code>sample_project</code> 这个例程，可以跳过，不过官方推荐用该例程作为新项目的模板，并且这个例程的 <code>main.c</code> 的 <code>app_main</code> 没有任何操作。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/06.png" alt=""></p><h2 id="2-3-blink">2.3 blink</h2><p>同 <code>hello_world</code> 一样，创建工作区、创建 <code>c_cpp_properties.json</code> 文件，完成后配置工程，让其跑起来先，</p><p>开发板上只有一个 <code>RGB LED</code>，并没有普通的 LED 可以驱动，而且接到了芯片的 IO8 脚位，所以配置工程时，需要确定我们的 IO 口和对应 LED 类型是否正确，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/07.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/08.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/09.png" alt=""></p><ul><li>Blink LED type 需要勾选 <code>RMT - Addressable LED</code></li><li>Blink GPIO number 需要设置为 <code>8</code></li><li>Blink period in ms 默认即可。</li></ul><p>确认无误后，点击右上方的保存，点击编译烧录并监控日志，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/10.png" alt=""></p><p>简单看下代码，</p><ol><li>执行 <code>configure_led</code> 配置 LED 管脚</li><li>输出 <code>Example configured to blink addressable LED!</code>，并且设置 <code>led_strip_config_t</code> 结构体，填充当前使用的 IO 和最大的 LED 数，开发板上只有一颗，所以默认填充 1，配置 rmt 频率为 10MHz，<strong>RMT(Remote Control)，本质是用于红外发送/接收红外遥控信号的，由于 RMT 模块的灵活性，还可以用来生成和接收许多相似类型的信号</strong>，这里不做深究，调用 <code>led_strip_new_rmt_device</code> 接口，基于 RMT TX 通道来设置 led strip，</li><li>配置完成后，while 循环中会定时翻转 LED，并输出 <code>Turning the LED ON/OFF</code>，根据 Blink period 来延时翻转，翻转调用的 <code>blink_led</code>，<code>ON</code> 调用了 <code>led_strip_set_pixel(led_strip, 0, 16, 16, 16)</code>，设置对应的 RGB，并刷新显示，<code>OFF</code> 则调用 <code>led_strip_clear</code> 清除，从而达到闪烁的效果。</li></ol><p>最终效果如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/11.gif" alt=""></p><h1>3 结语</h1><p>到这里，基本都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p> ]]>
</content>
 
<summary type="html">记录基于 ESP32-C3-LCDkit 开发板的基础入门。</summary>
  
<category term="ESP32" scheme="https://www.nixgnauhcuy.cn/categories/ESP32/"/>
 
<category term="ESP32" scheme="https://www.nixgnauhcuy.cn/tags/ESP32/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>ESP32-C3 开发环境搭建</title>
<link href="https://www.nixgnauhcuy.cn/fab2071f499b/"/>
<id>https://www.nixgnauhcuy.cn/fab2071f499b/</id>
<published>2023-10-26T15:02:04.000Z</published>
<updated>2023-10-27T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>1 前言</h1><p>最近购入了一块 <strong>ESP32-C3-LCDkit</strong> 开发板，准备拿来学习下，自从毕业后就基本没用过 espressif 的芯片了，记忆还停留在使用 ESP8266，所以重新学习下，并且做一些记录~</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/00.jpg" alt="00.jpg"></p><h1>2 搭建 Win 开发环境</h1><p>首先，进入对应的开发板的文档 <a href="https://docs.espressif.com/projects/espressif-esp-dev-kits/zh_CN/latest/esp32c3/esp32-c3-lcdkit/index.html">ESP32-C3-LCDkit</a>，这里面包括了开发板的对应资源描述、硬件说明、以及一些使用上的说明等。</p><p>我们主要是要搭建开发环境，所以进入<strong>应用程序开发 - 软件设置 - 快速入门</strong>。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/01.png" alt="01.png"></p><p>我们需要安装 ESP-IDF(Espressif IoT Development Framework)，在下方找到<strong>手动安装</strong> - <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32c3/get-started/windows-setup.html">Windows Installer</a>，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/02.png" alt="02.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/03.png" alt="03.png"></p><p>进入后，向下找到 <a href="https://dl.espressif.cn/dl/esp-idf/?idf=4.4">ESP-IDF 工具安装器</a>并进入该路径，可以看到有在线和离线的安装方式，推荐直接用离线的方式，在线安装可能需要代理。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/04.png" alt="04.png"></p><p>下载完离线包后双击运行，选择<code>简体中文 - 我同意此协议</code>，随后进入安装前系统检测，等待检测完毕并进入下一步，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/05.png" alt="05.png"></p><p>填写安装路径，默认是 <code>C:\Espressif</code>，我将安装路径填写到 <code>C:\my\Espressif</code>，因为本身我没有对磁盘进行分区，只有一个 C 盘，并且 <code>my</code> 文件夹存放一些我自己的东西。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/06.png" alt="06.png"></p><p>确认安装路径后，进入选择安装组件，根据自己的需求，选择要安装的组件，由于我没有其他的 ESP32 板，所以 <code>chip targets</code> 只选择了 <code>ESP32-C3</code>，需要在终端编译的，可以将开发集成的 PowerShell 和命令提示符勾上，我是在 vscode 上开发，所以这里我没有勾选上。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/07.png" alt="07.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/08.png" alt="08.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/09.png" alt="09.png"></p><p>确认无误后，下一步，并等待安装完成。</p><p>安装完成后，我们打开 vscode，并进入扩展安装，安装 <code>Espressif IDF</code>，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/10.png" alt="10.png"></p><p>完成后，点击左边对应的扩展，进入该插件，并等待它搜寻上面我们安装的环境，等待它加载完即可。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/11.png" alt="11.png"></p><p>加载完成后，我们测下环境搭建是否成功，找到安装路径下 <code>get-started - hello_world</code>， 我的路径是 <code>C:\my\Espressif\frameworks\esp-idf-v5.1.1\examples\get-started\hello_world</code>，为了避免我们的修改导致 SDK 文件变动，我们将 <code>hello_world</code> 文件夹拷贝到自己需要编译的工程路径，这里我直接拷贝到 <code>C:\my\</code>，然后用 vscode 打开该工程，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/12.png" alt="12.png"></p><p>对应的功能如下图，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/13.png" alt="13.png"></p><p>我们先进行第一步，给开发板上电，选择对应的端口号和设备型号，我这里的端口是 COM12，设备是 esp32c3，并且是通过 usb 转串口进行的烧录，完成后，开始编译工程，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/14.png" alt="14.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/15.png" alt="15.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/16.png" alt="16.png"></p><p>编译完成后，点击烧录，并选择方式为串口，完成后会打印 Flash Done，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/17.png" alt="17.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/18.png" alt="18.png"></p><p>我们打开监听，查看输出日志是否正确，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/19.png" alt="19.png"></p><p>该例程会输出 <code>Hello world!</code>，并每 10S 执行一次复位。</p><p>至此，Windows 开发环境搭建完成。</p><h1>3 结语</h1><p>到这里，基本都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p> ]]>
</content>
 
<summary type="html">记录基于 ESP32-C3 开发板进行环境搭建。</summary>
  
<category term="ESP32" scheme="https://www.nixgnauhcuy.cn/categories/ESP32/"/>
 
<category term="ESP32" scheme="https://www.nixgnauhcuy.cn/tags/ESP32/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>imx6ull lvgl 移植</title>
<link href="https://www.nixgnauhcuy.cn/031a4fb624db/"/>
<id>https://www.nixgnauhcuy.cn/031a4fb624db/</id>
<published>2023-10-25T15:02:04.000Z</published>
<updated>2023-10-25T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>1 前言</h1><p>学习基于 I.MX6ULL 平台的 LVGL GUI 移植。</p><h1>2 开发环境</h1><ul><li>系统： arch linux</li><li>工具： <a href="https://github.com/nixgnauhcuy/nxp-uuu-qt-tool">nxp-uuu-qt-tool</a></li><li>硬件： 正点原子 I.MX6ULL 开发板、LCD 800*480</li><li>软件： linux 内核 <a href="https://github.com/nixgnauhcuy/linux-imx">5.4.21</a>、lvgl 和 lvgl drivers release/v8.3 以及 LVGL for frame buffer device</li><li>JFlash</li></ul><h1>3 准备</h1><blockquote><p>下述演示都是基于 <code>win11 wsl2 debian</code> 系统</p></blockquote><p>首先，克隆 <code>lv_port_linux_frame_buffer</code> 仓库，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/lvgl/lv_port_linux_frame_buffer.git</span><br><span class="line">cd lv_port_linux_frame_buffer/</span><br><span class="line">git submodule update --init --recursive</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/00.png" alt="00.png"></p><p>上述命令，克隆了 lvgl 的 <code>lv_port_linux_frame_buffer</code> 仓库，完成后进入该文件夹，<code>git clone</code> 并没有将子模块 <code>lvgl</code> 和 <code>lv_drivers</code> 一起克隆，所以我们使用 <code>git submodule update</code> 将子模块一起拉取下来。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/01.png" alt="01.png"></p><p>然后输入下述命令，先编译一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>编译完成后，会在当前路径下，生成 build 文件夹，里面分别有 bin 和 obj 文件夹，用于存放输出的 bin 文件，和 obj 编译文件。</p><blockquote><p>原先编译是没有对编译文件和输出文件做整理，后面我给该仓库提交了 PR 请求，没想到很快就被合并了，好评拉满。</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/02.png" alt="02.png"></p><p>到这一步，编译没问题后，基本准备工作就完成了，接下来开始移植。</p><h1>4 移植</h1><h2 id="4-1-Makefile-修改">4.1 Makefile 修改</h2><p>首先，更改我们的编译工具，因为 I.MX6ULL 是 arm 架构的，所以我们要更改使用的工具链。</p><p>打开 <code>Makefile</code> 修改两个点，</p><ul><li>将 <strong>cc</strong> 的值由 <code>?= gcc</code> 更改为 <code>= arm-linux-gnueabihf-gcc</code></li><li>注释掉 <code>CSRCS +=$(LVGL_DIR)/mouse_cursor_icon.c</code>，这里没有用到鼠标，所以我注释掉了</li></ul><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/03.png" alt="03.png"></p><p>更改完，还不需要 <code>make</code> 重编译，因为还没修改完，这个时候编译会报错。</p><h2 id="4-2-main-c-修改">4.2 main.c 修改</h2><p>接下来更改 main.c，注释掉鼠标相关代码，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/04.png" alt="04.png"></p><p>修改完成后，我们就可以重新输入 <code>make clean</code> 和 <code>make</code> 指令重新编译下，附上修改编译链的对比图：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/05.png" alt="05.png"></p><p>使用 `file`` 确定文件类型是否是 32 位 arm 的可执行文件，这才是我们最终要执行的文件。</p><p>别着急，还没修改完，接下来我们修改对应的配置文件。</p><h2 id="4-3-lv-conf-h-和-lv-drv-conf-h-修改">4.3 lv_conf.h 和 lv_drv_conf.h 修改</h2><p><code>lv_conf.h</code> 该文件无需修改，如果有需要定制修改的，可以对照注释修改。</p><p><code>lv_drv_conf.h</code> 这个需要修改，这里的变动会直接影响到显示和触摸，</p><ul><li>定位到 <code>USE_EVDEV</code> 中，修改为当前 linux 设备对应的触摸驱动，这里我是 <code>/dev/input/event1</code>，这里默认用的 <code>event10</code>，要结合自己的设备修改。</li><li>定位到 <code>USE_FBDEV</code> 中，修改为当前 linux 设备对应的显示驱动，这里我是 <code>/dev/fb0</code>，这里默认用的 <code>fb0</code>，要结合自己的设备进行修改，这里我默认即刻。</li></ul><p>修改完成后，重新编译一下工程。</p><p>到这里基本就完成了，整个过程基本没有什么难点。</p><h2 id="4-4-烧录">4.4 烧录</h2><p>将重新编译完的可执行文件，路径是 <code>./build/bin/demo</code>，拷贝到 imx6ull 中执行，这里我用自己的做的工具，由于这里我没用我的主力设备 archlinux，用的 wsl2 debian，所以我先复制到 win11，再通过工具烧录到设备中，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/06.png" alt="06.png"></p><h2 id="4-5-效果">4.5 效果</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/07.gif" alt="07.gif"></p><h1>5 结</h1><p>简单记录下 imx6ull 对 lvgl 的移植，过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p> ]]>
</content>
 
<summary type="html">基于 NXP I.MX6ULL 的 lvgl 移植。</summary>
  
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
 
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>CC2640 OAD 生产烧录单文件实现</title>
<link href="https://www.nixgnauhcuy.cn/8159bca7abcd/"/>
<id>https://www.nixgnauhcuy.cn/8159bca7abcd/</id>
<published>2023-10-20T15:02:04.000Z</published>
<updated>2023-10-20T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>1 前言</h1><p>在使用 CC2640 OAD功能时，每次烧录都要烧录四个文件，而且四个工程四个输出文件都在不同的文件夹，操作起来复杂的很，所以折腾了一下，将四个烧录件合并为单个 <code>.bin</code> 文件，直接烧录一个即可。</p><h1>2 开发环境</h1><ul><li>系统： win11</li><li>IAR Embedded Workbench IDE - Arm 8.32.1</li><li>SDK版本： simplelink_cc2640r2_sdk_5_30_00_03</li><li>例程： blestack\simple_peripheral_oad_onchip</li><li>JFlash</li></ul><h1>3 实现</h1><p><code>oad_onchip</code> 项目中，有四个工程，分别是 <code>bim_onchip</code>、<code>app</code>、<code>persistent_app</code> 和 <code>stack</code>，这些工程代表的意义这里就不赘述了，对这篇文章感兴趣的，相信应该对这些已经有一定的了解。</p><p>这四个工程对应的文件夹如图所示，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/00.png" alt="00.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/01.png" alt="01.png"></p><p>对整个项目进行编译后，会依次在下述几个路径生成对应的编译文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.\simple_peripheral_oad_onchip\tirtos\iar\app\FlashROM\Exe</span><br><span class="line">.\simple_peripheral_oad_onchip\tirtos\iar\bim_onchip\FlashOnly\Exe</span><br><span class="line">.\simple_peripheral_oad_onchip\tirtos\iar\persistent_app\FlashOnly\Exe</span><br><span class="line">.\simple_peripheral_oad_onchip\tirtos\iar\stack\FlashROM\Exe</span><br></pre></td></tr></table></figure><p>生成的编译文件包括了 <code>.out</code>、<code>.hex</code>、<code>.bin</code> 等，因为是烧录文件，并不需要附带调试信息和地址信息，那么 <code>.bin</code> 文件就是我们需要的目标，那么每次烧录四个 <code>.bin</code> 文件，就需要到这四个路径下找到该文件，属实有点繁琐，那么第一步，我们就先把需要的文件归并到一个目录去。</p><h2 id="3-1-bim-onchip">3.1 bim_onchip</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/02.png" alt="02.png"></p><p>进入 IAR，因为这边我是用的 IAR 编译的，右键 <code>cc2640r2lp_bim_onchip</code> 工程，选择 <code>options..</code> 进入选项中，找到 <code>Build Actions</code>，我们需要修改其中的 <code>Post-build command line:</code>，这个是相当于编译完后要执行的命令，<code>cc2640r2lp_bim_onchip</code> 默认应该是空的，也就是没有我框起来的内容，那么我们给它添加一组命令，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$EXAMPLE_BLE_ROOT$\tools\hex2bin.exe $EXE_DIR$\$TARGET_BNAME$.hex $PROJ_DIR$\..\output\$TARGET_BNAME$.bin</span><br></pre></td></tr></table></figure><p>上述命令的内容，我简单描述下，</p><p><code>$EXAMPLE_BLE_ROOT$</code>，这个代表的是 example 工程的路径，也就是我们当前选择的例程的路径 <code>.\simple_peripheral_oad_onchip\</code>，所以就是说使用例程路径下的 tools 文件夹的 hex2bin.exe 将编译生成的 <code>sp_oad_onchip_cc2640r2lp_bim_onchip_FlashOnly.hex</code> 转换为 <code>sp_oad_onchip_cc2640r2lp_bim_onchip_FlashOnly.bin</code> 并放在 <code>$PROJ_DIR$\..\output</code> 文件夹中，<code>$PROJ_DIR$</code> 代表的是工程的路径，也就是 <code>.\simple_peripheral_oad_onchip\tirtos\iar\bim_onchip</code>。而 <code>\..\</code> 代表上一级目录，所以就是将要输出的 bin 文件放置在 <code>simple_peripheral_oad_onchip\tirtos\iar\output</code> 中。</p><p>那么 <code>hex2bin.exe</code> 在哪里来呢，这里我已经打包好了，可以直接在 <code>https://github.com/nixgnauhcuy/intelhex/releases/tag/v1.0.0</code> 下载并放置在对应的 <code>tools</code> 文件夹里。</p><blockquote><p><code>tools</code> 文件夹主要要用来放置一下对应的工具，不需要完全参考我的。</p></blockquote><p>填入上述的内容后，Rebuild 下对应的工程，就可以在 <code>simple_peripheral_oad_onchip\tirtos\iar\output</code> 看到 <code>sp_oad_onchip_cc2640r2lp_bim_onchip_FlashOnly.bin</code>文件。</p><p>到这第一个工程就完成了，第一步稍微繁琐，后面会简单许多。</p><h2 id="3-2-app">3.2 app</h2><p>同样的，右键 <code>cc2640r2lp_app</code> 工程，选择 <code>options..</code> 进入选项中，找到 <code>Build Actions</code>，修改其中的 <code>Post-build command line:</code>，原始内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\oad\oad_image_tool.exe iar $PROJ_DIR$ 1 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_boundary.xcl -hex2 $PROJ_DIR$\..\stack\FlashROM\Exe\sp_oad_onchip_cc2640r2lp_stack_FlashROM.hex -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $EXE_DIR$\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><p>上面的内容，简单概述下，就是使用 SDK 工程 tools\blestack\oad\oad_image_tool.exe 将编译的 hex 文件，结合 oad 密钥文件，最后输出转化为 bin 文件，有兴趣的可以在该工具目录下打开命令行，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; .\oad_image_tool.exe -h</span><br><span class="line">usage: oad_image_tool [-h] [-v] [-verbose] [-hex1 HEXPATH1] [-bdf BDFILEPATH]</span><br><span class="line">                      [-hex2 [HEXPATH2]] [-k [KEYFILE]] -o OUTPUT</span><br><span class="line">                      ProjType ProjDir BinaryType</span><br><span class="line"></span><br><span class="line">OAD Hex to Binary Converter version</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这里不过多赘述，我们只需将输出的文件放置到我们的 ouput 文件夹中即可，修改后内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\oad\oad_image_tool.exe iar $PROJ_DIR$ 1 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_boundary.xcl -hex2 $PROJ_DIR$\..\stack\FlashROM\Exe\sp_oad_onchip_cc2640r2lp_stack_FlashROM.hex -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $PROJ_DIR$\..\output\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><p>这样第二个工程就完毕了，接下来的工程基本都这样，所以我会简单带过。</p><h2 id="3-3-persistent-app">3.3 persistent_app</h2><p>同 <code>3.2</code>，打开 <code>cc2640r2lp_persistent_app</code>，</p><p>原始内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\frontier\frontier.exe iar -b 1 $PROJ_DIR$\$CONFIG_NAME$\List\sp_oad_onchip_$PROJ_FNAME$_$CONFIG_NAME$.map $PROJ_DIR$\..\config\iar_oad_tgt_boundary.bdef $PROJ_DIR$\..\config\iar_oad_tgt_boundary.xcl &amp;amp; $TOOLS_BLE_DIR$\output_converter\output_converter.exe $EXE_DIR$\sp_oad_onchip_$PROJ_FNAME$_$CONFIG_NAME$.bin -b $PROJ_DIR$\..\config\iar_oad_tgt_boundary.bdef &amp;amp; $TOOLS_BLE_DIR$\oad\oad_image_tool.exe --verbose  iar $PROJ_DIR$ 0 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_oad_tgt_boundary.xcl -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $EXE_DIR$\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><p>修改如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\frontier\frontier.exe iar -b 1 $PROJ_DIR$\$CONFIG_NAME$\List\sp_oad_onchip_$PROJ_FNAME$_$CONFIG_NAME$.map $PROJ_DIR$\..\config\iar_oad_tgt_boundary.bdef $PROJ_DIR$\..\config\iar_oad_tgt_boundary.xcl &amp;amp; $TOOLS_BLE_DIR$\output_converter\output_converter.exe $EXE_DIR$\sp_oad_onchip_$PROJ_FNAME$_$CONFIG_NAME$.bin -b $PROJ_DIR$\..\config\iar_oad_tgt_boundary.bdef &amp;amp; $TOOLS_BLE_DIR$\oad\oad_image_tool.exe --verbose  iar $PROJ_DIR$ 0 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_oad_tgt_boundary.xcl -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $PROJ_DIR$\..\output\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><h2 id="3-4-stack">3.4 stack</h2><p>同 <code>3.2</code>，打开 <code>cc2640r2lp_stack</code>，</p><p>原始内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\frontier\frontier.exe  iar $PROJ_DIR$\$CONFIG_NAME$\List\$TARGET_BNAME$.map $PROJ_DIR$\..\config\iar_boundary.bdef $PROJ_DIR$\..\config\iar_boundary.xcl &amp;amp; $TOOLS_BLE_DIR$\oad\oad_image_tool.exe --verbose  iar $PROJ_DIR$ 2 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_boundary.xcl -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $EXE_DIR$\$TARGET_BNAME$_oad&quot;$PROJ_DIR$\..\output\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><p>修改如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\frontier\frontier.exe  iar $PROJ_DIR$\$CONFIG_NAME$\List\$TARGET_BNAME$.map $PROJ_DIR$\..\config\iar_boundary.bdef $PROJ_DIR$\..\config\iar_boundary.xcl &amp;amp; $TOOLS_BLE_DIR$\oad\oad_image_tool.exe --verbose  iar $PROJ_DIR$ 2 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_boundary.xcl -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $PROJ_DIR$\..\output\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><h2 id="3-5-编译工程">3.5 编译工程</h2><p>上面四个工程都修改完毕后，我们对整个项目进行重编译，就可以在 <code>.\simple_peripheral_oad_onchip\tirtos\iar\output</code> 中看到四个对应的 <code>.bin</code> 文件。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/03.png" alt="03.png"></p><p>那么四个主要的文件有了，就差合并了，这里我自己写了个 python 脚本合并多个 bin 文件，源码在<a href="https://github.com/nixgnauhcuy/python_script">python_script</a>，打包文件可以在这里下载 <a href="https://github.com/nixgnauhcuy/python_script/releases/tag/v1.0.0">releases</a>。</p><p>将打包好的 <code>bin_allinone.exe</code> 放在刚才放置 hex2bin.exe 的 tools 文件夹里。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/04.png" alt="04.png"></p><p>用法可以直接输入 -h 查看对应的帮助信息，这里不多赘述，下载并放置好文件夹后，我们回到 <code>output</code> 这个文件夹，创建一个 <code>.bat</code> 脚本，名字随意，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">..\..\..\tools\bin_allinone.exe .\sp_oad_onchip_cc2640r2lp_persistent_app_FlashOnly_oad.bin 0x14000 .\sp_oad_onchip_cc2640r2lp_app_FlashROM_oad.bin 0x0 .\sp_oad_onchip_cc2640r2lp_bim_onchip_FlashOnly.bin 0x1E000 .\sp_oad_onchip_cc2640r2lp_stack_FlashROM_oad.bin 0xB000 -p 0xff -o all_in_one.bin</span><br></pre></td></tr></table></figure><p>复制并保存到 <code>output</code> 文件夹，双击运行 <code>.bat</code> 文件，即可在文件夹中看到输出文件，名字为 <code>all_in_one.bin</code>。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/05.png" alt="05.png"></p><p>上述的 bat 脚本可以自己定制化地址偏移，以及输出的文件名。</p><p>这样，合并就完成了。</p><h1>结语</h1><p>到这里，基本都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p> ]]>
</content>
 
<summary type="html">CC2640 OAD 生产、烧录单文件的实现方法。</summary>
  
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
 
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>CC2640 仿真烧录方式</title>
<link href="https://www.nixgnauhcuy.cn/f4985376a128/"/>
<id>https://www.nixgnauhcuy.cn/f4985376a128/</id>
<published>2023-10-19T15:02:04.000Z</published>
<updated>2023-10-19T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>1 前言</h1><p>简单记录下调试 Ti CC2640 时，所使用的仿真烧录器的烧录方式。</p><h1>2 开发环境</h1><ul><li>win11</li><li>IAR Embedded Workbench IDE - Arm 8.32.1</li><li>JFlash</li></ul><h1>3 仿真器</h1><h2 id="3-1-J-Link-EDU">3.1 J-Link EDU</h2><blockquote><p>注：市面上的盗版 JLINK ARM V8、 ARM V9 这些似乎均不支持 cJtag 功能，使用二线模式的时候需要注意自己用的 JLink 是否支持。</p></blockquote><p>使用 <code>JLink EDU</code>，通过二线模式烧录仿真，需要 JLink 支持 <code>cJtag</code> 功能，连线上只需连接 <code>TMS</code>、<code>TCK</code>、VCC 和 GND 即可，RESET 脚可接可不接，为了方便使用，最好还是接上。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/00.png" alt="00.png"></p><h2 id="3-1-XDS110">3.1 XDS110</h2><p>使用 <code>XDS110</code> 时，同样可以使用 <code>cJtag</code> 功能，连接 TMS、TCK 和电源地以及 RESET，接法和上面 <code>J-Link</code> 一致。</p><p>也可以使用 <code>Jtag</code> 接法，不过目前用的板子没有引出那么多口，所以未使用该方式，附上参考连接图：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/01.png" alt="01.png"></p><h1>4 仿真和烧录</h1><h2 id="4-1-IAR">4.1 IAR</h2><p>使用 IAR 对 CC2640 项目进行仿真烧录时，需要根据选择的仿真器进行配置，上述 <code>JLINK</code> 和 <code>XDS110</code> 仿真器均可使用，在 IAR 工程中，<code>右键项目 - Options - Debugger</code>，不同仿真器配置如下：</p><h3 id="4-1-1-J-Link-EDU">4.1.1 J-Link EDU</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/02.png" alt="02.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/03.png" alt="03.png"></p><h3 id="4-1-2-XDS110">4.1.2 XDS110</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/04.png" alt="04.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/05.png" alt="05.png"></p><p>这里用的是 <code>cJTAG</code> 方式，所以需要勾选 <code>cJTAG（2-pin）</code>。</p><h2 id="4-2-JFlash">4.2 JFlash</h2><p>JFlash 仅 <code>JLInk</code> 可用，用来烧录个人感觉还是很方便的，配置如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/06.png" alt="06.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/07.png" alt="07.png"></p><p>通过快捷键 <code>F4</code> 擦除芯片后，分别将四个固件按顺序 <code>F7</code> 烧入芯片后，重新复位或上电即可。</p><h1>5 结语</h1><p>上述都是针对我的使用场景做的一些笔记，所以例如 Ti 的 CCS 仿真烧录这些我就没写。</p> ]]>
</content>
 
<summary type="html">小记关于 Ti CC2640 仿真烧录的方法。</summary>
  
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>
 
<category term="嵌入式" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>Python 打包工具之 pyinstaller</title>
<link href="https://www.nixgnauhcuy.cn/047559a4bb5f/"/>
<id>https://www.nixgnauhcuy.cn/047559a4bb5f/</id>
<published>2023-06-26T15:02:04.000Z</published>
<updated>2023-06-26T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>什么是 pyinstaller</h1><p>PyInstaller 可以将 Python 程序打包成的独立的可执行文件。它通过读取编写的 Python 代码并分析代码在执行时需要的每一个模块和库。通过收集所有这些文件的副本及 Python 解释器，将其放在一个文件夹里，或者生成一个单独的可执行文件。</p><h1>pyinstaller 优缺点</h1><p>优点：</p><ul><li>打包快，并且操作简单。</li><li>跨平台</li></ul><p>缺点：</p><ul><li>性能差，执行的效率会比较低。</li><li>pyinstaller 捆绑编译的 Python 脚本(.pyc文件)。 原则上可以对这些进行反编译以揭示你的代码逻辑。</li></ul><p>还有关于单文件打包的弊端，如下图：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230626/00.png" alt="00.png"></p><p>来源于知乎 (<a href="https://www.zhihu.com/question/48776632/answer/2336654649">https://www.zhihu.com/question/48776632/answer/2336654649</a>) @韦易笑的回答。</p><h1>pyinstaller 安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pip install pyinstaller</span><br></pre></td></tr></table></figure><p>校验是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller --version</span><br><span class="line">5.11.0</span><br></pre></td></tr></table></figure><h1>pyinstaller 打包</h1><p>使用一个实际的项目来演示如何打包，项目地址在 <a href="https://github.com/nixgnauhcuy/QtComMate">QtComMate</a>，基于 pyqt6 的一个串口工具。</p><p>项目结构如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">├─docs</span><br><span class="line">│  ├─images</span><br><span class="line">│  └─translations</span><br><span class="line">└─src</span><br><span class="line">    │  config.py</span><br><span class="line">    │  main.py</span><br><span class="line">    │  main.ui</span><br><span class="line">    │  requirements.txt</span><br><span class="line">    │  resources_rc.py</span><br><span class="line">    │  serialport.py</span><br><span class="line">    │  serialport_combobox.py</span><br><span class="line">    │  Ui_main.py</span><br><span class="line">    └─Resources</span><br><span class="line">        ├─icon</span><br><span class="line">        │      main.ico</span><br><span class="line">        ├─img</span><br><span class="line">        ├─sty</span><br><span class="line">        └─translations</span><br></pre></td></tr></table></figure><p>上述我省略了一些无关紧要的文件，可以看出主程序是 <code>./src/main.py</code> 图标在 <code>./src/Resources/icon/main.ico</code> 中。</p><p>确认了主入口和图标位置后，开始打包，输入下述命令：</p><p>非单文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -D -w -i ./src/Resources/icon/main.ico ./src/main.py</span><br></pre></td></tr></table></figure><p>单文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -F -w -i ./src/Resources/icon/main.ico ./src/main.py</span><br></pre></td></tr></table></figure><p>等待命令执行完，执行完毕后，会在当前目录下生成 <code>dist</code> 文件夹，这样就打包成功了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230626/01.png" alt="01.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230626/02.png" alt="02.png"></p><p>简单运行下，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230626/00.gif" alt="00.gif"></p><p>打包命令各参数解析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -D -w -i .\src\Resources\icon\main.ico .\src\main.py</span><br></pre></td></tr></table></figure><ul><li><code>-w</code>：不显示控制台窗口</li><li><code>-i</code>：可执行文件的图标路径。</li><li><code>-D</code>：创建一个包含可执行文件的单文件夹。</li><li><code>-F</code>：创建一个单文件可执行文件。</li></ul><p>如果要了解其他的命令参数可以输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -h</span><br><span class="line">usage: pyinstaller [-h] [-v] [-D] [-F] [--specpath DIR] [-n NAME] [--add-data &lt;SRC;DEST or SRC:DEST&gt;] [--add-binary &lt;SRC;DEST or SRC:DEST&gt;] [-p DIR] [--hidden-import MODULENAME]</span><br><span class="line">                   [--collect-submodules MODULENAME] [--collect-data MODULENAME] [--collect-binaries MODULENAME] [--collect-all MODULENAME] [--copy-metadata PACKAGENAME]</span><br><span class="line">                   [--recursive-copy-metadata PACKAGENAME] [--additional-hooks-dir HOOKSPATH] [--runtime-hook RUNTIME_HOOKS] [--exclude-module EXCLUDES] [--splash IMAGE_FILE]      </span><br><span class="line">                   [-d &#123;all,imports,bootloader,noarchive&#125;] [--python-option PYTHON_OPTION] [-s] [--noupx] [--upx-exclude FILE] [-c] [-w]</span><br><span class="line">                   [-i &lt;FILE.ico or FILE.exe,ID or FILE.icns or Image or <span class="string">&quot;NONE&quot;</span>&gt;] [--disable-windowed-traceback] [--version-file FILE] [-m &lt;FILE or XML&gt;] [--no-embed-manifest]     </span><br><span class="line">                   [-r RESOURCE] [--uac-admin] [--uac-uiaccess] [--win-private-assemblies] [--win-no-prefer-redirects] [--argv-emulation]</span><br><span class="line">                   [--osx-bundle-identifier BUNDLE_IDENTIFIER] [--target-architecture ARCH] [--codesign-identity IDENTITY] [--osx-entitlements-file FILENAME]</span><br><span class="line">                   [--runtime-tmpdir PATH] [--bootloader-ignore-signals] [--distpath DIR] [--workpath WORKPATH] [-y] [--upx-dir UPX_DIR] [-a] [--clean] [--log-level LEVEL]</span><br><span class="line">                   scriptname [scriptname ...]</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  scriptname            Name of scriptfiles to be processed or exactly one .spec file. If a .spec file is specified, most options are unnecessary and are ignored.</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -v, --version         Show program version info and <span class="built_in">exit</span>.</span><br><span class="line">....</span><br></pre></td></tr></table></figure><h1>结语</h1><p>如果单纯打包玩玩的话，可以使用 pyinstaller + pipenv 虚拟环境打包的方式，这样不会导致不需要的依赖也被打包，这里我就不多说了，我还是更推荐 Nuitka 的打包方法。</p> ]]>
</content>
 
<summary type="html">关于 Python 的 pyinstaller 打包方法。</summary>
  
<category term="python" scheme="https://www.nixgnauhcuy.cn/categories/python/"/>
 
<category term="python" scheme="https://www.nixgnauhcuy.cn/tags/python/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>Python 打包工具之 Nuitka</title>
<link href="https://www.nixgnauhcuy.cn/cc72c04a110b/"/>
<id>https://www.nixgnauhcuy.cn/cc72c04a110b/</id>
<published>2023-06-21T15:02:04.000Z</published>
<updated>2023-06-21T15:02:04.000Z</updated>

<content type="html">
<![CDATA[ <h1>什么是 Nuitka</h1><p>Nuitka 是一个用 Python 编写的 Python 编译器。完全兼容 Python 2.6、2.7、3.4、3.5、3.6、3.7、3.8、3.9、3.10 和 3.11 版本，它以一种极其兼容的方式将未编译的代码和已编译的代码一起执行。Nuitka 将 Python 模块翻译成 C 级程序，然后使用 libpython 和自己的静态 C 文件，以 CPython 的方式执行。</p><h1>为什么使用 Nuitka</h1><ul><li>打包体积小</li><li>性能高，Nuitka 可以显著提高 Python 代码的性能，将其编译为二进制格式，可以比解释代码更有效地执行。这可以带来更快的执行时间和更好的资源利用率。</li><li>安全性，将 Python 代码编译成二进制格式可以使攻击者更难进行逆向工程或修改代码。</li></ul><h1>Nuitka 安装和环境</h1><h2 id="安装">安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pip install nuitka</span><br></pre></td></tr></table></figure><p>校验是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m nuitka --version</span><br><span class="line">1.7rc4</span><br><span class="line">Commercial: None</span><br><span class="line">Python: 3.9.10 (tags/v3.9.10:f2f3f53, Jan 17 2022, 15:14:21) [MSC v.1929 64 bit (AMD64)]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="环境">环境</h2><ul><li>Python：2.6、2.7、3.4、3.5、3.6、3.7、3.8、3.9、3.10 和 3.11 任一版本</li><li>C 编译器：推荐使用<code>mingw64</code>。其他的可参考官方文档 <a href="https://nuitka.net/de_DE/doc/user-manual.html#requirements">Requirements</a></li></ul><p>我当前的环境如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; python --version</span><br><span class="line">Python 3.9.10</span><br><span class="line">&gt; gcc --version</span><br><span class="line">gcc.exe (x86_64-win32-seh-rev0, Built by MinGW-W64 project) 8.1.0</span><br></pre></td></tr></table></figure><h1>Nuitka 打包</h1><blockquote><p>第一次使用时会提示下载一个 C 语言缓存工具（以加速重复编译生成的 C 代码）和一个基于 MinGW64 的 C 语言编译器。都输入 yes 即可。</p></blockquote><p>使用一个实际的项目来演示如何打包，项目地址在 <a href="https://github.com/nixgnauhcuy/QtComMate">QtComMate</a>，基于 pyqt6 的一个串口工具。</p><p>项目结构如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">D:.</span><br><span class="line">├─docs</span><br><span class="line">│  ├─images</span><br><span class="line">│  └─translations</span><br><span class="line">└─src</span><br><span class="line">    │  config.py</span><br><span class="line">    │  main.py</span><br><span class="line">    │  main.ui</span><br><span class="line">    │  requirements.txt</span><br><span class="line">    │  resources_rc.py</span><br><span class="line">    │  serialport.py</span><br><span class="line">    │  serialport_combobox.py</span><br><span class="line">    │  Ui_main.py</span><br><span class="line">    │</span><br><span class="line">    └─Resources</span><br><span class="line">        ├─icon</span><br><span class="line">        │      main.ico</span><br><span class="line">        ├─img</span><br><span class="line">        ├─sty</span><br><span class="line">        └─translations</span><br></pre></td></tr></table></figure><p>上述我省略了一些无关紧要的文件，可以看出主程序是 <code>./src/main.py</code> 图标在 <code>./src/Resources/icon/main.ico</code> 中。</p><p>确认了主入口和图标位置后，开始打包，输入下述命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m nuitka --mingw64 --standalone --show-memory --enable-plugin=pyqt6 --nofollow-import-to=numpy --nofollow-imports --remove-output --disable-console --windows-icon-from-ico=.\src\Resources\icon\main.ico --output-dir=out  .\src\main.py</span><br></pre></td></tr></table></figure><p>等待命令执行完，过程会稍微要点时间，并且会占用大量 CPU 资源，执行完毕后，会在当前目录下输出 out/main.dist 文件夹，这样就打包成功了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230621/00.png" alt="00.png"></p><p>简单运行下，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230621/00.gif" alt="00.gif"></p><p>为了对比一下 <code>pyinstaller</code>，输入下述命令使用 <code>pyinstaller</code> 打包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -D -w -i .\src\Resources\icon\main.ico .\src\main.py</span><br></pre></td></tr></table></figure><p><code>pyinstaller</code> 会在当前目录生成 <code>dist</code> 和 <code>build</code> 文件，对比一下两者打包后的大小：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230621/01.png" alt="01.png"></p><p>可以看出 <code>Nuitka</code> 会比 <code>pyinstaller</code> 打包后的体积小。</p><p>打包命令各参数解析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m nuitka --mingw64 --standalone --show-memory --enable-plugin=pyqt6 --nofollow-import-to=numpy --nofollow-imports --remove-output --disable-console --windows-icon-from-ico=.\src\Resources\icon\main.ico --output-dir=out  .\src\main.py</span><br></pre></td></tr></table></figure><ul><li><code>--mingw64</code>：在 Windows 上强制使用 MinGW64。</li><li><code>--standalone</code>：启用输出的独立模式。这使你可以将创建的二进制文件传输到其他机器上，而不用使用现有的 Python 安装。这也意味着它将变得很大。</li><li><code>--show-memory</code>：提供内存信息和统计数据。</li><li><code>--enable-plugin</code>：启用的插件。必须是插件名称。</li><li><code>--nofollow-import-to</code>：在打包过程中忽略指定的 Python 软件包。</li><li><code>--nofollow-imports</code>：不导入任何模块。</li><li><code>--remove-output</code>：打包完成后删除 build 目录。</li><li><code>--disable-console</code>：禁用控制台窗口。</li><li><code>--windows-icon-from-ico</code>：可执行文件的图标路径。</li><li><code>--output-dir</code>：打包的输出文件夹路径。</li></ul><p>如果要了解其他的命令参数可以输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m nuitka --<span class="built_in">help</span></span><br><span class="line">Usage: __main__.py [--module] [--run] [options] main_module.py</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  --<span class="built_in">help</span>                show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  --version             Show version information and important details <span class="keyword">for</span> bug</span><br><span class="line">                        reports, <span class="keyword">then</span> <span class="built_in">exit</span>. Defaults to off.</span><br><span class="line">  --module              Create an extension module executable instead of a</span><br><span class="line">                        program. Defaults to off.</span><br><span class="line">....</span><br></pre></td></tr></table></figure> ]]>
</content>
 
<summary type="html">关于 Python 的 Nuitka 打包方法。</summary>
  
<category term="python" scheme="https://www.nixgnauhcuy.cn/categories/python/"/>
 
<category term="python" scheme="https://www.nixgnauhcuy.cn/tags/python/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>使用代理 API 接口实现 GPT Chat</title>
<link href="https://www.nixgnauhcuy.cn/b24e231b6701/"/>
<id>https://www.nixgnauhcuy.cn/b24e231b6701/</id>
<published>2023-03-25T11:01:00.000Z</published>
<updated>2023-03-25T11:01:00.000Z</updated>

<content type="html">
<![CDATA[ <h1>前言</h1><p>昨天写的 <a href="https://www.nixgnauhcuy.cn/8ea2fbe8b8db/">A Simple GPT Qt Demo</a>，由于使用的是官方的 API 接口，所以国内是无法使用的。基于这点考虑，寻找了替代 <a href="https://www.openai-proxy.com/">OpenAI API代理服务</a>来实现。</p><p>不过目前该代理接口只实现了 chat 功能，所以不能用于生成图片等功能。</p><p>代理接口支持通过上下文内容进行连续对话，所以刚好拿来玩一玩。</p><p>一些使用方法和注意事项，可以前往该链接 <a href="https://www.openai-proxy.com/">https://www.openai-proxy.com/</a> 查看，我就不多赘述了。</p><h1>实现</h1><p>为了直观，简单用了 QT 实现了该功能，具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> openai</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Ui_main <span class="keyword">import</span> Ui_MainWindow</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QMainWindow</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPyQT_Form</span>(QMainWindow, Ui_MainWindow):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.chatPushButton.clicked.connect(self.chatPushButtonEvent)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chatPushButtonEvent</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.chatLineEdit.text() == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        url = <span class="string">&quot;https://api.openai-proxy.com/v1/chat/completions&quot;</span></span><br><span class="line">        payload = json.dumps(&#123;</span><br><span class="line">            <span class="string">&quot;apiKey&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">            <span class="string">&quot;sessionId&quot;</span>: <span class="string">&quot;8d1cb9b0-f535-43a8-b738-4f61b1608572&quot;</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: self.chatLineEdit.text()</span><br><span class="line">        &#125;)</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload).json() </span><br><span class="line"></span><br><span class="line">        self.chatTextEdit.append(<span class="string">&quot;user：\n&quot;</span> + self.chatLineEdit.text() + <span class="string">&quot;\n\n&quot;</span> + <span class="string">&quot;ask：\n&quot;</span> + response[<span class="string">&#x27;data&#x27;</span>] + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    my_pyqt_form = MyPyQT_Form()</span><br><span class="line">    my_pyqt_form.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h1>效果</h1><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325_1/00.gif" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325_1/01.gif" alt=""></p> ]]>
</content>
 
<summary type="html">使用代理 API 接口实现 GPT Chat。</summary>
  
<category term="GPT" scheme="https://www.nixgnauhcuy.cn/categories/GPT/"/>
 
<category term="GPT" scheme="https://www.nixgnauhcuy.cn/tags/GPT/"/>

</entry>

<entry>
<follow_challenge>
    <feedId>70808816141833216</feedId>
    <userId>67406205634646016</userId>
</follow_challenge>
<title>在 FireFox 使用 New Bing Chat</title>
<link href="https://www.nixgnauhcuy.cn/5cf08051cca4/"/>
<id>https://www.nixgnauhcuy.cn/5cf08051cca4/</id>
<published>2023-03-25T11:00:00.000Z</published>
<updated>2023-03-25T11:00:00.000Z</updated>

<content type="html">
<![CDATA[ <h1>前言</h1><p>之前申请的 New Bing 因为要在 Edge 才能使用，所以好长时间都没有使用过。因此，特意去搜索在自己使用的浏览器 FireFox 上能使用的方法。</p><p>先贴一下实现效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/00.png" alt=""></p><h1>实现</h1><blockquote><p>前提：使用的微软账号已经申请并拥有 new bing 的使用权限。</p></blockquote><p>原理很简单，实际只是 <code>bing</code> 检测了发送请求的 <code>UA(User-Agent)</code>，只要我们伪装成 Edge 的 UA 就可以正常使用了。所以，其他浏览器也可以通过伪装的方式，实现访问 New Bing。这里只是我没有装其他的浏览器，也懒得下载一一测试，所以这里只说 FireFox 的实现。</p><p>在 FireFox 的附件扩展中下载并使用 <a href="https://addons.mozilla.org/zh-CN/firefox/addon/user-agent-string-switcher/">User-Agent Switcher and Manager</a>，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/01.png" alt=""></p><p>点击进入该扩展，并选择 <code>Edge</code> 进行伪装，随后进入 <a href="https://www.bing.com/new">new bing</a> 就可以正常使用了，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/02.png" alt=""></p><p>在浏览器使用 F12 进入控制台，可以在网络的发送请求中看到，请求的 <code>UA</code> 已经是伪装后的了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/03.png" alt=""></p><p>如果设置后进入还是没有生效，可以进入设置中将 <code>bing.com</code> 的 <code>Cookie</code> 删除，刷新试试。如果不希望所有的网站都生效伪装，可以前往插件设置中设置白名单。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/04.png" alt=""></p><p>还有其他能实现同样效果的插件，例如：</p><p><a href="https://addons.mozilla.org/en-US/firefox/addon/bing-chat-for-all-browsers/">bing-chat-for-all-browsers</a> 扩展，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/05.png" alt=""></p><p>安装完成后，点击扩展后按下 <code>Open Bing Chat</code> 按钮会自动跳转到 new bing 界面。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/06.png" alt=""></p><p>该扩展的 Github ReadMe 中，提示 FireFox 需要更新为最新版本，并进入 <code>about:config</code> 中，设置 <code>layout.css.overflow-overlay.enabled</code> 为 <code>true</code>，否则无法滚动。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/07.png" alt=""></p><p><a href="https://addons.mozilla.org/en-US/firefox/addon/modheader-firefox/">ModHeader</a> 扩展，安装完成后，填入 <code>Request headers</code> 的 <code>Name</code> 为 <code>User-Agent</code> ，<code>Value</code> 为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36 Edg/109.0.1474.0</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/08.png" alt=""></p><p>最后填入 <code>Request URL filters</code> 并运行即可。</p><h1>结语</h1><p>实际上只要实现伪装 UA 来访问 New Bing Chat，所以可用的方法很多，上面我罗列的插件，其实基本原理一致，选其一即可。</p> ]]>
</content>
 
<summary type="html">在 FireFox 使用 New Bing Chat。</summary>
  
<category term="工具" scheme="https://www.nixgnauhcuy.cn/categories/%E5%B7%A5%E5%85%B7/"/>
 
<category term="工具" scheme="https://www.nixgnauhcuy.cn/tags/%E5%B7%A5%E5%85%B7/"/>

</entry>

</feed>