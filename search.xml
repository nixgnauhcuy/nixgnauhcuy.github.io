<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pyqt QCustomPlot 简介、安装与实用代码示例（四）</title>
      <link href="/423b1931ce58/"/>
      <url>/423b1931ce58/</url>
      
        <content type="html"><![CDATA[<blockquote><p>完整代码我已经上传到 Github 上了，可前往 <a href="https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study">https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study</a> 获取。<br>完整文章路径：</p><ul><li><a href="https://www.nixgnauhcuy.cn/8d34424033d0/">Pyqt QCustomPlot 简介、安装与实用代码示例（一） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/f1b80f317887/">Pyqt QCustomPlot 简介、安装与实用代码示例（二） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/">Pyqt QCustomPlot 简介、安装与实用代码示例（三） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/423b1931ce58/">Pyqt QCustomPlot 简介、安装与实用代码示例（四） | nixgnauhcuy</a></li></ul></blockquote><h1>前言</h1><p>继上文，继续补充官方示例 demo 实现~</p><h1>实用代码示例</h1><h2 id="Interaction-Example">Interaction Example</h2><blockquote><p>The interaction example showing the user selection of graphs</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget, QMenu, QLineEdit, QInputDialog</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QFont, QColor</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCP, QCPScatterStyle, QCPGraph, QCPAxis</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPTextElement, QCPLegend, QCPDataSelection</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Interaction Example&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.mousePos = <span class="number">0</span></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom | QCP.iSelectAxes | QCP.iSelectLegend | QCP.iSelectPlottables))</span><br><span class="line">        self.customPlot.xAxis.setRange(-<span class="number">8</span>, <span class="number">8</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(-<span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line"></span><br><span class="line">        self.customPlot.plotLayout().insertRow(<span class="number">0</span>)</span><br><span class="line">        self.title = QCPTextElement(self.customPlot, <span class="string">&quot;Interaction Example&quot;</span>, QFont(<span class="string">&quot;sans&quot;</span>, <span class="number">17</span>, QFont.Bold))</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">0</span>, self.title)</span><br><span class="line"></span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;x Axis&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;y Axis&quot;</span>)</span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        legendFont = QFont()</span><br><span class="line">        legendFont.setPointSize(<span class="number">10</span>)</span><br><span class="line">        self.customPlot.legend.setFont(legendFont)</span><br><span class="line">        self.customPlot.legend.setSelectedFont(legendFont)</span><br><span class="line">        self.customPlot.legend.setSelectableParts(QCPLegend.spItems) <span class="comment"># legend box shall not be selectable, only legend items</span></span><br><span class="line"></span><br><span class="line">        self.addRandomGraph()</span><br><span class="line">        self.addRandomGraph()</span><br><span class="line">        self.addRandomGraph()</span><br><span class="line">        self.addRandomGraph()</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># connect slot that ties some axis selections together (especially opposite axes):</span></span><br><span class="line">        self.customPlot.selectionChangedByUser.connect(self.selectionChanged)</span><br><span class="line">        <span class="comment"># connect slots that takes care that when an axis is selected, only that direction can be dragged and zoomed:</span></span><br><span class="line">        self.customPlot.mousePress.connect(self.mousePressCb)</span><br><span class="line">        self.customPlot.mouseWheel.connect(self.mouseWheelCb)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make bottom and left axes transfer their ranges to top and right axes:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged.connect(<span class="keyword">lambda</span>: self.customPlot.xAxis2.setRange(self.customPlot.xAxis2.<span class="built_in">range</span>()))</span><br><span class="line">        self.customPlot.yAxis.rangeChanged.connect(<span class="keyword">lambda</span>: self.customPlot.yAxis2.setRange(self.customPlot.yAxis2.<span class="built_in">range</span>()))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># connect some interaction slots:</span></span><br><span class="line">        self.customPlot.axisDoubleClick.connect(self.axisLabelDoubleClick)</span><br><span class="line">        self.customPlot.legendDoubleClick.connect(self.legendDoubleClick)</span><br><span class="line">        self.title.doubleClicked.connect(self.titleDoubleClick)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># connect slot that shows a message in the status bar when a graph is clicked:</span></span><br><span class="line">        self.customPlot.plottableClick.connect(self.graphClicked)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup policy and connect slot for context menu popup:</span></span><br><span class="line">        self.customPlot.setContextMenuPolicy(Qt.CustomContextMenu)</span><br><span class="line">        self.customPlot.customContextMenuRequested.connect(self.contextMenuRequest)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">addRandomGraph</span>(<span class="params">self</span>):</span><br><span class="line">        n = <span class="number">50</span> <span class="comment"># number of points in graph</span></span><br><span class="line">        xScale = (random.random() + <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        yScale = (random.random() + <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        xOffset = (random.random() - <span class="number">0.5</span>)*<span class="number">4</span></span><br><span class="line">        yOffset = (random.random() - <span class="number">0.5</span>)*<span class="number">10</span></span><br><span class="line">        r1 = (random.random() - <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        r2 = (random.random() - <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        r3 = (random.random() - <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        r4 = (random.random() - <span class="number">0.5</span>)*<span class="number">2</span></span><br><span class="line">        x = [i/(n-<span class="number">0.5</span>)*<span class="number">10.0</span>*xScale + xOffset <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        y = [(math.sin(x[i]*r1*<span class="number">5</span>)*math.sin(math.cos(x[i]*r2)*r4*<span class="number">3</span>)+r3*math.cos(math.sin(x[i])*r4*<span class="number">2</span>))*yScale + yOffset <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph().setName(<span class="string">f&quot;New Graph <span class="subst">&#123;self.customPlot.graphCount()-<span class="number">1</span>&#125;</span>&quot;</span>)</span><br><span class="line">        self.customPlot.graph().setData(x, y)</span><br><span class="line"></span><br><span class="line">        self.customPlot.graph().setLineStyle((QCPGraph.LineStyle)(math.floor(random.random()*<span class="number">5</span>)+<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">if</span> (math.floor(random.random()*<span class="number">100</span>) &gt; <span class="number">50</span>):</span><br><span class="line">            self.customPlot.graph().setScatterStyle(QCPScatterStyle((QCPScatterStyle.ScatterShape)(math.floor(random.random()*<span class="number">14</span>)+<span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line">        graphPen = QPen()</span><br><span class="line">        graphPen.setColor(QColor(math.floor(random.random()*<span class="number">245</span>+<span class="number">10</span>), math.floor(random.random()*<span class="number">245</span>+<span class="number">10</span>), math.floor(random.random()*<span class="number">245</span>+<span class="number">10</span>)))</span><br><span class="line">        graphPen.setWidthF(random.random()/(random.random()*<span class="number">2</span>+<span class="number">1</span>))</span><br><span class="line">        self.customPlot.graph().setPen(graphPen)</span><br><span class="line">        self.customPlot.graph().setBrush(QColor(<span class="built_in">int</span>(random.random()*<span class="number">255</span>), <span class="built_in">int</span>(random.random()*<span class="number">255</span>), <span class="built_in">int</span>(random.random()*<span class="number">255</span>), <span class="number">20</span>))</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">selectionChanged</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="comment"># normally, axis base line, axis tick labels and axis labels are selectable separately, but we want</span></span><br><span class="line">        <span class="comment"># the user only to be able to select the axis as a whole, so we tie the selected states of the tick labels</span></span><br><span class="line">        <span class="comment"># and the axis base line together. However, the axis label shall be selectable individually.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># The selection state of the left and right axes shall be synchronized as well as the state of the</span></span><br><span class="line">        <span class="comment"># bottom and top axes.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Further, we want to synchronize the selection of the graphs with the selection state of the respective</span></span><br><span class="line">        <span class="comment"># legend item belonging to that graph. So the user can select a graph by either clicking on the graph itself</span></span><br><span class="line">        <span class="comment"># or on its legend item.</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># make top and bottom axes be selected synchronously, and handle axis and tick labels as one selectable object:</span></span><br><span class="line">        <span class="keyword">if</span> (self.customPlot.xAxis.getPartAt(self.mousePos) == QCPAxis.spAxis <span class="keyword">or</span> self.customPlot.xAxis.getPartAt(self.mousePos) == QCPAxis.spTickLabels <span class="keyword">or</span></span><br><span class="line">            self.customPlot.xAxis2.getPartAt(self.mousePos) == QCPAxis.spAxis <span class="keyword">or</span> self.customPlot.xAxis2.getPartAt(self.mousePos) == QCPAxis.spTickLabels):</span><br><span class="line">            self.customPlot.xAxis2.setSelectedParts(QCPAxis.spAxis|QCPAxis.spTickLabels)</span><br><span class="line">            self.customPlot.xAxis.setSelectedParts(QCPAxis.spAxis|QCPAxis.spTickLabels)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make left and right axes be selected synchronously, and handle axis and tick labels as one selectable object:</span></span><br><span class="line">        <span class="keyword">if</span> (self.customPlot.yAxis.getPartAt(self.mousePos) == QCPAxis.spAxis <span class="keyword">or</span> self.customPlot.yAxis.getPartAt(self.mousePos) == QCPAxis.spTickLabels <span class="keyword">or</span></span><br><span class="line">            self.customPlot.yAxis2.getPartAt(self.mousePos) == QCPAxis.spAxis <span class="keyword">or</span> self.customPlot.yAxis2.getPartAt(self.mousePos) == QCPAxis.spTickLabels):</span><br><span class="line">            self.customPlot.yAxis2.setSelectedParts(QCPAxis.spAxis|QCPAxis.spTickLabels)</span><br><span class="line">            self.customPlot.yAxis.setSelectedParts(QCPAxis.spAxis|QCPAxis.spTickLabels)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># synchronize selection of graphs with selection of corresponding legend items:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.customPlot.graphCount()):</span><br><span class="line">            graph = self.customPlot.graph(i)</span><br><span class="line">            item = self.customPlot.legend.itemWithPlottable(graph)</span><br><span class="line">            <span class="keyword">if</span> (item.selected() <span class="keyword">or</span> graph.selected()):</span><br><span class="line">                item.setSelected(<span class="literal">True</span>)</span><br><span class="line">                graph.setSelection(QCPDataSelection(graph.data().dataRange()))</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mousePressCb</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="comment"># if an axis is selected, only allow the direction of that axis to be dragged</span></span><br><span class="line">        <span class="comment"># if no axis is selected, both directions may be dragged</span></span><br><span class="line"></span><br><span class="line">        self.mousePos = event.pos()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.customPlot.xAxis.getPartAt(event.pos()) == QCPAxis.spAxis:</span><br><span class="line">            self.customPlot.axisRect().setRangeDrag(self.customPlot.xAxis.orientation())</span><br><span class="line">        <span class="keyword">elif</span> self.customPlot.yAxis.getPartAt(event.pos()) == QCPAxis.spAxis:</span><br><span class="line">            self.customPlot.axisRect().setRangeDrag(self.customPlot.yAxis.orientation())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.customPlot.axisRect().setRangeDrag(Qt.Horizontal|Qt.Vertical)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">mouseWheelCb</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="comment"># if an axis is selected, only allow the direction of that axis to be zoomed</span></span><br><span class="line">        <span class="comment"># if no axis is selected, both directions may be zoomed</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.customPlot.xAxis.getPartAt(event.pos())  == QCPAxis.spAxis:</span><br><span class="line">            self.customPlot.axisRect().setRangeZoom(self.customPlot.xAxis.orientation())</span><br><span class="line">        <span class="keyword">elif</span> self.customPlot.yAxis.getPartAt(event.pos())  == QCPAxis.spAxis:</span><br><span class="line">            self.customPlot.axisRect().setRangeZoom(self.customPlot.yAxis.orientation())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.customPlot.axisRect().setRangeZoom(Qt.Horizontal|Qt.Vertical)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">removeSelectedGraph</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(self.customPlot.selectedGraphs()) &gt; <span class="number">0</span>:</span><br><span class="line">            self.customPlot.removeGraph(self.customPlot.selectedGraphs()[<span class="number">0</span>])</span><br><span class="line">            self.customPlot.replot()</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">removeAllGraphs</span>(<span class="params">self</span>):</span><br><span class="line">        self.customPlot.clearGraphs()</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">moveLegend</span>(<span class="params">self, alignment</span>):</span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, alignment)</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">contextMenuRequest</span>(<span class="params">self, pos</span>):</span><br><span class="line">        menu = QMenu(self)</span><br><span class="line">        menu.setAttribute(Qt.WA_DeleteOnClose)</span><br><span class="line">        <span class="keyword">if</span> self.customPlot.legend.selectTest(pos, <span class="literal">False</span>) &gt;= <span class="number">0</span>: <span class="comment"># context menu on legend requested</span></span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to top left&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignTop|Qt.AlignLeft))</span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to top center&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignTop|Qt.AlignHCenter))</span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to top right&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignTop|Qt.AlignRight))</span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to bottom right&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignBottom|Qt.AlignRight))</span><br><span class="line">            menu.addAction(<span class="string">&quot;Move to bottom left&quot;</span>, <span class="keyword">lambda</span>: self.moveLegend(Qt.AlignBottom|Qt.AlignLeft))</span><br><span class="line">        <span class="keyword">else</span>: <span class="comment"># general context menu on graphs requested</span></span><br><span class="line">            menu.addAction(<span class="string">&quot;Add random graph&quot;</span>, self.addRandomGraph)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(self.customPlot.selectedGraphs()) &gt; <span class="number">0</span>:</span><br><span class="line">                menu.addAction(<span class="string">&quot;Remove selected graph&quot;</span>, self.removeSelectedGraph)</span><br><span class="line">            <span class="keyword">if</span> self.customPlot.graphCount() &gt; <span class="number">0</span>:</span><br><span class="line">                menu.addAction(<span class="string">&quot;Remove all graphs&quot;</span>, self.removeAllGraphs)</span><br><span class="line">        menu.popup(self.customPlot.mapToGlobal(pos))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">axisLabelDoubleClick</span>(<span class="params">self, axis, part</span>):</span><br><span class="line">        <span class="comment"># Set an axis label by double clicking on it</span></span><br><span class="line">        <span class="keyword">if</span> part == QCPAxis.spAxisLabel: <span class="comment"># only react when the actual axis label is clicked, not tick label or axis backbone</span></span><br><span class="line">            newLabel, ok = QInputDialog.getText(self, <span class="string">&quot;QCustomPlot example&quot;</span>, <span class="string">&quot;New axis label:&quot;</span>, QLineEdit.Normal, axis.label())</span><br><span class="line">            <span class="keyword">if</span> ok:</span><br><span class="line">                axis.setLabel(newLabel)</span><br><span class="line">                self.customPlot.replot()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">legendDoubleClick</span>(<span class="params">self, legend, item</span>):</span><br><span class="line">        <span class="comment"># Rename a graph by double clicking on its legend item</span></span><br><span class="line">        <span class="keyword">if</span> item: <span class="comment"># only react if item was clicked (user could have clicked on border padding of legend where there is no item, then item is 0)</span></span><br><span class="line">            plItem = item.plottable()</span><br><span class="line">            newName, ok = QInputDialog.getText(self, <span class="string">&quot;QCustomPlot example&quot;</span>, <span class="string">&quot;New graph name:&quot;</span>, QLineEdit.Normal, plItem.name())</span><br><span class="line">            <span class="keyword">if</span> ok:</span><br><span class="line">                plItem.setName(newName)</span><br><span class="line">                self.customPlot.replot()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">titleDoubleClick</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="comment"># Set the plot title by double clicking on it</span></span><br><span class="line">        newTitle, ok = QInputDialog.getText(self, <span class="string">&quot;QCustomPlot example&quot;</span>, <span class="string">&quot;New plot title:&quot;</span>, QLineEdit.Normal, self.title.text())</span><br><span class="line">        <span class="keyword">if</span> ok:</span><br><span class="line">            self.title.setText(newTitle)</span><br><span class="line">            self.customPlot.replot()</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">graphClicked</span>(<span class="params">self, plottable, dataIndex</span>):</span><br><span class="line">        <span class="comment"># since we know we only have QCPGraphs in the plot, we can immediately access interface1D()</span></span><br><span class="line">        <span class="comment"># usually it&#x27;s better to first check whether interface1D() returns non-zero, and only then use it.</span></span><br><span class="line">        dataValue = plottable.interface1D().dataMainValue(dataIndex)</span><br><span class="line">        message = <span class="string">f&quot;Clicked on graph &#x27;<span class="subst">&#123;plottable.name()&#125;</span>&#x27; at data point #<span class="subst">&#123;dataIndex&#125;</span> with value <span class="subst">&#123;dataValue&#125;</span>.&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(message)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240617/00.gif" alt=""></p><h2 id="Item-Demo">Item Demo</h2><blockquote><p>Using items like text labels, arrows and a bracket. This is actually animated, see examples project</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QFont</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QMargins, QTimer, QTime</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCP, QCPItemTracer, QCPItemPosition</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPItemBracket, QCPItemText, QCPItemCurve, QCPLineEnding</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Item Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom))</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        n = <span class="number">500</span></span><br><span class="line">        phase = <span class="number">0</span></span><br><span class="line">        k = <span class="number">3</span></span><br><span class="line">        x = [i/(n-<span class="number">1</span>)*<span class="number">34</span> - <span class="number">17</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        y = [math.exp(-x[i]**<span class="number">2</span>/<span class="number">20.0</span>)*math.sin(k*x[i]+phase) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x, y)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(QPen(Qt.blue))</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).rescaleKeyAxis()</span><br><span class="line">        self.customPlot.yAxis.setRange(-<span class="number">1.45</span>, <span class="number">1.65</span>)</span><br><span class="line">        self.customPlot.xAxis.grid().setZeroLinePen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the bracket at the top:</span></span><br><span class="line">        self.bracket = QCPItemBracket(self.customPlot)</span><br><span class="line">        self.bracket.left.setCoords(-<span class="number">8</span>, <span class="number">1.1</span>)</span><br><span class="line">        self.bracket.right.setCoords(<span class="number">8</span>, <span class="number">1.1</span>)</span><br><span class="line">        self.bracket.setLength(<span class="number">13</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the text label at the top:</span></span><br><span class="line">        self.wavePacketText = QCPItemText(self.customPlot)</span><br><span class="line">        self.wavePacketText.position.setParentAnchor(self.bracket.center)</span><br><span class="line">        self.wavePacketText.position.setCoords(<span class="number">0</span>, -<span class="number">10</span>) <span class="comment"># move 10 pixels to the top from bracket center anchor</span></span><br><span class="line">        self.wavePacketText.setPositionAlignment(Qt.AlignBottom|Qt.AlignHCenter)</span><br><span class="line">        self.wavePacketText.setText(<span class="string">&quot;Wavepacket&quot;</span>)</span><br><span class="line">        self.wavePacketText.setFont(QFont(self.font().family(), <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the phase tracer (red circle) which sticks to the graph data (and gets updated in bracketDataSlot by timer event):</span></span><br><span class="line">        self.phaseTracer = QCPItemTracer(self.customPlot)</span><br><span class="line">        self.itemDemoPhaseTracer = self.phaseTracer <span class="comment"># so we can access it later in the bracketDataSlot for animation</span></span><br><span class="line">        self.phaseTracer.setGraph(self.customPlot.graph(<span class="number">0</span>))</span><br><span class="line">        self.phaseTracer.setGraphKey((math.pi*<span class="number">1.5</span>-phase)/k)</span><br><span class="line">        self.phaseTracer.setInterpolating(<span class="literal">True</span>)</span><br><span class="line">        self.phaseTracer.setStyle(QCPItemTracer.tsCircle)</span><br><span class="line">        self.phaseTracer.setPen(QPen(Qt.red))</span><br><span class="line">        self.phaseTracer.setBrush(Qt.red)</span><br><span class="line">        self.phaseTracer.setSize(<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add label for phase tracer:</span></span><br><span class="line">        self.phaseTracerText = QCPItemText(self.customPlot)</span><br><span class="line">        self.phaseTracerText.position.setType(QCPItemPosition.ptAxisRectRatio)</span><br><span class="line">        self.phaseTracerText.setPositionAlignment(Qt.AlignRight|Qt.AlignBottom)</span><br><span class="line">        self.phaseTracerText.position.setCoords(<span class="number">1.0</span>, <span class="number">0.95</span>) <span class="comment"># lower right corner of axis rect</span></span><br><span class="line">        self.phaseTracerText.setText(<span class="string">&quot;Points of fixed\nphase define\nphase velocity vp&quot;</span>)</span><br><span class="line">        self.phaseTracerText.setTextAlignment(Qt.AlignLeft)</span><br><span class="line">        self.phaseTracerText.setFont(QFont(self.font().family(), <span class="number">9</span>))</span><br><span class="line">        self.phaseTracerText.setPadding(QMargins(<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add arrow pointing at phase tracer, coming from label:</span></span><br><span class="line">        self.phaseTracerArrow = QCPItemCurve(self.customPlot)</span><br><span class="line">        self.phaseTracerArrow.start.setParentAnchor(self.phaseTracerText.left)</span><br><span class="line">        self.phaseTracerArrow.startDir.setParentAnchor(self.phaseTracerArrow.start)</span><br><span class="line">        self.phaseTracerArrow.startDir.setCoords(-<span class="number">40</span>, <span class="number">0</span>) <span class="comment"># direction 30 pixels to the left of parent anchor (tracerArrow-&gt;start)</span></span><br><span class="line">        self.phaseTracerArrow.end.setParentAnchor(self.phaseTracer.position)</span><br><span class="line">        self.phaseTracerArrow.end.setCoords(<span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">        self.phaseTracerArrow.endDir.setParentAnchor(self.phaseTracerArrow.end)</span><br><span class="line">        self.phaseTracerArrow.endDir.setCoords(<span class="number">30</span>, <span class="number">30</span>)</span><br><span class="line">        self.phaseTracerArrow.setHead(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line">        self.phaseTracerArrow.setTail(QCPLineEnding(QCPLineEnding.esBar, (self.phaseTracerText.bottom.pixelPosition().y()-self.phaseTracerText.top.pixelPosition().y())*<span class="number">0.85</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the group velocity tracer (green circle):</span></span><br><span class="line">        self.groupTracer = QCPItemTracer(self.customPlot)</span><br><span class="line">        self.groupTracer.setGraph(self.customPlot.graph(<span class="number">0</span>))</span><br><span class="line">        self.groupTracer.setGraphKey(<span class="number">5.5</span>)</span><br><span class="line">        self.groupTracer.setInterpolating(<span class="literal">True</span>)</span><br><span class="line">        self.groupTracer.setStyle(QCPItemTracer.tsCircle)</span><br><span class="line">        self.groupTracer.setPen(QPen(Qt.green))</span><br><span class="line">        self.groupTracer.setBrush(Qt.green)</span><br><span class="line">        self.groupTracer.setSize(<span class="number">7</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add label for group tracer:</span></span><br><span class="line">        self.groupTracerText = QCPItemText(self.customPlot)</span><br><span class="line">        self.groupTracerText.position.setType(QCPItemPosition.ptAxisRectRatio)</span><br><span class="line">        self.groupTracerText.setPositionAlignment(Qt.AlignRight|Qt.AlignTop)</span><br><span class="line">        self.groupTracerText.position.setCoords(<span class="number">1.0</span>, <span class="number">0.20</span>) <span class="comment"># lower right corner of axis rect</span></span><br><span class="line">        self.groupTracerText.setText(<span class="string">&quot;Fixed positions in\nwave packet define\ngroup velocity vg&quot;</span>)</span><br><span class="line">        self.groupTracerText.setTextAlignment(Qt.AlignLeft)</span><br><span class="line">        self.groupTracerText.setFont(QFont(self.font().family(), <span class="number">9</span>))</span><br><span class="line">        self.groupTracerText.setPadding(QMargins(<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># add arrow pointing at group tracer, coming from label:</span></span><br><span class="line">        self.groupTracerArrow = QCPItemCurve(self.customPlot)</span><br><span class="line">        self.groupTracerArrow.start.setParentAnchor(self.groupTracerText.left)</span><br><span class="line">        self.groupTracerArrow.startDir.setParentAnchor(self.groupTracerArrow.start)</span><br><span class="line">        self.groupTracerArrow.startDir.setCoords(-<span class="number">40</span>, <span class="number">0</span>) <span class="comment"># direction 30 pixels to the left of parent anchor (tracerArrow-&gt;start)</span></span><br><span class="line">        self.groupTracerArrow.end.setCoords(<span class="number">5.5</span>, <span class="number">0.4</span>)</span><br><span class="line">        self.groupTracerArrow.endDir.setParentAnchor(self.groupTracerArrow.end)</span><br><span class="line">        self.groupTracerArrow.endDir.setCoords(<span class="number">0</span>, -<span class="number">40</span>)</span><br><span class="line">        self.groupTracerArrow.setHead(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line">        self.groupTracerArrow.setTail(QCPLineEnding(QCPLineEnding.esBar, (self.groupTracerText.bottom.pixelPosition().y()-self.groupTracerText.top.pixelPosition().y())*<span class="number">0.85</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add dispersion arrow:</span></span><br><span class="line">        self.arrow = QCPItemCurve(self.customPlot)</span><br><span class="line">        self.arrow.start.setCoords(<span class="number">1</span>, -<span class="number">1.1</span>)</span><br><span class="line">        self.arrow.startDir.setCoords(-<span class="number">1</span>, -<span class="number">1.3</span>)</span><br><span class="line">        self.arrow.endDir.setCoords(-<span class="number">5</span>, -<span class="number">0.3</span>)</span><br><span class="line">        self.arrow.end.setCoords(-<span class="number">10</span>, -<span class="number">0.2</span>)</span><br><span class="line">        self.arrow.setHead(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add the dispersion arrow label:</span></span><br><span class="line">        self.dispersionText = QCPItemText(self.customPlot)</span><br><span class="line">        self.dispersionText.position.setCoords(-<span class="number">6</span>, -<span class="number">0.9</span>)</span><br><span class="line">        self.dispersionText.setRotation(<span class="number">40</span>)</span><br><span class="line">        self.dispersionText.setText(<span class="string">&quot;Dispersion with\nvp &lt; vg&quot;</span>)</span><br><span class="line">        self.dispersionText.setFont(QFont(self.font().family(), <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup a timer that repeatedly calls MainWindow::bracketDataSlot:</span></span><br><span class="line">        self.curTime = QTime.currentTime()</span><br><span class="line">        self.dataTimer = QTimer(self)</span><br><span class="line">        self.dataTimer.timeout.connect(self.bracketDataSlot)</span><br><span class="line">        self.dataTimer.start(<span class="number">0</span>) <span class="comment"># Interval 0 means to refresh as fast as possible</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bracketDataSlot</span>(<span class="params">self</span>):</span><br><span class="line">        key = self.curTime.msecsTo(QTime.currentTime())/<span class="number">1000.0</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment"># update data to make phase move:</span></span><br><span class="line">        n = <span class="number">500</span></span><br><span class="line">        phase = key*<span class="number">5</span></span><br><span class="line">        k = <span class="number">3</span></span><br><span class="line">        x = [i/(n-<span class="number">1</span>)*<span class="number">34</span> - <span class="number">17</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        y = [math.exp(-x[i]**<span class="number">2</span>/<span class="number">20.0</span>)*math.sin(k*x[i]+phase) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x, y)</span><br><span class="line">        self.itemDemoPhaseTracer.setGraphKey((<span class="number">8</span>*math.pi+math.fmod(math.pi*<span class="number">1.5</span>-phase, <span class="number">6</span>*math.pi))/k)</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240617/01.gif" alt=""></p><h2 id="Advanced-Axes-Demo">Advanced Axes Demo</h2><blockquote><p>QCP supports multiple axes on one axis rect side and multiple axis rects per plot widget</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, random, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QColor, QPen, QBrush</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPLayoutGrid, QCP, QCPAxis, QCPScatterStyle, QCPBars, QCPGraph</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPAxisRect, QCPMarginGroup, QCPGraphData, QCPAxisTickerFixed</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Advanced Axes Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure axis rect:</span></span><br><span class="line">        self.customPlot.plotLayout().clear() <span class="comment"># clear default axis rect so we can start from scratch</span></span><br><span class="line">        self.wideAxisRect = QCPAxisRect(self.customPlot)</span><br><span class="line">        self.wideAxisRect.setupFullAxesBox(<span class="literal">True</span>)</span><br><span class="line">        self.wideAxisRect.axis(QCPAxis.atRight, <span class="number">0</span>).setTickLabels(<span class="literal">True</span>)</span><br><span class="line">        self.wideAxisRect.addAxis(QCPAxis.atLeft).setTickLabelColor(QColor(<span class="string">&quot;#6050F8&quot;</span>)) <span class="comment"># add an extra axis on the left and color its numbers</span></span><br><span class="line">        self.subLayout = QCPLayoutGrid()</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">0</span>, self.wideAxisRect) <span class="comment"># insert axis rect in first row</span></span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">1</span>, <span class="number">0</span>, self.subLayout) <span class="comment"># sub layout in second row (grid layout will grow accordingly)</span></span><br><span class="line">        <span class="comment"># customPlot-&gt;plotLayout()-&gt;setRowStretchFactor(1, 2);</span></span><br><span class="line">        <span class="comment"># prepare axis rects that will be placed in the sublayout:</span></span><br><span class="line">        self.subRectLeft = QCPAxisRect(self.customPlot, <span class="literal">False</span>) <span class="comment"># false means to not setup default axes</span></span><br><span class="line">        self.subRectRight = QCPAxisRect(self.customPlot, <span class="literal">False</span>)</span><br><span class="line">        self.subLayout.addElement(<span class="number">0</span>, <span class="number">0</span>, self.subRectLeft)</span><br><span class="line">        self.subLayout.addElement(<span class="number">0</span>, <span class="number">1</span>, self.subRectRight)</span><br><span class="line">        self.subRectRight.setMaximumSize(<span class="number">150</span>, <span class="number">150</span>) <span class="comment"># make bottom right axis rect size fixed 150x150</span></span><br><span class="line">        self.subRectRight.setMinimumSize(<span class="number">150</span>, <span class="number">150</span>) <span class="comment"># make bottom right axis rect size fixed 150x150</span></span><br><span class="line">        <span class="comment"># setup axes in sub layout axis rects:</span></span><br><span class="line">        self.subRectLeft.addAxes(QCPAxis.atBottom | QCPAxis.atLeft)</span><br><span class="line">        self.subRectRight.addAxes(QCPAxis.atBottom | QCPAxis.atRight)</span><br><span class="line">        self.subRectLeft.axis(QCPAxis.atLeft).ticker().setTickCount(<span class="number">2</span>)</span><br><span class="line">        self.subRectRight.axis(QCPAxis.atRight).ticker().setTickCount(<span class="number">2</span>)</span><br><span class="line">        self.subRectRight.axis(QCPAxis.atBottom).ticker().setTickCount(<span class="number">2</span>)</span><br><span class="line">        self.subRectLeft.axis(QCPAxis.atBottom).grid().setVisible(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># synchronize the left and right margins of the top and bottom axis rects:</span></span><br><span class="line">        self.marginGroup = QCPMarginGroup(self.customPlot)</span><br><span class="line">        self.subRectLeft.setMarginGroup(QCP.msLeft, self.marginGroup)</span><br><span class="line">        self.subRectRight.setMarginGroup(QCP.msRight, self.marginGroup)</span><br><span class="line">        self.wideAxisRect.setMarginGroup(QCP.msLeft | QCP.msRight, self.marginGroup)</span><br><span class="line">        <span class="comment"># move newly created axes on &quot;axes&quot; layer and grids on &quot;grid&quot; layer:</span></span><br><span class="line">        <span class="keyword">for</span> rect <span class="keyword">in</span> self.customPlot.axisRects():</span><br><span class="line">            <span class="keyword">for</span> axis <span class="keyword">in</span> rect.axes():</span><br><span class="line">                axis.setLayer(<span class="string">&quot;axes&quot;</span>)</span><br><span class="line">                axis.grid().setLayer(<span class="string">&quot;grid&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare data:</span></span><br><span class="line">        dataCos = [QCPGraphData(i/<span class="number">20.0</span>*<span class="number">10</span>-<span class="number">5.0</span>, math.cos(i/<span class="number">20.0</span>*<span class="number">10</span>-<span class="number">5.0</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">21</span>)]</span><br><span class="line">        dataGauss = [QCPGraphData(i/<span class="number">50</span>*<span class="number">10</span>-<span class="number">5.0</span>, math.exp(-(i/<span class="number">50</span>*<span class="number">10</span>-<span class="number">5.0</span>)*(i/<span class="number">50</span>*<span class="number">10</span>-<span class="number">5.0</span>)*<span class="number">0.2</span>)*<span class="number">1000</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>)]</span><br><span class="line">        dataRandom = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">            dataRandom[i].key = i/<span class="number">100</span>*<span class="number">10</span></span><br><span class="line">            dataRandom[i].value = random.random()-<span class="number">0.5</span>+dataRandom[<span class="built_in">max</span>(<span class="number">0</span>, i-<span class="number">1</span>)].value</span><br><span class="line"></span><br><span class="line">        x3 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">        y3 = [<span class="number">2</span>, <span class="number">2.5</span>, <span class="number">4</span>, <span class="number">1.5</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create and configure plottables:</span></span><br><span class="line">        self.mainGraphCos = self.customPlot.addGraph(self.wideAxisRect.axis(QCPAxis.atBottom), self.wideAxisRect.axis(QCPAxis.atLeft))</span><br><span class="line">        self.mainGraphCos.data().<span class="built_in">set</span>(dataCos)</span><br><span class="line">        self.mainGraphCos.valueAxis().setRange(-<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line">        self.mainGraphCos.rescaleKeyAxis()</span><br><span class="line">        self.mainGraphCos.setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, QPen(Qt.black), QBrush(Qt.white), <span class="number">6</span>))</span><br><span class="line">        self.mainGraphCos.setPen(QPen(QColor(<span class="number">120</span>, <span class="number">120</span>, <span class="number">120</span>), <span class="number">2</span>))</span><br><span class="line">        self.mainGraphGauss = self.customPlot.addGraph(self.wideAxisRect.axis(QCPAxis.atBottom), self.wideAxisRect.axis(QCPAxis.atLeft, <span class="number">1</span>))</span><br><span class="line">        self.mainGraphGauss.data().<span class="built_in">set</span>(dataGauss)</span><br><span class="line">        self.mainGraphGauss.setPen(QPen(QColor(<span class="string">&quot;#8070B8&quot;</span>), <span class="number">2</span>))</span><br><span class="line">        self.mainGraphGauss.setBrush(QColor(<span class="number">110</span>, <span class="number">170</span>, <span class="number">110</span>, <span class="number">30</span>))</span><br><span class="line">        self.mainGraphCos.setChannelFillGraph(self.mainGraphGauss)</span><br><span class="line">        self.mainGraphCos.setBrush(QColor(<span class="number">255</span>, <span class="number">161</span>, <span class="number">0</span>, <span class="number">50</span>))</span><br><span class="line">        self.mainGraphGauss.valueAxis().setRange(<span class="number">0</span>, <span class="number">1000</span>)</span><br><span class="line">        self.mainGraphGauss.rescaleKeyAxis()</span><br><span class="line"></span><br><span class="line">        self.subGraphRandom = self.customPlot.addGraph(self.subRectLeft.axis(QCPAxis.atBottom), self.subRectLeft.axis(QCPAxis.atLeft))</span><br><span class="line">        self.subGraphRandom.data().<span class="built_in">set</span>(dataRandom)</span><br><span class="line">        self.subGraphRandom.setLineStyle(QCPGraph.lsImpulse)</span><br><span class="line">        self.subGraphRandom.setPen(QPen(QColor(<span class="string">&quot;#FFA100&quot;</span>), <span class="number">1.5</span>))</span><br><span class="line">        self.subGraphRandom.rescaleAxes()</span><br><span class="line"></span><br><span class="line">        self.subBars = QCPBars(self.subRectRight.axis(QCPAxis.atBottom), self.subRectRight.axis(QCPAxis.atRight))</span><br><span class="line">        self.subBars.setWidth(<span class="number">3</span>/<span class="built_in">len</span>(x3))</span><br><span class="line">        self.subBars.setData(x3, y3)</span><br><span class="line">        self.subBars.setPen(QPen(Qt.black))</span><br><span class="line">        self.subBars.setAntialiased(<span class="literal">False</span>)</span><br><span class="line">        self.subBars.setAntialiasedFill(<span class="literal">False</span>)</span><br><span class="line">        self.subBars.setBrush(QColor(<span class="string">&quot;#705BE8&quot;</span>))</span><br><span class="line">        self.subBars.keyAxis().setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.subBars.rescaleAxes()</span><br><span class="line">        <span class="comment"># setup a ticker for subBars key axis that only gives integer ticks:</span></span><br><span class="line">        intTicker = QCPAxisTickerFixed()</span><br><span class="line">        intTicker.setTickStep(<span class="number">1.0</span>)</span><br><span class="line">        intTicker.setScaleStrategy(QCPAxisTickerFixed.ssMultiples)</span><br><span class="line">        self.subBars.keyAxis().setTicker(intTicker)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240617/02.png" alt=""></p><h2 id="Financial-Chart-Demo">Financial Chart Demo</h2><blockquote><p>QCP showing financial and stock data with the typical Candlestick and OHLC charts</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QColor, QPen</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QDateTime, QDate, QMargins</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPFinancial, QCP, QCPAxis, QCPBars</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPAxisRect, QCPMarginGroup, QCPAxisTickerDateTime</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Financial Chart Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># generate two sets of random walk data (one for candlestick and one for ohlc chart):</span></span><br><span class="line">        n = <span class="number">500</span></span><br><span class="line">        start = QDateTime(QDate(<span class="number">2014</span>, <span class="number">6</span>, <span class="number">11</span>))</span><br><span class="line">        start.setTimeSpec(Qt.UTC)</span><br><span class="line">        startTime = start.toTime_t()</span><br><span class="line">        binSize = <span class="number">3600</span>*<span class="number">24</span> <span class="comment"># bin data in 1 day intervals</span></span><br><span class="line">        time = [startTime + <span class="number">3600</span>*i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        value1 = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        value1[<span class="number">0</span>] = <span class="number">60</span></span><br><span class="line">        value2 = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">        value2[<span class="number">0</span>] = <span class="number">20</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n):</span><br><span class="line">            value1[i] = value1[i-<span class="number">1</span>] + (random.random()-<span class="number">0.5</span>)*<span class="number">10</span></span><br><span class="line">            value2[i] = value2[i-<span class="number">1</span>] + (random.random()-<span class="number">0.5</span>)*<span class="number">3</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># create candlestick chart:</span></span><br><span class="line">        candlesticks = QCPFinancial(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        candlesticks.setName(<span class="string">&quot;Candlestick&quot;</span>)</span><br><span class="line">        candlesticks.setChartStyle(QCPFinancial.csCandlestick)</span><br><span class="line">        candlesticks.data().<span class="built_in">set</span>(QCPFinancial.timeSeriesToOhlc(time, value1, binSize, startTime))</span><br><span class="line">        candlesticks.setWidth(binSize*<span class="number">0.9</span>)</span><br><span class="line">        candlesticks.setTwoColored(<span class="literal">True</span>)</span><br><span class="line">        candlesticks.setBrushPositive(QColor(<span class="number">245</span>, <span class="number">245</span>, <span class="number">245</span>))</span><br><span class="line">        candlesticks.setBrushNegative(QColor(<span class="number">40</span>, <span class="number">40</span>, <span class="number">40</span>))</span><br><span class="line">        candlesticks.setPenPositive(QPen(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)))</span><br><span class="line">        candlesticks.setPenNegative(QPen(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create ohlc chart:</span></span><br><span class="line">        ohlc = QCPFinancial(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        ohlc.setName(<span class="string">&quot;OHLC&quot;</span>)</span><br><span class="line">        ohlc.setChartStyle(QCPFinancial.csOhlc)</span><br><span class="line">        ohlc.data().<span class="built_in">set</span>(QCPFinancial.timeSeriesToOhlc(time, value2, binSize/<span class="number">3.0</span>, startTime)) <span class="comment"># divide binSize by 3 just to make the ohlc bars a bit denser</span></span><br><span class="line">        ohlc.setWidth(binSize*<span class="number">0.2</span>)</span><br><span class="line">        ohlc.setTwoColored(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create bottom axis rect for volume bar chart:</span></span><br><span class="line">        volumeAxisRect = QCPAxisRect(self.customPlot)</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">1</span>, <span class="number">0</span>, volumeAxisRect)</span><br><span class="line">        volumeAxisRect.setMaximumSize(<span class="number">16777215</span>, <span class="number">100</span>)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).setLayer(<span class="string">&quot;axes&quot;</span>)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).grid().setLayer(<span class="string">&quot;grid&quot;</span>)</span><br><span class="line">        <span class="comment"># bring bottom and main axis rect closer together:</span></span><br><span class="line">        self.customPlot.plotLayout().setRowSpacing(<span class="number">0</span>)</span><br><span class="line">        volumeAxisRect.setAutoMargins(QCP.MarginSides(QCP.msLeft|QCP.msRight|QCP.msBottom))</span><br><span class="line">        volumeAxisRect.setMargins(QMargins(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="comment"># create two bar plottables, for positive (green) and negative (red) volume bars:</span></span><br><span class="line">        self.customPlot.setAutoAddPlottableToLegend(<span class="literal">False</span>)</span><br><span class="line">        volumePos = QCPBars(volumeAxisRect.axis(QCPAxis.atBottom), volumeAxisRect.axis(QCPAxis.atLeft))</span><br><span class="line">        volumeNeg = QCPBars(volumeAxisRect.axis(QCPAxis.atBottom), volumeAxisRect.axis(QCPAxis.atLeft))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n//<span class="number">5</span>):</span><br><span class="line">            v = random.randint(-<span class="number">20000</span>, <span class="number">20000</span>)</span><br><span class="line">            <span class="keyword">if</span> v &lt; <span class="number">0</span>:</span><br><span class="line">                volumeNeg.addData(startTime+<span class="number">3600</span>*<span class="number">5.0</span>*i, <span class="built_in">abs</span>(v))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                volumePos.addData(startTime+<span class="number">3600</span>*<span class="number">5.0</span>*i, <span class="built_in">abs</span>(v))</span><br><span class="line">        volumePos.setWidth(<span class="number">3600</span>*<span class="number">4</span>)</span><br><span class="line">        volumePos.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        volumePos.setBrush(QColor(<span class="number">100</span>, <span class="number">180</span>, <span class="number">110</span>))</span><br><span class="line">        volumeNeg.setWidth(<span class="number">3600</span>*<span class="number">4</span>)</span><br><span class="line">        volumeNeg.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        volumeNeg.setBrush(QColor(<span class="number">180</span>, <span class="number">90</span>, <span class="number">90</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># interconnect x axis ranges of main and bottom axis rects:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged.connect(volumeAxisRect.axis(QCPAxis.atBottom).setRange)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).rangeChanged.connect(self.customPlot.xAxis.setRange)</span><br><span class="line">        <span class="comment"># configure axes of both main and bottom axis rect:</span></span><br><span class="line">        dateTimeTicker = QCPAxisTickerDateTime()</span><br><span class="line">        dateTimeTicker.setDateTimeSpec(Qt.UTC)</span><br><span class="line">        dateTimeTicker.setDateTimeFormat(<span class="string">&quot;dd. MMMM&quot;</span>)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).setTicker(dateTimeTicker)</span><br><span class="line">        volumeAxisRect.axis(QCPAxis.atBottom).setTickLabelRotation(<span class="number">15</span>)</span><br><span class="line">        self.customPlot.xAxis.setBasePen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        self.customPlot.xAxis.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setTicks(<span class="literal">False</span>) <span class="comment"># only want vertical grid in main axis rect, so hide xAxis backbone, ticks, and labels</span></span><br><span class="line">        self.customPlot.xAxis.setTicker(dateTimeTicker)</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        self.customPlot.xAxis.scaleRange(<span class="number">1.025</span>, self.customPlot.xAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        self.customPlot.yAxis.scaleRange(<span class="number">1.1</span>, self.customPlot.yAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># make axis rects&#x27; left side line up:</span></span><br><span class="line">        group = QCPMarginGroup(self.customPlot)</span><br><span class="line">        self.customPlot.axisRect().setMarginGroup(QCP.msLeft|QCP.msRight, group)</span><br><span class="line">        volumeAxisRect.setMarginGroup(QCP.msLeft|QCP.msRight, group)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240617/03.png" alt=""></p><h1>结语</h1><p>至此，官方 demo 已经全部实现了，后续看看有没有时间再更新些其他的。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt </tag>
            
            <tag> QCustomPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyqt QCustomPlot 简介、安装与实用代码示例（三）</title>
      <link href="/a0c7dce1d4fa/"/>
      <url>/a0c7dce1d4fa/</url>
      
        <content type="html"><![CDATA[<blockquote><p>完整代码我已经上传到 Github 上了，可前往 <a href="https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study">https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study</a> 获取。<br>完整文章路径：</p><ul><li><a href="https://www.nixgnauhcuy.cn/8d34424033d0/">Pyqt QCustomPlot 简介、安装与实用代码示例（一） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/f1b80f317887/">Pyqt QCustomPlot 简介、安装与实用代码示例（二） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/">Pyqt QCustomPlot 简介、安装与实用代码示例（三） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/423b1931ce58/">Pyqt QCustomPlot 简介、安装与实用代码示例（四） | nixgnauhcuy</a></li></ul></blockquote><h1>前言</h1><p>继上文，继续补充官方示例 demo 实现~</p><h1>实用代码示例</h1><h2 id="Line-Style-Demo">Line Style Demo</h2><blockquote><p>A demonstration of several line styles</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Line Style Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setFont(QFont(<span class="string">&quot;Helvetica&quot;</span>, <span class="number">9</span>))</span><br><span class="line">        pen = QPen()</span><br><span class="line">        lineNames = [<span class="string">&quot;lsNone&quot;</span>, <span class="string">&quot;lsLine&quot;</span>, <span class="string">&quot;lsStepLeft&quot;</span>, <span class="string">&quot;lsStepRight&quot;</span>, <span class="string">&quot;lsStepCenter&quot;</span>, <span class="string">&quot;lsImpulse&quot;</span>]</span><br><span class="line">        <span class="comment"># add graphs with different line styles:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(QCPGraph.lsNone, QCPGraph.lsImpulse+<span class="number">1</span>):</span><br><span class="line">            self.customPlot.addGraph()</span><br><span class="line">            pen.setColor(QColor(<span class="built_in">int</span>(math.sin(i*<span class="number">1</span>+<span class="number">1.2</span>)*<span class="number">80</span>+<span class="number">80</span>), <span class="built_in">int</span>(math.sin(i*<span class="number">0.3</span>+<span class="number">0</span>)*<span class="number">80</span>+<span class="number">80</span>), <span class="built_in">int</span>(math.sin(i*<span class="number">0.3</span>+<span class="number">1.5</span>)*<span class="number">80</span>+<span class="number">80</span>)))</span><br><span class="line">            self.customPlot.graph().setPen(pen)</span><br><span class="line">            self.customPlot.graph().setName(lineNames[i-QCPGraph.lsNone])</span><br><span class="line">            self.customPlot.graph().setLineStyle(QCPGraph.LineStyle(i))</span><br><span class="line">            self.customPlot.graph().setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, <span class="number">5</span>))</span><br><span class="line">            <span class="comment"># generate data:</span></span><br><span class="line">            x = [j/<span class="number">15.0</span> * <span class="number">5</span>*<span class="number">3.14</span> + <span class="number">0.01</span> <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>)]</span><br><span class="line">            y = [<span class="number">7</span>*math.sin(x[j])/x[j] - (i-QCPGraph.lsNone)*<span class="number">5</span> + (QCPGraph.lsImpulse)*<span class="number">5</span> + <span class="number">2</span> <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>)]</span><br><span class="line">            self.customPlot.graph().setData(x, y)</span><br><span class="line">            self.customPlot.graph().rescaleAxes(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># zoom out a bit:</span></span><br><span class="line">        self.customPlot.yAxis.scaleRange(<span class="number">1.1</span>, self.customPlot.yAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        self.customPlot.xAxis.scaleRange(<span class="number">1.1</span>, self.customPlot.xAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        <span class="comment"># set blank axis lines:</span></span><br><span class="line">        self.customPlot.xAxis.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis.setTicks(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis.setTickLabels(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># make top right axes clones of bottom left axes:</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/00.png" alt=""></p><h2 id="Date-Axis-Demo">Date Axis Demo</h2><blockquote><p>Random walks with fill and smart date ticks on the bottom axis</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QBrush, QFont</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QDateTime, QLocale</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPGraphData, QCPAxisTickerText, QCPAxisTickerDateTime</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Date Axis Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set locale to english, so we get english month names:</span></span><br><span class="line">        self.customPlot.setLocale(QLocale(QLocale.English, QLocale.UnitedKingdom))</span><br><span class="line">        <span class="comment"># seconds of current time, we&#x27;ll use it as starting point in time for data:</span></span><br><span class="line">        self.now = QDateTime.currentDateTime().toTime_t()</span><br><span class="line">        <span class="comment"># create multiple graphs:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">            self.customPlot.addGraph()</span><br><span class="line">            color = QColor(<span class="built_in">int</span>(<span class="number">20</span>+<span class="number">200</span>/<span class="number">4.0</span>*i), <span class="built_in">int</span>(<span class="number">70</span>*(<span class="number">1.6</span>-i/<span class="number">4.0</span>)), <span class="number">150</span>, <span class="number">150</span>)</span><br><span class="line">            self.customPlot.graph().setLineStyle(QCPGraph.lsLine)</span><br><span class="line">            self.customPlot.graph().setPen(QPen(color.lighter(<span class="number">200</span>)))</span><br><span class="line">            self.customPlot.graph().setBrush(QBrush(color))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># generate random walk data:</span></span><br><span class="line">            timeData = [QCPGraphData() <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>)]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>):</span><br><span class="line">                timeData[j].key = self.now + <span class="number">24</span>*<span class="number">3600</span>*j</span><br><span class="line">                <span class="keyword">if</span> j == <span class="number">0</span>:</span><br><span class="line">                    timeData[j].value = (j/<span class="number">50.0</span>+<span class="number">1</span>)*(random.random()/<span class="number">5.0</span>-<span class="number">0.5</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    timeData[j].value = math.fabs(timeData[j-<span class="number">1</span>].value)*(<span class="number">1</span>+<span class="number">0.02</span>/<span class="number">4.0</span>*(<span class="number">4</span>-i)) + (j/<span class="number">50.0</span>+<span class="number">1</span>)*(random.random()-<span class="number">0.5</span>)</span><br><span class="line">            self.customPlot.graph().data().<span class="built_in">set</span>(timeData)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure bottom axis to show date instead of number:</span></span><br><span class="line">        dateTicker = QCPAxisTickerDateTime()</span><br><span class="line">        dateTicker.setDateTimeFormat(<span class="string">&quot;d. MMMM\nyyyy&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.setTicker(dateTicker)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure left axis text labels:</span></span><br><span class="line">        textTicker = QCPAxisTickerText()</span><br><span class="line">        textTicker.addTick(<span class="number">10</span>, <span class="string">&quot;a bit\nlow&quot;</span>)</span><br><span class="line">        textTicker.addTick(<span class="number">50</span>, <span class="string">&quot;quite\nhigh&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setTicker(textTicker)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set a more compact font size for bottom and left axis tick labels:</span></span><br><span class="line">        self.customPlot.xAxis.setTickLabelFont(QFont(QFont().family(), <span class="number">8</span>))</span><br><span class="line">        self.customPlot.yAxis.setTickLabelFont(QFont(QFont().family(), <span class="number">8</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set axis labels:</span></span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;Date&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;Random wobbly lines value&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make top and right axes visible but without ticks and labels:</span></span><br><span class="line">        self.customPlot.xAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set axis ranges to show all data:</span></span><br><span class="line">        self.customPlot.xAxis.setRange(self.now, self.now+<span class="number">24</span>*<span class="number">3600</span>*<span class="number">249</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># show legend with slightly transparent background brush:</span></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setBrush(QColor(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">150</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/01.png" alt=""></p><h2 id="Parametric-Curves-Demo">Parametric Curves Demo</h2><blockquote><p>Parametric curves with translucent gradient filling</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QBrush, QRadialGradient</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QPointF</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCP, QCPCurve, QCPCurveData</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Parametric Curves Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create empty curve objects:</span></span><br><span class="line">        self.fermatSpiral1 = QCPCurve(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.fermatSpiral2 = QCPCurve(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.deltoidRadial = QCPCurve(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># generate the curve data points:</span></span><br><span class="line">        pointCount = <span class="number">500</span></span><br><span class="line">        dataSpiral1 = [QCPCurveData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pointCount)]</span><br><span class="line">        dataSpiral2 = [QCPCurveData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pointCount)]</span><br><span class="line">        dataDeltoid = [QCPCurveData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pointCount)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(pointCount):</span><br><span class="line">            phi = i/(pointCount-<span class="number">1</span>)*<span class="number">8</span>*math.pi</span><br><span class="line">            theta = i/(pointCount-<span class="number">1</span>)*<span class="number">2</span>*math.pi</span><br><span class="line">            dataSpiral1[i] = QCPCurveData(i, math.sqrt(phi)*math.cos(phi), math.sqrt(phi)*math.sin(phi))</span><br><span class="line">            dataSpiral2[i] = QCPCurveData(i, -dataSpiral1[i].key, -dataSpiral1[i].value)</span><br><span class="line">            dataDeltoid[i] = QCPCurveData(i, <span class="number">2</span>*math.cos(<span class="number">2</span>*theta)+math.cos(<span class="number">1</span>*theta)+<span class="number">2</span>*math.sin(theta), <span class="number">2</span>*math.sin(<span class="number">2</span>*theta)-math.sin(<span class="number">1</span>*theta))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the data to the curves; we know t (i in loop above) is ascending, so set alreadySorted=True (saves an extra internal sort):</span></span><br><span class="line">        self.fermatSpiral1.data().<span class="built_in">set</span>(dataSpiral1, <span class="literal">True</span>)</span><br><span class="line">        self.fermatSpiral2.data().<span class="built_in">set</span>(dataSpiral2, <span class="literal">True</span>)</span><br><span class="line">        self.deltoidRadial.data().<span class="built_in">set</span>(dataDeltoid, <span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># color the curves:</span></span><br><span class="line">        self.fermatSpiral1.setPen(QPen(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>)))</span><br><span class="line">        self.fermatSpiral1.setBrush(QBrush(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">20</span>)))</span><br><span class="line">        self.fermatSpiral2.setPen(QPen(QColor(<span class="number">255</span>, <span class="number">120</span>, <span class="number">0</span>)))</span><br><span class="line">        self.fermatSpiral2.setBrush(QBrush(QColor(<span class="number">255</span>, <span class="number">120</span>, <span class="number">0</span>, <span class="number">30</span>)))</span><br><span class="line">        radialGrad = QRadialGradient(QPointF(<span class="number">310</span>, <span class="number">180</span>), <span class="number">200</span>)</span><br><span class="line">        radialGrad.setColorAt(<span class="number">0</span>, QColor(<span class="number">170</span>, <span class="number">20</span>, <span class="number">240</span>, <span class="number">100</span>))</span><br><span class="line">        radialGrad.setColorAt(<span class="number">0.5</span>, QColor(<span class="number">20</span>, <span class="number">10</span>, <span class="number">255</span>, <span class="number">40</span>))</span><br><span class="line">        radialGrad.setColorAt(<span class="number">1</span>,QColor(<span class="number">120</span>, <span class="number">20</span>, <span class="number">240</span>, <span class="number">10</span>))</span><br><span class="line">        self.deltoidRadial.setPen(QPen(QColor(<span class="number">170</span>, <span class="number">20</span>, <span class="number">240</span>)))</span><br><span class="line">        self.deltoidRadial.setBrush(QBrush(radialGrad))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set some basic customPlot config:</span></span><br><span class="line">        self.customPlot.setInteractions(QCP.iRangeDrag | QCP.iRangeZoom | QCP.iSelectPlottables)</span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/02.png" alt=""></p><h2 id="Bar-Chart-Demo">Bar Chart Demo</h2><blockquote><p>Three stacked bar charts with manual x axis tick labels</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QBrush, QFont, QLinearGradient</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPBars, QCP, QCPAxisTickerText</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Bar Chart Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set dark background gradient:</span></span><br><span class="line">        gradient = QLinearGradient(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">400</span>)</span><br><span class="line">        gradient.setColorAt(<span class="number">0</span>, QColor(<span class="number">90</span>, <span class="number">90</span>, <span class="number">90</span>))</span><br><span class="line">        gradient.setColorAt(<span class="number">0.38</span>, QColor(<span class="number">105</span>, <span class="number">105</span>, <span class="number">105</span>))</span><br><span class="line">        gradient.setColorAt(<span class="number">1</span>, QColor(<span class="number">70</span>, <span class="number">70</span>, <span class="number">70</span>))</span><br><span class="line">        self.customPlot.setBackground(QBrush(gradient))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create empty bar chart objects:</span></span><br><span class="line">        self.regen = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.nuclear = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.fossil = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.regen.setAntialiased(<span class="literal">False</span>) <span class="comment"># gives more crisp, pixel aligned bar borders</span></span><br><span class="line">        self.nuclear.setAntialiased(<span class="literal">False</span>)</span><br><span class="line">        self.fossil.setAntialiased(<span class="literal">False</span>)</span><br><span class="line">        self.regen.setStackingGap(<span class="number">1</span>)</span><br><span class="line">        self.nuclear.setStackingGap(<span class="number">1</span>)</span><br><span class="line">        self.fossil.setStackingGap(<span class="number">1</span>)</span><br><span class="line">        <span class="comment"># set names and colors:</span></span><br><span class="line">        self.fossil.setName(<span class="string">&quot;Fossil fuels&quot;</span>)</span><br><span class="line">        self.fossil.setPen(QPen(QColor(<span class="number">111</span>, <span class="number">9</span>, <span class="number">176</span>).lighter(<span class="number">170</span>)))</span><br><span class="line">        self.fossil.setBrush(QColor(<span class="number">111</span>, <span class="number">9</span>, <span class="number">176</span>))</span><br><span class="line">        self.nuclear.setName(<span class="string">&quot;Nuclear&quot;</span>)</span><br><span class="line">        self.nuclear.setPen(QPen(QColor(<span class="number">250</span>, <span class="number">170</span>, <span class="number">20</span>).lighter(<span class="number">150</span>)))</span><br><span class="line">        self.nuclear.setBrush(QColor(<span class="number">250</span>, <span class="number">170</span>, <span class="number">20</span>))</span><br><span class="line">        self.regen.setName(<span class="string">&quot;Regenerative&quot;</span>)</span><br><span class="line">        self.regen.setPen(QPen(QColor(<span class="number">0</span>, <span class="number">168</span>, <span class="number">140</span>).lighter(<span class="number">130</span>)))</span><br><span class="line">        self.regen.setBrush(QColor(<span class="number">0</span>, <span class="number">168</span>, <span class="number">140</span>))</span><br><span class="line">        <span class="comment"># stack bars on top of each other:</span></span><br><span class="line">        self.nuclear.moveAbove(self.fossil)</span><br><span class="line">        self.regen.moveAbove(self.nuclear)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare x axis with country labels:</span></span><br><span class="line">        ticks = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">        labels = [<span class="string">&quot;USA&quot;</span>, <span class="string">&quot;Japan&quot;</span>, <span class="string">&quot;Germany&quot;</span>, <span class="string">&quot;France&quot;</span>, <span class="string">&quot;UK&quot;</span>, <span class="string">&quot;Italy&quot;</span>, <span class="string">&quot;Canada&quot;</span>]</span><br><span class="line">        textTicker = QCPAxisTickerText()</span><br><span class="line">        textTicker.addTicks(ticks, labels)</span><br><span class="line">        self.customPlot.xAxis.setTicker(textTicker)</span><br><span class="line">        self.customPlot.xAxis.setTickLabelRotation(<span class="number">60</span>)</span><br><span class="line">        self.customPlot.xAxis.setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLength(<span class="number">0</span>, <span class="number">4</span>)</span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">0</span>, <span class="number">8</span>)</span><br><span class="line">        self.customPlot.xAxis.setBasePen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.xAxis.setTickPen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.xAxis.grid().setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis.grid().setPen(QPen(QColor(<span class="number">130</span>, <span class="number">130</span>, <span class="number">130</span>), <span class="number">0</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.xAxis.setTickLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.xAxis.setLabelColor(Qt.white)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare y axis:</span></span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">12.1</span>)</span><br><span class="line">        self.customPlot.yAxis.setPadding(<span class="number">5</span>) <span class="comment"># a bit more space to the left border</span></span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;Power Consumption in\nKilowatts per Capita (2007)&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setBasePen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.yAxis.setTickPen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.yAxis.setSubTickPen(QPen(Qt.white))</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis.setTickLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.yAxis.setLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.yAxis.grid().setPen(QPen(QColor(<span class="number">130</span>, <span class="number">130</span>, <span class="number">130</span>), <span class="number">0</span>, Qt.SolidLine))</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridPen(QPen(QColor(<span class="number">130</span>, <span class="number">130</span>, <span class="number">130</span>), <span class="number">0</span>, Qt.DotLine))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Add data:</span></span><br><span class="line">        self.fossilData  = [<span class="number">0.86</span>*<span class="number">10.5</span>, <span class="number">0.83</span>*<span class="number">5.5</span>, <span class="number">0.84</span>*<span class="number">5.5</span>, <span class="number">0.52</span>*<span class="number">5.8</span>, <span class="number">0.89</span>*<span class="number">5.2</span>, <span class="number">0.90</span>*<span class="number">4.2</span>, <span class="number">0.67</span>*<span class="number">11.2</span>]</span><br><span class="line">        self.nuclearData = [<span class="number">0.08</span>*<span class="number">10.5</span>, <span class="number">0.12</span>*<span class="number">5.5</span>, <span class="number">0.40</span>*<span class="number">5.8</span>, <span class="number">0.09</span>*<span class="number">5.2</span>, <span class="number">0.00</span>*<span class="number">4.2</span>, <span class="number">0.07</span>*<span class="number">11.2</span>]</span><br><span class="line">        self.regenData   = [<span class="number">0.06</span>*<span class="number">10.5</span>, <span class="number">0.05</span>*<span class="number">5.5</span>, <span class="number">0.04</span>*<span class="number">5.5</span>, <span class="number">0.06</span>*<span class="number">5.8</span>, <span class="number">0.02</span>*<span class="number">5.2</span>, <span class="number">0.07</span>*<span class="number">4.2</span>, <span class="number">0.25</span>*<span class="number">11.2</span>]</span><br><span class="line">        self.fossil.setData(ticks, self.fossilData)</span><br><span class="line">        self.nuclear.setData(ticks, self.nuclearData)</span><br><span class="line">        self.regen.setData(ticks, self.regenData)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup legend:</span></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, Qt.AlignTop|Qt.AlignHCenter)</span><br><span class="line">        self.customPlot.legend.setBrush(QColor(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">100</span>))</span><br><span class="line">        self.customPlot.legend.setBorderPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        legendFont = QFont()</span><br><span class="line">        legendFont.setPointSize(<span class="number">10</span>)</span><br><span class="line">        self.customPlot.legend.setFont(legendFont)</span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/03.png" alt=""></p><h2 id="Statistical-Box-Demo">Statistical Box Demo</h2><blockquote><p>Statistical 5-parameter-box-plot with outliers</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QColor, QBrush</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPStatisticalBox, QCP, QCPAxisTickerText</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;Statistical Box Demo&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        statistical = QCPStatisticalBox(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        boxBrush = QBrush(QColor(<span class="number">60</span>, <span class="number">60</span>, <span class="number">255</span>, <span class="number">100</span>))</span><br><span class="line">        boxBrush.setStyle(Qt.Dense6Pattern)  <span class="comment"># make it look oldschool</span></span><br><span class="line">        statistical.setBrush(boxBrush)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># specify data:</span></span><br><span class="line">        statistical.addData(<span class="number">1</span>, <span class="number">1.1</span>, <span class="number">1.9</span>, <span class="number">2.25</span>, <span class="number">2.7</span>, <span class="number">4.2</span>)</span><br><span class="line">        statistical.addData(<span class="number">2</span>, <span class="number">0.8</span>, <span class="number">1.6</span>, <span class="number">2.2</span>, <span class="number">3.2</span>, <span class="number">4.9</span>, [<span class="number">0.7</span>, <span class="number">0.34</span>, <span class="number">0.45</span>, <span class="number">6.2</span>, <span class="number">5.84</span>])  <span class="comment"># provide some outliers as list</span></span><br><span class="line">        statistical.addData(<span class="number">3</span>, <span class="number">0.2</span>, <span class="number">0.7</span>, <span class="number">1.1</span>, <span class="number">1.6</span>, <span class="number">2.9</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare manual x axis labels:</span></span><br><span class="line">        self.customPlot.xAxis.setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLength(<span class="number">0</span>, <span class="number">4</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLabelRotation(<span class="number">20</span>)</span><br><span class="line">        textTicker = QCPAxisTickerText()</span><br><span class="line">        textTicker.addTick(<span class="number">1</span>, <span class="string">&quot;Sample 1&quot;</span>)</span><br><span class="line">        textTicker.addTick(<span class="number">2</span>, <span class="string">&quot;Sample 2&quot;</span>)</span><br><span class="line">        textTicker.addTick(<span class="number">3</span>, <span class="string">&quot;Control Group&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.setTicker(textTicker)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare axes:</span></span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;O₂ Absorption [mg]&quot;</span>)</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        self.customPlot.xAxis.scaleRange(<span class="number">1.7</span>, self.customPlot.xAxis.<span class="built_in">range</span>().center())</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">7</span>)</span><br><span class="line">        self.customPlot.setInteractions(QCP.iRangeDrag | QCP.iRangeZoom)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240614/04.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt </tag>
            
            <tag> QCustomPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyqt QCustomPlot 简介、安装与实用代码示例（二）</title>
      <link href="/f1b80f317887/"/>
      <url>/f1b80f317887/</url>
      
        <content type="html"><![CDATA[<blockquote><p>完整代码我已经上传到 Github 上了，可前往 <a href="https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study">https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study</a> 获取。<br>完整文章路径：</p><ul><li><a href="https://www.nixgnauhcuy.cn/8d34424033d0/">Pyqt QCustomPlot 简介、安装与实用代码示例（一） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/f1b80f317887/">Pyqt QCustomPlot 简介、安装与实用代码示例（二） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/">Pyqt QCustomPlot 简介、安装与实用代码示例（三） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/423b1931ce58/">Pyqt QCustomPlot 简介、安装与实用代码示例（四） | nixgnauhcuy</a></li></ul></blockquote><h1>前言</h1><p>继上文，继续补充官方示例 demo 实现~</p><h1>实用代码示例</h1><h2 id="彩色图演示">彩色图演示</h2><blockquote><p>A 2D color map with color scale. Color scales can be dragged and zoomed just like axes</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPAxis, QCPColorScale, QCPColorMap</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCPColorGradient, QCPMarginGroup, QCP, QCPRange</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;彩色地图演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure axis rect:</span></span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom)) <span class="comment"># this will also allow rescaling the color scale by dragging/zooming</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;x&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;y&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set up the QCPColorMap:</span></span><br><span class="line">        self.colorMap = QCPColorMap(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        nx = <span class="number">200</span></span><br><span class="line">        ny = <span class="number">200</span></span><br><span class="line">        self.colorMap.data().setSize(nx, ny) <span class="comment"># we want the color map to have nx * ny data points</span></span><br><span class="line">        self.colorMap.data().setRange(QCPRange(-<span class="number">4</span>, <span class="number">4</span>), QCPRange(-<span class="number">4</span>, <span class="number">4</span>)) <span class="comment"># and span the coordinate range -4..4 in both key (x) and value (y) dimensions</span></span><br><span class="line">        <span class="comment"># now we assign some data, by accessing the QCPColorMapData instance of the color map:</span></span><br><span class="line">        x, y, z = <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> xIndex <span class="keyword">in</span> <span class="built_in">range</span>(nx):</span><br><span class="line">            <span class="keyword">for</span> yIndex <span class="keyword">in</span> <span class="built_in">range</span>(ny):</span><br><span class="line">                x, y =self.colorMap.data().cellToCoord(xIndex, yIndex)</span><br><span class="line">                r = <span class="number">3</span>*math.sqrt(x*x+y*y)+<span class="number">1e-2</span></span><br><span class="line">                z = <span class="number">2</span>*x*(math.cos(r+<span class="number">2</span>)/r-math.sin(r+<span class="number">2</span>)/r) <span class="comment"># the B field strength of dipole radiation (modulo physical constants)</span></span><br><span class="line">                self.colorMap.data().setCell(xIndex, yIndex, z)</span><br><span class="line">        <span class="comment"># add a color scale:</span></span><br><span class="line">        self.colorScale = QCPColorScale(self.customPlot)</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">1</span>, self.colorScale) <span class="comment"># add it to the right of the main axis rect</span></span><br><span class="line">        self.colorScale.setType(QCPAxis.atRight) <span class="comment"># scale shall be vertical bar with tick/axis labels right (actually atRight is already the default)</span></span><br><span class="line">        self.colorMap.setColorScale(self.colorScale) <span class="comment"># associate the color map with the color scale</span></span><br><span class="line">        self.colorScale.axis().setLabel(<span class="string">&quot;Magnetic Field Strength&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set the color gradient of the color map to one of the presets:</span></span><br><span class="line">        self.colorMap.setGradient(QCPColorGradient(QCPColorGradient.gpPolar))</span><br><span class="line">        <span class="comment"># we could have also created a QCPColorGradient instance and added own colors to</span></span><br><span class="line">        <span class="comment"># the gradient, see the documentation of QCPColorGradient for what&#x27;s possible.</span></span><br><span class="line"></span><br><span class="line">        self.colorMap.rescaleDataRange() </span><br><span class="line"></span><br><span class="line">        <span class="comment"># make sure the axis rect and color scale synchronize their bottom and top margins (so they line up):</span></span><br><span class="line">        marginGroup = QCPMarginGroup(self.customPlot)</span><br><span class="line">        self.customPlot.axisRect().setMarginGroup(QCP.msBottom|QCP.msTop, marginGroup)</span><br><span class="line">        self.colorScale.setMarginGroup(QCP.msBottom|QCP.msTop, marginGroup)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># rescale the key (x) and value (y) axes so the whole color map is visible:</span></span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/00.png" alt=""></p><h2 id="散点像素图演示">散点像素图演示</h2><blockquote><p>Pixmap scatter points and a multi-lined axis label, as well as a plot title at the top</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont, QBrush, QPixmap</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPTextElement, QCPScatterStyle, QCPGraph</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;散点像素图演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.axisRect().setBackground(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph().setLineStyle(QCPGraph.lsLine)</span><br><span class="line">        pen = QPen(QColor(<span class="number">255</span>, <span class="number">200</span>, <span class="number">20</span>, <span class="number">200</span>))</span><br><span class="line">        pen.setStyle(Qt.DashLine)</span><br><span class="line">        pen.setWidthF(<span class="number">2.5</span>)</span><br><span class="line">        self.customPlot.graph().setPen(pen)</span><br><span class="line">        self.customPlot.graph().setBrush(QBrush(QColor(<span class="number">255</span>,<span class="number">200</span>,<span class="number">20</span>,<span class="number">70</span>)))</span><br><span class="line">        self.customPlot.graph().setScatterStyle(QCPScatterStyle(QPixmap(<span class="string">&quot;./tmp.png&quot;</span>)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set graph name, will show up in legend next to icon:</span></span><br><span class="line">        self.customPlot.graph().setName(<span class="string">&quot;Data from Photovoltaic\nenergy barometer 2011&quot;</span>)</span><br><span class="line">        <span class="comment"># set data:</span></span><br><span class="line">        year = [<span class="number">2005</span>, <span class="number">2006</span>, <span class="number">2007</span>, <span class="number">2008</span>, <span class="number">2009</span>, <span class="number">2010</span>, <span class="number">2011</span>]</span><br><span class="line">        value = [<span class="number">2.17</span>, <span class="number">3.42</span>, <span class="number">4.94</span>, <span class="number">10.38</span>, <span class="number">15.86</span>, <span class="number">29.33</span>, <span class="number">52.1</span>]</span><br><span class="line">        self.customPlot.graph().setData(year, value)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set title of plot:</span></span><br><span class="line">        self.customPlot.plotLayout().insertRow(<span class="number">0</span>)</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">0</span>, QCPTextElement(self.customPlot, <span class="string">&quot;Regenerative Energies&quot;</span>, QFont(<span class="string">&quot;sans&quot;</span>, <span class="number">12</span>, QFont.Bold)))</span><br><span class="line">        <span class="comment"># axis configurations:</span></span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;Year&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;Installed Gigawatts of\nphotovoltaic in the European Union&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis2.setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setSubTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">2004.5</span>, <span class="number">2011.5</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">52</span>)</span><br><span class="line">        <span class="comment"># setup legend:</span></span><br><span class="line">        self.customPlot.legend.setFont(QFont(self.font().family(), <span class="number">7</span>))</span><br><span class="line">        self.customPlot.legend.setIconSize(<span class="number">50</span>, <span class="number">20</span>)</span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, Qt.AlignLeft | Qt.AlignTop)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/01.png" alt=""></p><blockquote><p>官方 demo 的背景图我没有，随便用黑色底了，太阳 logo 也没有，随便找了一个，效果一样就行~</p></blockquote><h2 id="实时数据演示">实时数据演示</h2><blockquote><p>Real time generated data and time bottom axis</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QTime, QTimer</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPAxisTickerTime</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;实时数据演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.lastPointKey = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(QPen(QColor(<span class="number">40</span>, <span class="number">110</span>, <span class="number">255</span>)))</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(QPen(QColor(<span class="number">255</span>, <span class="number">110</span>, <span class="number">40</span>)))</span><br><span class="line"></span><br><span class="line">        timeTicker = QCPAxisTickerTime()</span><br><span class="line">        timeTicker.setTimeFormat(<span class="string">&quot;%h:%m:%s&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.setTicker(timeTicker)</span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line">        self.customPlot.yAxis.setRange(-<span class="number">1.2</span>, <span class="number">1.2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make left and bottom axes transfer their ranges to right and top axes:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged.connect(self.customPlot.xAxis2.setRange)</span><br><span class="line">        self.customPlot.yAxis.rangeChanged.connect(self.customPlot.yAxis2.setRange)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup a timer that repeatedly calls MainWindow::realtimeDataSlot:</span></span><br><span class="line">        self.curTime = QTime.currentTime()</span><br><span class="line">        self.dataTimer = QTimer(self)</span><br><span class="line">        self.dataTimer.timeout.connect(self.realtimeDataSlot)</span><br><span class="line">        self.dataTimer.start(<span class="number">0</span>) <span class="comment"># Interval 0 means to refresh as fast as possible</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">realtimeDataSlot</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># calculate two new data points:</span></span><br><span class="line">        key = self.curTime.msecsTo(QTime.currentTime())/<span class="number">1000.0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> key-self.lastPointKey &gt; <span class="number">0.002</span>: <span class="comment"># at most add point every 2 ms</span></span><br><span class="line">            <span class="comment"># add data to lines:</span></span><br><span class="line">            self.customPlot.graph(<span class="number">0</span>).addData(key, math.sin(key)+random.random()*<span class="number">1</span>*math.sin(key/<span class="number">0.3843</span>))</span><br><span class="line">            self.customPlot.graph(<span class="number">1</span>).addData(key, math.cos(key)+random.random()*<span class="number">0.5</span>*math.sin(key/<span class="number">0.4364</span>))</span><br><span class="line">            <span class="comment"># rescale value (vertical) axis to fit the current data:</span></span><br><span class="line">            <span class="comment"># self.customPlot.graph(0).rescaleValueAxis()</span></span><br><span class="line">            <span class="comment"># self.customPlot.graph(1).rescaleValueAxis(True)</span></span><br><span class="line">            self.lastPointKey = key</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make key axis range scroll with the data (at a constant range size of 8):</span></span><br><span class="line">        self.customPlot.xAxis.setRange(key, <span class="number">8</span>, Qt.AlignRight)</span><br><span class="line">        self.customPlot.replot()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/02.gif" alt=""></p><h2 id="多轴演示">多轴演示</h2><blockquote><p>Multiple plot styles with different key/value axes and pi tick labeling at top axis</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont, QBrush</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QLocale</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle, QCPTextElement, QCPAxisTickerPi, QCPErrorBars</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;多轴演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.setLocale(QLocale(QLocale.English, QLocale.UnitedKingdom)) <span class="comment"># period as decimal separator and comma as thousand separator</span></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        legendFont = self.font()  <span class="comment"># start out with MainWindow&#x27;s font..</span></span><br><span class="line">        legendFont.setPointSize(<span class="number">9</span>) <span class="comment"># and make a bit smaller for legend</span></span><br><span class="line">        self.customPlot.legend.setFont(legendFont)</span><br><span class="line">        self.customPlot.legend.setBrush(QBrush(QColor(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">230</span>)))</span><br><span class="line">        <span class="comment"># by default, the legend is in the inset layout of the main axis rect. So this is how we access it to change legend placement:</span></span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, Qt.AlignBottom|Qt.AlignRight)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 0: key axis left, value axis bottom</span></span><br><span class="line">        <span class="comment"># will contain left maxwell-like function</span></span><br><span class="line">        self.customPlot.addGraph(self.customPlot.yAxis, self.customPlot.xAxis)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(QPen(QColor(<span class="number">255</span>, <span class="number">100</span>, <span class="number">0</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setLineStyle(QCPGraph.lsLine)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssDisc, <span class="number">5</span>))</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setName(<span class="string">&quot;Left maxwell function&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 1: key axis bottom, value axis left (those are the default axes)</span></span><br><span class="line">        <span class="comment"># will contain bottom maxwell-like function with error bars</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(QPen(Qt.red))</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setLineStyle(QCPGraph.lsStepCenter)</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, Qt.red, Qt.white, <span class="number">7</span>))</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setName(<span class="string">&quot;Bottom maxwell function&quot;</span>)</span><br><span class="line">        errorBars = QCPErrorBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        errorBars.removeFromLegend()</span><br><span class="line">        errorBars.setDataPlottable(self.customPlot.graph(<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 2: key axis top, value axis right</span></span><br><span class="line">        <span class="comment"># will contain high frequency sine with low frequency beating:</span></span><br><span class="line">        self.customPlot.addGraph(self.customPlot.xAxis2, self.customPlot.yAxis2)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setPen(QPen(Qt.blue))</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setName(<span class="string">&quot;High frequency sine&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 3: same axes as graph 2</span></span><br><span class="line">        <span class="comment"># will contain low frequency beating envelope of graph 2</span></span><br><span class="line">        self.customPlot.addGraph(self.customPlot.xAxis2, self.customPlot.yAxis2)</span><br><span class="line">        blueDotPen = QPen(QColor(<span class="number">30</span>, <span class="number">40</span>, <span class="number">255</span>, <span class="number">150</span>))</span><br><span class="line">        blueDotPen.setStyle(Qt.DotLine)</span><br><span class="line">        blueDotPen.setWidthF(<span class="number">4</span>)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setPen(blueDotPen)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setName(<span class="string">&quot;Sine envelope&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># setup for graph 4: key axis right, value axis top</span></span><br><span class="line">        <span class="comment"># will contain parabolically distributed data points with some random perturbance</span></span><br><span class="line">        self.customPlot.addGraph(self.customPlot.yAxis2, self.customPlot.xAxis2)</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setPen(QPen(QColor(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>, <span class="number">255</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setLineStyle(QCPGraph.lsNone)</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, <span class="number">4</span>))</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setName(<span class="string">&quot;Some random data around\na quadratic function&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># generate data, just playing with numbers, not much to learn here:</span></span><br><span class="line">        x0 = [<span class="number">3</span>*i/<span class="number">25.0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">25</span>)]</span><br><span class="line">        y0 = [math.exp(-x*x*<span class="number">0.8</span>)*(x*x+x) <span class="keyword">for</span> x <span class="keyword">in</span> x0]</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x0, y0)</span><br><span class="line"></span><br><span class="line">        x1 = [<span class="number">3</span>*i/<span class="number">15.0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>)]</span><br><span class="line">        y1 = [math.exp(-x*x)*(x*x)*<span class="number">2.6</span> <span class="keyword">for</span> x <span class="keyword">in</span> x1]</span><br><span class="line">        y1err = [y*<span class="number">0.25</span> <span class="keyword">for</span> y <span class="keyword">in</span> y1]</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setData(x1, y1)</span><br><span class="line">        errorBars.setData(y1err, y1err)</span><br><span class="line"></span><br><span class="line">        x2 = [i/<span class="number">250.0</span>*<span class="number">3</span>*math.pi <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>)]</span><br><span class="line">        y2 = [math.sin(x*<span class="number">12</span>)*math.cos(x)*<span class="number">10</span> <span class="keyword">for</span> x <span class="keyword">in</span> x2]</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setData(x2, y2)</span><br><span class="line"></span><br><span class="line">        x3 = x2</span><br><span class="line">        y3 = [math.cos(x)*<span class="number">10</span> <span class="keyword">for</span> x <span class="keyword">in</span> x3]</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setData(x3, y3)</span><br><span class="line"></span><br><span class="line">        x4 = [i/<span class="number">250.0</span>*<span class="number">100</span>-<span class="number">50</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>)]</span><br><span class="line">        y4 = [<span class="number">0.01</span>*x*x + <span class="number">1.5</span>*(random.random()-<span class="number">0.5</span>) + <span class="number">1.5</span>*math.pi <span class="keyword">for</span> x <span class="keyword">in</span> x4]</span><br><span class="line">        self.customPlot.graph(<span class="number">4</span>).setData(x4, y4)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># activate top and right axes, which are invisible by default:</span></span><br><span class="line">        self.customPlot.xAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set ranges appropriate to show data:</span></span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">0</span>, <span class="number">2.7</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">2.6</span>)</span><br><span class="line">        self.customPlot.xAxis2.setRange(<span class="number">0</span>, <span class="number">3.0</span>*math.pi)</span><br><span class="line">        self.customPlot.yAxis2.setRange(-<span class="number">70</span>, <span class="number">35</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set pi ticks on top axis:</span></span><br><span class="line">        self.customPlot.xAxis2.setTicker(QCPAxisTickerPi())</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add title layout element:</span></span><br><span class="line">        self.customPlot.plotLayout().insertRow(<span class="number">0</span>)</span><br><span class="line">        self.customPlot.plotLayout().addElement(<span class="number">0</span>, <span class="number">0</span>, QCPTextElement(self.customPlot, <span class="string">&quot;Way too many graphs in one plot&quot;</span>, QFont(<span class="string">&quot;sans&quot;</span>, <span class="number">12</span>, QFont.Bold)))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set labels:</span></span><br><span class="line">        self.customPlot.xAxis.setLabel(<span class="string">&quot;Bottom axis with outward ticks&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.setLabel(<span class="string">&quot;Left axis label&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis2.setLabel(<span class="string">&quot;Top axis label&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis2.setLabel(<span class="string">&quot;Right axis label&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make ticks on bottom axis go outward:</span></span><br><span class="line">        self.customPlot.xAxis.setTickLength(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">        self.customPlot.xAxis.setSubTickLength(<span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make ticks on right axis go inward and outward:</span></span><br><span class="line">        self.customPlot.yAxis2.setTickLength(<span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">        self.customPlot.yAxis2.setSubTickLength(<span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/03.png" alt=""></p><h2 id="对数轴演示">对数轴演示</h2><blockquote><p>Logarithmic axis scaling. Note correct display of the sine function crossing zero in negative infinity</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QBrush</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPGraphData, QCP, QCPAxis, QCPAxisTickerLog</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;对数轴演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.setNoAntialiasingOnDrag(<span class="literal">True</span>) <span class="comment"># more performance/responsiveness during dragging</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        pen = QPen(QColor(<span class="number">255</span>,<span class="number">170</span>,<span class="number">100</span>))</span><br><span class="line">        pen.setWidth(<span class="number">2</span>)</span><br><span class="line">        pen.setStyle(Qt.DotLine)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setName(<span class="string">&quot;x&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(QPen(Qt.red))</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setBrush(QBrush(QColor(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">20</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setName(<span class="string">&quot;-sin(x)exp(x)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setPen(QPen(Qt.blue))</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setBrush(QBrush(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">20</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setName(<span class="string">&quot; sin(x)exp(x)&quot;</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph ()</span><br><span class="line">        pen = QPen(QColor(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">        pen.setWidth(<span class="number">1</span>)</span><br><span class="line">        pen.setStyle(Qt.DashLine)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setPen(pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setBrush(QBrush(QColor(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">15</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setLineStyle(QCPGraph.lsStepCenter)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setName(<span class="string">&quot;x!&quot;</span>)</span><br><span class="line"></span><br><span class="line">        dataCount = <span class="number">200</span></span><br><span class="line">        dataFactorialCount = <span class="number">21</span></span><br><span class="line">        dataLinear = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataCount)]</span><br><span class="line">        dataMinusSinExp = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataCount)]</span><br><span class="line">        dataPlusSinExp = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataCount)]</span><br><span class="line">        dataFactorial = [QCPGraphData() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataFactorialCount)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataCount):</span><br><span class="line">            dataLinear[i].key = i/<span class="number">10.0</span></span><br><span class="line">            dataLinear[i].value = dataLinear[i].key</span><br><span class="line">            dataMinusSinExp[i].key = i/<span class="number">10.0</span></span><br><span class="line">            dataMinusSinExp[i].value = -math.sin(dataMinusSinExp[i].key)*math.exp(dataMinusSinExp[i].key)</span><br><span class="line">            dataPlusSinExp[i].key = i/<span class="number">10.0</span></span><br><span class="line">            dataPlusSinExp[i].value = math.sin(dataPlusSinExp[i].key)*math.exp(dataPlusSinExp[i].key)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dataFactorialCount):</span><br><span class="line">            dataFactorial[i].key = i</span><br><span class="line">            dataFactorial[i].value = <span class="number">1.0</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i+<span class="number">1</span>):</span><br><span class="line">                dataFactorial[i].value *= k</span><br><span class="line"></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).data().<span class="built_in">set</span>(dataLinear)</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).data().<span class="built_in">set</span>(dataMinusSinExp)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).data().<span class="built_in">set</span>(dataPlusSinExp)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).data().<span class="built_in">set</span>(dataFactorial)</span><br><span class="line">        </span><br><span class="line">        self.customPlot.xAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis.setScaleType(QCPAxis.stLogarithmic)</span><br><span class="line">        self.customPlot.yAxis2.setScaleType(QCPAxis.stLogarithmic)</span><br><span class="line">        logTicker = QCPAxisTickerLog()</span><br><span class="line">        self.customPlot.yAxis.setTicker(logTicker)</span><br><span class="line">        self.customPlot.yAxis2.setTicker(logTicker)</span><br><span class="line">        self.customPlot.yAxis.setNumberFormat(<span class="string">&quot;eb&quot;</span>) <span class="comment"># e = exponential, b = beautiful decimal powers</span></span><br><span class="line">        self.customPlot.yAxis.setNumberPrecision(<span class="number">0</span>) <span class="comment"># makes sure &quot;1*10^4&quot; is displayed only as &quot;10^4&quot;</span></span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">0</span>, <span class="number">19.9</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">1e-2</span>, <span class="number">1e10</span>)</span><br><span class="line">        <span class="comment"># make range draggable and zoomable:</span></span><br><span class="line">        self.customPlot.setInteractions(QCP.Interactions(QCP.iRangeDrag | QCP.iRangeZoom))</span><br><span class="line">        <span class="comment"># make top right axes clones of bottom left axes:</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line">        <span class="comment"># connect signals so top and right axes move in sync with bottom and left axes:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged.connect(self.customPlot.xAxis2.setRange)</span><br><span class="line">        self.customPlot.yAxis.rangeChanged.connect(self.customPlot.yAxis2.setRange)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setBrush(QBrush(QColor(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">150</span>)))</span><br><span class="line">        self.customPlot.axisRect().insetLayout().setInsetAlignment(<span class="number">0</span>, Qt.AlignLeft|Qt.AlignTop) <span class="comment"># make legend align in top left corner or axis rect</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240613/04.png" alt=""></p><h1>结语</h1><p>还剩下一些示例，待续篇更新！~</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt </tag>
            
            <tag> QCustomPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pyqt QCustomPlot 简介、安装与实用代码示例（一）</title>
      <link href="/8d34424033d0/"/>
      <url>/8d34424033d0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>完整代码我已经上传到 Github 上了，可前往 <a href="https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study">https://github.com/nixgnauhcuy/QCustomPlot_Pyqt_Study</a> 获取。<br>完整文章路径：</p><ul><li><a href="https://www.nixgnauhcuy.cn/8d34424033d0/">Pyqt QCustomPlot 简介、安装与实用代码示例（一） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/f1b80f317887/">Pyqt QCustomPlot 简介、安装与实用代码示例（二） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/a0c7dce1d4fa/">Pyqt QCustomPlot 简介、安装与实用代码示例（三） | nixgnauhcuy</a></li><li><a href="https://www.nixgnauhcuy.cn/423b1931ce58/">Pyqt QCustomPlot 简介、安装与实用代码示例（四） | nixgnauhcuy</a></li></ul></blockquote><h1>简介</h1><p><strong><a href="https://www.qcustomplot.com/">QCustomPlot</a></strong> 是一个用于绘图和数据可视化的 Qt C++ 小部件。它没有其他依赖项，并且有详细的文档说明。这个绘图库专注于制作高质量的、适合发表的二维图表和图形，同时在实时可视化应用中提供高性能。</p><p><strong>QCustomPlot</strong> 可以导出为多种格式，例如矢量化的 PDF 文件和光栅化图像（如 PNG、JPG 和 BMP）。QCustomPlot 是在应用程序内部显示实时数据以及为其他媒体制作高质量图表的解决方案。</p><blockquote><p><strong>QCustomPlot</strong> is a Qt C++ widget for plotting and data visualization. It has no further dependencies and is <a href="https://www.qcustomplot.com/index.php/support/documentation">well documented</a>. This plotting library focuses on making good looking, publication quality 2D plots, graphs and charts, as well as offering high performance for realtime visualization applications. Have a look at the <a href="https://www.qcustomplot.com/index.php/tutorials/settingup">Setting Up</a> and the <a href="https://www.qcustomplot.com/index.php/tutorials/basicplotting">Basic Plotting</a> tutorials to get started.</p><p>QCustomPlot can export to various formats such as vectorized PDF files and rasterized images like PNG, JPG and BMP. QCustomPlot is the solution for displaying of realtime data inside the application as well as producing high quality plots for other media.</p></blockquote><h1>安装</h1><p>推荐安装 <strong>QCustomPlot_PyQt5</strong>，<strong>QCustomPlot2</strong> 目前许多源都无法下载，目前只有<s>豆瓣源</s>和腾讯源有（豆瓣源已失效）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pip install QCustomPlot_PyQt5</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">pip install -i https://mirrors.cloud.tencent.com/pypi/simple/ QCustomPlot2</span><br></pre></td></tr></table></figure><h1>实用代码示例</h1><p>官方提供了多个 demo，不过都是使用 qtC++实现的，由于我们使用的 pyqt，故使用 pyqt 实现。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/00.png" alt=""></p><h2 id="带有填充的简单衰减正弦函数及其红色的指数包络线">带有填充的简单衰减正弦函数及其红色的指数包络线</h2><blockquote><p>A simple decaying sine function with fill and its exponential envelope in red</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QBrush, QColor</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCP, QCPAxisTickerTime, QCPRange</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;带有填充的简单衰减正弦函数及其红色的指数包络线&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">400</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add two new graphs and set their look:</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(QPen(Qt.blue)) <span class="comment"># line color blue for first graph</span></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setBrush(QBrush(QColor(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, <span class="number">20</span>))) <span class="comment"># first graph will be filled with translucent blue</span></span><br><span class="line"></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(QPen(Qt.red)) <span class="comment"># line color red for second graph</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># generate some points of data (y0 for first, y1 for second graph):</span></span><br><span class="line">        x = []</span><br><span class="line">        y0 = []</span><br><span class="line">        y1 = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">251</span>):</span><br><span class="line">            x.append(i)</span><br><span class="line">            y0.append(math.exp(-i/<span class="number">150.0</span>)*math.cos(i/<span class="number">10.0</span>)) <span class="comment"># exponentially decaying cosine</span></span><br><span class="line">            y1.append(math.exp(-i/<span class="number">150.0</span>)) <span class="comment"># exponential envelope</span></span><br><span class="line"></span><br><span class="line">        self.customPlot.xAxis.setTicker(QCPAxisTickerTime())</span><br><span class="line">        self.customPlot.xAxis.setRange(<span class="number">0</span>, <span class="number">250</span>)</span><br><span class="line">        self.customPlot.yAxis.setRange(-<span class="number">1.1</span>, <span class="number">1.1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># configure right and top axis to show ticks but no labels:</span></span><br><span class="line">        <span class="comment"># (see QCPAxisRect::setupFullAxesBox for a quicker method to do this)</span></span><br><span class="line">        self.customPlot.xAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis2.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis2.setTickLabels(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass data points to graphs:</span></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x, y0)</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setData(x, y1)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># let the ranges scale themselves so graph 0 fits perfectly in the visible area:</span></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).rescaleAxes()</span><br><span class="line">        <span class="comment"># same thing for graph 1, but only enlarge ranges (in case graph 1 is smaller than graph 0):</span></span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).rescaleAxes(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># Note: we could have also just called customPlot-&gt;rescaleAxes(); instead</span></span><br><span class="line">        <span class="comment"># Allow user to drag axis ranges with mouse, zoom with mouse wheel and select graphs by clicking:</span></span><br><span class="line">        self.customPlot.setInteractions(QCP.iRangeDrag | QCP.iRangeZoom | QCP.iSelectPlottables)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make left and bottom axes always transfer their ranges to right and top axes:</span></span><br><span class="line">        self.customPlot.xAxis.rangeChanged[QCPRange].connect(self.customPlot.xAxis2.setRange)</span><br><span class="line">        self.customPlot.yAxis.rangeChanged[QCPRange].connect(self.customPlot.yAxis2.setRange)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/01.png" alt=""></p><h2 id="具有数据点的-sinc-函数、相应的误差条和-2–sigma-置信带">具有数据点的 sinc 函数、相应的误差条和 2–sigma 置信带</h2><blockquote><p>sinc function with data points, corresponding error bars and a 2-sigma confidence band</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QBrush, QColor, QFont</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt, QLocale</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle, QCPErrorBars</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;具有数据点的 sinc 函数、相应的误差条和 2--sigma 置信带&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">400</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setFont(QFont(<span class="string">&quot;Helvetica&quot;</span>,<span class="number">9</span>))</span><br><span class="line">        <span class="comment"># set locale to english, so we get english decimal separator:</span></span><br><span class="line">        self.customPlot.setLocale(QLocale(QLocale.English, QLocale.UnitedKingdom))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># add confidence band graphs:</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.pen = QPen(Qt.PenStyle.DotLine)</span><br><span class="line">        self.pen.setWidth(<span class="number">1</span>)</span><br><span class="line">        self.pen.setColor(QColor(<span class="number">180</span>,<span class="number">180</span>,<span class="number">180</span>))</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setName(<span class="string">&quot;Confidence Band 68%&quot;</span>)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setPen(self.pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setBrush(QBrush(QColor(<span class="number">255</span>,<span class="number">50</span>,<span class="number">30</span>,<span class="number">20</span>)))</span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.legend.removeItem(self.customPlot.legend.itemCount()-<span class="number">1</span>) <span class="comment"># don&#x27;t show two confidence band graphs in legend</span></span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setPen(self.pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setChannelFillGraph(self.customPlot.graph(<span class="number">1</span>))</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># add theory curve graph:</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.pen.setStyle(Qt.PenStyle.DashLine)</span><br><span class="line">        self.pen.setWidth(<span class="number">2</span>)</span><br><span class="line">        self.pen.setColor(Qt.GlobalColor.red)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setPen(self.pen)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setName(<span class="string">&quot;Theory Curve&quot;</span>)</span><br><span class="line">        <span class="comment"># add data point graph:</span></span><br><span class="line">        self.customPlot.addGraph()</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setPen(QPen(Qt.GlobalColor.blue))</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setLineStyle(QCPGraph.lsNone)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCross, <span class="number">4</span>))</span><br><span class="line">        <span class="comment"># add error bars:</span></span><br><span class="line">        self.errorBars = QCPErrorBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        self.errorBars.removeFromLegend()</span><br><span class="line">        self.errorBars.setAntialiased(<span class="literal">False</span>)</span><br><span class="line">        self.errorBars.setDataPlottable(self.customPlot.graph(<span class="number">3</span>))</span><br><span class="line">        self.errorBars.setPen(QPen(QColor(<span class="number">180</span>,<span class="number">180</span>,<span class="number">180</span>)))</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setName(<span class="string">&quot;Measurement&quot;</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># generate ideal sinc curve data and some randomly perturbed data for scatter plot:</span></span><br><span class="line">        x0 = []</span><br><span class="line">        y0 = []</span><br><span class="line">        yConfUpper = []</span><br><span class="line">        yConfLower = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">250</span>):</span><br><span class="line">            x0.append((i/<span class="number">249.0</span>-<span class="number">0.5</span>)*<span class="number">30</span>+<span class="number">0.01</span>) <span class="comment"># by adding a small offset we make sure not do divide by zero in next code line</span></span><br><span class="line">            y0.append(math.sin(x0[i])/x0[i]) <span class="comment"># sinc function</span></span><br><span class="line">            yConfUpper.append(y0[i]+<span class="number">0.15</span>)</span><br><span class="line">            yConfLower.append(y0[i]-<span class="number">0.15</span>)</span><br><span class="line">            x0[i] *= <span class="number">1000</span></span><br><span class="line">        x1 = []</span><br><span class="line">        y1 = []</span><br><span class="line">        y1err = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">            <span class="comment"># generate a gaussian distributed random number:</span></span><br><span class="line">            tmp1 = random.random()</span><br><span class="line">            tmp2 = random.random()</span><br><span class="line">            r = math.sqrt(-<span class="number">2</span>*math.log(tmp1))*math.cos(<span class="number">2</span>*math.pi*tmp2) <span class="comment"># box-muller transform for gaussian distribution</span></span><br><span class="line">            <span class="comment"># set y1 to value of y0 plus a random gaussian pertubation:</span></span><br><span class="line">            x1.append((i/<span class="number">50.0</span>-<span class="number">0.5</span>)*<span class="number">30</span>+<span class="number">0.25</span>)</span><br><span class="line">            y1.append(math.sin(x1[i])/x1[i]+r*<span class="number">0.15</span>)</span><br><span class="line">            x1[i] *= <span class="number">1000</span></span><br><span class="line">            y1err.append(<span class="number">0.15</span>)</span><br><span class="line">        <span class="comment"># pass data to graphs and let QCustomPlot determine the axes ranges so the whole thing is visible:</span></span><br><span class="line">        self.customPlot.graph(<span class="number">0</span>).setData(x0, yConfUpper)</span><br><span class="line">        self.customPlot.graph(<span class="number">1</span>).setData(x0, yConfLower)</span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).setData(x0, y0)</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).setData(x1, y1)</span><br><span class="line">        self.errorBars.setData(y1err, y1err) <span class="comment"># Wanging: There may be something wrong here</span></span><br><span class="line">        self.customPlot.graph(<span class="number">2</span>).rescaleAxes()</span><br><span class="line">        self.customPlot.graph(<span class="number">3</span>).rescaleAxes(<span class="literal">True</span>)</span><br><span class="line">        <span class="comment"># setup look of bottom tick labels:</span></span><br><span class="line">        self.customPlot.xAxis.setTickLabelRotation(<span class="number">30</span>)c</span><br><span class="line">        self.customPlot.xAxis.ticker().setTickCount(<span class="number">9</span>)</span><br><span class="line">        self.customPlot.xAxis.setNumberFormat(<span class="string">&quot;ebc&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.setNumberPrecision(<span class="number">1</span>)</span><br><span class="line">        self.customPlot.xAxis.moveRange(-<span class="number">10</span>)</span><br><span class="line">        <span class="comment"># make top right axes clones of bottom left axes. Looks prettier:</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/02.png" alt=""></p><h2 id="几种散点样式的演示">几种散点样式的演示</h2><blockquote><p>A demonstration of several scatter point styles</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont, QPainterPath</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;几种散点样式的演示&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">400</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setFont(QFont(<span class="string">&quot;Helvetica&quot;</span>, <span class="number">9</span>))</span><br><span class="line">        self.customPlot.legend.setRowSpacing(-<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">        shapes = [</span><br><span class="line">            QCPScatterStyle.ssCross, </span><br><span class="line">            QCPScatterStyle.ssPlus, </span><br><span class="line">            QCPScatterStyle.ssCircle, </span><br><span class="line">            QCPScatterStyle.ssDisc, </span><br><span class="line">            QCPScatterStyle.ssSquare, </span><br><span class="line">            QCPScatterStyle.ssDiamond, </span><br><span class="line">            QCPScatterStyle.ssStar, </span><br><span class="line">            QCPScatterStyle.ssTriangle, </span><br><span class="line">            QCPScatterStyle.ssTriangleInverted, </span><br><span class="line">            QCPScatterStyle.ssCrossSquare, </span><br><span class="line">            QCPScatterStyle.ssPlusSquare, </span><br><span class="line">            QCPScatterStyle.ssCrossCircle, </span><br><span class="line">            QCPScatterStyle.ssPlusCircle, </span><br><span class="line">            QCPScatterStyle.ssPeace, </span><br><span class="line">            QCPScatterStyle.ssCustom</span><br><span class="line">        ]</span><br><span class="line">        shapes_names = [</span><br><span class="line">            <span class="string">&quot;ssCross&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssPlus&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssCircle&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssDisc&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssSquare&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssDiamond&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssStar&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssTriangle&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssTriangleInverted&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssCrossSquare&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssPlusSquare&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssCrossCircle&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssPlusCircle&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssPeace&quot;</span>,</span><br><span class="line">            <span class="string">&quot;ssCustom&quot;</span></span><br><span class="line">        ]</span><br><span class="line"></span><br><span class="line">        self.pen = QPen()</span><br><span class="line">        <span class="comment"># add graphs with different scatter styles:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(shapes)):</span><br><span class="line">            self.customPlot.addGraph()</span><br><span class="line">            self.pen.setColor(QColor(<span class="built_in">int</span>(math.sin(i*<span class="number">0.3</span>)*<span class="number">100</span>+<span class="number">100</span>), <span class="built_in">int</span>(math.sin(i*<span class="number">0.6</span>+<span class="number">0.7</span>)*<span class="number">100</span>+<span class="number">100</span>), <span class="built_in">int</span>(math.sin(i*<span class="number">0.4</span>+<span class="number">0.6</span>)*<span class="number">100</span>+<span class="number">100</span>)))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># generate data:</span></span><br><span class="line">            x = [k/<span class="number">10.0</span> * <span class="number">4</span>*<span class="number">3.14</span> + <span class="number">0.01</span> <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">            y = [<span class="number">7</span>*math.sin(x[k])/x[k] + (<span class="built_in">len</span>(shapes)-i)*<span class="number">5</span> <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line"></span><br><span class="line">            self.customPlot.graph(i).setData(x, y)</span><br><span class="line">            self.customPlot.graph(i).rescaleAxes(<span class="literal">True</span>)</span><br><span class="line">            self.customPlot.graph(i).setPen(self.pen)</span><br><span class="line">            self.customPlot.graph(i).setName(shapes_names[i])</span><br><span class="line">            self.customPlot.graph(i).setLineStyle(QCPGraph.lsLine)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># set scatter style:</span></span><br><span class="line">            <span class="keyword">if</span> shapes[i] != QCPScatterStyle.ssCustom:</span><br><span class="line">                self.customPlot.graph(i).setScatterStyle(QCPScatterStyle(shapes[i], <span class="number">10</span>))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                customScatterPath = QPainterPath()</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">                    customScatterPath.cubicTo(math.cos(<span class="number">2</span>*math.pi*j/<span class="number">3.0</span>)*<span class="number">9</span>, math.sin(<span class="number">2</span>*math.pi*j/<span class="number">3.0</span>)*<span class="number">9</span>, math.cos(<span class="number">2</span>*math.pi*(j+<span class="number">0.9</span>)/<span class="number">3.0</span>)*<span class="number">9</span>, math.sin(<span class="number">2</span>*math.pi*(j+<span class="number">0.9</span>)/<span class="number">3.0</span>)*<span class="number">9</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">                self.customPlot.graph(i).setScatterStyle(QCPScatterStyle(customScatterPath, QPen(Qt.black, <span class="number">0</span>), QColor(<span class="number">40</span>, <span class="number">70</span>, <span class="number">255</span>, <span class="number">50</span>), <span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set blank axis lines:</span></span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        self.customPlot.xAxis.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis.setTicks(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.xAxis.setTickLabels(<span class="literal">False</span>)</span><br><span class="line">        self.customPlot.yAxis.setTickLabels(<span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># make top right axes clones of bottom left axes:</span></span><br><span class="line">        self.customPlot.axisRect().setupFullAxesBox()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/03.png" alt=""></p><h2 id="展示-QCustomPlot-在设计绘图方面的多功能性">展示 QCustomPlot 在设计绘图方面的多功能性</h2><blockquote><p>Demonstrating QCustomPlot’s versatility in styling the plot</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys, math, random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QGridLayout, QWidget</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPen, QColor, QFont, QBrush, QLinearGradient</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> Qt</span><br><span class="line"><span class="keyword">from</span> QCustomPlot_PyQt5 <span class="keyword">import</span> QCustomPlot, QCPGraph, QCPScatterStyle, QCPBars, QCPLineEnding</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainForm</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line"></span><br><span class="line">        self.setWindowTitle(<span class="string">&quot;展示 QCustomPlot 在设计绘图方面的多功能性&quot;</span>)</span><br><span class="line">        self.resize(<span class="number">600</span>,<span class="number">400</span>)</span><br><span class="line"></span><br><span class="line">        self.customPlot = QCustomPlot(self)</span><br><span class="line">        self.gridLayout = QGridLayout(self).addWidget(self.customPlot)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># prepare data:</span></span><br><span class="line">        x1 = [i/(<span class="number">20</span>-<span class="number">1</span>)*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>)]</span><br><span class="line">        y1 = [math.cos(x*<span class="number">0.8</span>+math.sin(x*<span class="number">0.16</span>+<span class="number">1.0</span>))*math.sin(x*<span class="number">0.54</span>)+<span class="number">1.4</span> <span class="keyword">for</span> x <span class="keyword">in</span> x1]</span><br><span class="line">        x2 = [i/(<span class="number">100</span>-<span class="number">1</span>)*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>)]</span><br><span class="line">        y2 = [math.cos(x*<span class="number">0.85</span>+math.sin(x*<span class="number">0.165</span>+<span class="number">1.1</span>))*math.sin(x*<span class="number">0.50</span>)+<span class="number">1.7</span> <span class="keyword">for</span> x <span class="keyword">in</span> x2]</span><br><span class="line">        x3 = [i/(<span class="number">20</span>-<span class="number">1</span>)*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>)]</span><br><span class="line">        y3 = [<span class="number">0.05</span>+<span class="number">3</span>*(<span class="number">0.5</span>+math.cos(x*x*<span class="number">0.2</span>+<span class="number">2</span>)*<span class="number">0.5</span>)/(x+<span class="number">0.7</span>)+random.random()/<span class="number">100</span> <span class="keyword">for</span> x <span class="keyword">in</span> x3]</span><br><span class="line">        x4 = x3</span><br><span class="line">        y4 = [(<span class="number">0.5</span>-y)+((x-<span class="number">2</span>)*(x-<span class="number">2</span>)*<span class="number">0.02</span>) <span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">zip</span>(x4,y3)]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create and configure plottables:</span></span><br><span class="line">        graph1 = QCPGraph(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        graph1.setData(x1, y1)</span><br><span class="line">        graph1.setScatterStyle(QCPScatterStyle(QCPScatterStyle.ssCircle, QPen(Qt.black, <span class="number">1.5</span>), QBrush(Qt.white), <span class="number">9</span>))</span><br><span class="line">        graph1.setPen(QPen(QColor(<span class="number">120</span>, <span class="number">120</span>, <span class="number">120</span>), <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">        graph2 = QCPGraph(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        graph2.setData(x2, y2)</span><br><span class="line">        graph2.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        graph2.setBrush(QColor(<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">20</span>))</span><br><span class="line">        graph2.setChannelFillGraph(graph1)</span><br><span class="line"></span><br><span class="line">        bars1 = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        bars1.setWidth(<span class="number">9</span>/(<span class="number">20</span>-<span class="number">1</span>))</span><br><span class="line">        bars1.setData(x3, y3)</span><br><span class="line">        bars1.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        bars1.setBrush(QColor(<span class="number">10</span>, <span class="number">140</span>, <span class="number">70</span>, <span class="number">160</span>))</span><br><span class="line"></span><br><span class="line">        bars2 = QCPBars(self.customPlot.xAxis, self.customPlot.yAxis)</span><br><span class="line">        bars2.setWidth(<span class="number">9</span>/(<span class="number">20</span>-<span class="number">1</span>))</span><br><span class="line">        bars2.setData(x4, y4)</span><br><span class="line">        bars2.setPen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        bars2.setBrush(QColor(<span class="number">10</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="number">70</span>))</span><br><span class="line">        bars2.moveAbove(bars1)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># move bars above graphs and grid below bars:</span></span><br><span class="line">        self.customPlot.addLayer(<span class="string">&quot;abovemain&quot;</span>, self.customPlot.layer(<span class="string">&quot;main&quot;</span>), QCustomPlot.limAbove)</span><br><span class="line">        self.customPlot.addLayer(<span class="string">&quot;belowmain&quot;</span>, self.customPlot.layer(<span class="string">&quot;main&quot;</span>), QCustomPlot.limBelow)</span><br><span class="line">        graph1.setLayer(<span class="string">&quot;abovemain&quot;</span>)</span><br><span class="line">        self.customPlot.xAxis.grid().setLayer(<span class="string">&quot;belowmain&quot;</span>)</span><br><span class="line">        self.customPlot.yAxis.grid().setLayer(<span class="string">&quot;belowmain&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set some pens, brushes and backgrounds:</span></span><br><span class="line">        self.customPlot.xAxis.setBasePen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.yAxis.setBasePen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.xAxis.setTickPen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.yAxis.setTickPen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.xAxis.setSubTickPen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.yAxis.setSubTickPen(QPen(Qt.white, <span class="number">1</span>))</span><br><span class="line">        self.customPlot.xAxis.setTickLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.yAxis.setTickLabelColor(Qt.white)</span><br><span class="line">        self.customPlot.xAxis.grid().setPen(QPen(QColor(<span class="number">140</span>, <span class="number">140</span>, <span class="number">140</span>), <span class="number">1</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.yAxis.grid().setPen(QPen(QColor(<span class="number">140</span>, <span class="number">140</span>, <span class="number">140</span>), <span class="number">1</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.xAxis.grid().setSubGridPen(QPen(QColor(<span class="number">80</span>, <span class="number">80</span>, <span class="number">80</span>), <span class="number">1</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridPen(QPen(QColor(<span class="number">80</span>, <span class="number">80</span>, <span class="number">80</span>), <span class="number">1</span>, Qt.DotLine))</span><br><span class="line">        self.customPlot.xAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.yAxis.grid().setSubGridVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.xAxis.grid().setZeroLinePen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        self.customPlot.yAxis.grid().setZeroLinePen(QPen(Qt.PenStyle.NoPen))</span><br><span class="line">        self.customPlot.xAxis.setUpperEnding(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line">        self.customPlot.yAxis.setUpperEnding(QCPLineEnding(QCPLineEnding.esSpikeArrow))</span><br><span class="line"></span><br><span class="line">        plotGradient = QLinearGradient()</span><br><span class="line">        plotGradient.setStart(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        plotGradient.setFinalStop(<span class="number">0</span>, <span class="number">350</span>)</span><br><span class="line">        plotGradient.setColorAt(<span class="number">0</span>, QColor(<span class="number">80</span>, <span class="number">80</span>, <span class="number">80</span>))</span><br><span class="line">        plotGradient.setColorAt(<span class="number">1</span>, QColor(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>))</span><br><span class="line">        self.customPlot.setBackground(plotGradient)</span><br><span class="line">        axisRectGradient = QLinearGradient()</span><br><span class="line">        axisRectGradient.setStart(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">        axisRectGradient.setFinalStop(<span class="number">0</span>, <span class="number">350</span>)</span><br><span class="line">        axisRectGradient.setColorAt(<span class="number">0</span>, QColor(<span class="number">80</span>, <span class="number">80</span>, <span class="number">80</span>))</span><br><span class="line">        axisRectGradient.setColorAt(<span class="number">1</span>, QColor(<span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>))</span><br><span class="line">        self.customPlot.axisRect().setBackground(axisRectGradient)</span><br><span class="line">        self.customPlot.rescaleAxes()</span><br><span class="line">        self.customPlot.yAxis.setRange(<span class="number">0</span>, <span class="number">2</span>)</span><br><span class="line">        self.customPlot.legend.setVisible(<span class="literal">True</span>)</span><br><span class="line">        self.customPlot.legend.setFont(QFont(<span class="string">&quot;Helvetica&quot;</span>, <span class="number">9</span>))</span><br><span class="line">        self.customPlot.legend.setRowSpacing(-<span class="number">3</span>)</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    mainForm = MainForm()</span><br><span class="line">    mainForm.show()</span><br><span class="line">    sys.exit(app.<span class="built_in">exec</span>())</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn/img/markdown/20240612/04.png" alt=""></p><h1>结语</h1><p>官网给的示例太多了，一篇塞进太多内容也不好，所以其他的示例放在后面吧，后续有空再更新出来~</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyqt </tag>
            
            <tag> QCustomPlot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S32DS Build Command 技巧</title>
      <link href="/42c8065d1ad6/"/>
      <url>/42c8065d1ad6/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>这一篇与上一篇介绍 Keil MDK IDE 基本一致，所以直接引用上一篇的前言。</p><blockquote><p>Keil MDK 是嵌入式开发中高频使用的 IDE 工具，许多芯片的 SDK 都包含 keil 对应的开发工程。</p><p>最近在使用过程中，同事提出了一个需求，希望将编译的输出文件（如 bin、hex、axf、map）统一输出到整个项目的根目录，便于统一管理，这样就不用每次进入项目里，一层一层的查找输出的文件。这些文件还可能分布在不同的地方，例如 <code>./Listings</code> 目录中存放 <code>.bin</code> 和 <code>.map</code> 文件，而 <code>./Objects</code> 目录中存放 <code>.axf</code> 和 <code>.hex</code> 文件。这对不了解项目结构的工程师非常不友好。</p><p>对于他的考虑，我完全赞同，因为在一个项目中，后续接手的人可能不需要了解代码的具体实现和工程结构，他们只需要找到对应的输出文件，拿来对芯片进行烧录。</p><p>既然需求有了，那么就需要考虑怎样实现了，原先我想的是在根目录里，写一个 python 脚本，直接运行定位到具体文件路径并拷贝出来，但是这样还需要多一个步骤，就是手动运行脚本，所以不是特别的自动化，那么有没有办法直接在运行的过程中，就将文件处理好呢？</p><p>当然是有的，不然就没有这篇文章了，Keil 提供的 <code>Command Items</code>，可以实现上面的需求。</p></blockquote><h1>Build Command</h1><p>S32DS 提供的 Build Command，在 <code>菜单栏 - Project - Properties - C/C++ Build - Settings - Build Steps</code> 里，可以找到以下选项：</p><ul><li>Pre-build steps - 编译前运行</li><li>Post-build steps - 编译后运行</li></ul><p>提供了一条可运行项，用户可以根据自己的需求填入相应的命令，实现所需的功能。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240524/00.png" alt=""></p><p>基于上面提出的需求，需要在编译之后，将输出文件拷贝到指定目录。因此，我们需要利用 <code>Post-build steps</code> 功能，在编译完成后执行相关命令，将输出文件拷贝到目标文件夹中。</p><p>首先，在工程目录中（即 <code>.mex</code> 文件所在的目录），创建一个 <code>.bat</code> 文件。我将其命名为 <code>build_script.bat</code>，文件内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">REM Check if ProjName parameter is provided</span><br><span class="line">if &quot;%1&quot;==&quot;&quot; (</span><br><span class="line">    echo Usage: build_script.bat ProjName</span><br><span class="line">    exit /b 1</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">REM Set ProjName Variable</span><br><span class="line">set ProjName=%1</span><br><span class="line"></span><br><span class="line">REM Set Build Path Variable</span><br><span class="line">set OUTPUT_PATH=&quot;..\build_out&quot;</span><br><span class="line"></span><br><span class="line">REM Create build_out directory if it doesn&#x27;t exist</span><br><span class="line">if not exist %OUTPUT_PATH% mkdir %OUTPUT_PATH%</span><br><span class="line"></span><br><span class="line">REM Execute objcopy commands with ProjName</span><br><span class="line">copy %ProjName%.elf %OUTPUT_PATH% &gt;nul</span><br><span class="line">copy %ProjName%.map %OUTPUT_PATH% &gt;nul</span><br><span class="line">arm-none-eabi-objcopy -O srec %ProjName%.elf %OUTPUT_PATH%\%ProjName%.s19</span><br><span class="line">arm-none-eabi-objcopy -O ihex %ProjName%.elf %OUTPUT_PATH%\%ProjName%.hex</span><br><span class="line">arm-none-eabi-objcopy -O binary %ProjName%.elf %OUTPUT_PATH%\%ProjName%.bin</span><br><span class="line"></span><br><span class="line">echo Compilation completed successfully. Output files copied to build_out folder.</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 S32DS 中，在 <code>菜单栏 - Project - Properties - C/C++ Build - Settings - Build Steps</code> 中的 <code>Post-build steps</code> 中填入以下命令：<code>../build_script.bat $&#123;ProjName&#125;</code>。</p><p>这个 <code>.bat</code> 文件的主要功能如下：</p><ol><li><strong>接收参数</strong>：通过 <code>set ProjName=%1</code> 接收传入的参数，对应 S32DS 工程的名称 <code>$&#123;ProjName&#125;</code>。</li><li><strong>设置输出路径</strong>：使用 <code>set OUTPUT_PATH=&quot;..\build_out&quot;</code> 指定输出文件的路径。</li><li><strong>创建输出目录</strong>：使用 <code>if not exist %OUTPUT_PATH% mkdir %OUTPUT_PATH%</code> 判断输出目录是否存在，如果不存在则创建它。</li><li><strong>复制文件</strong>：使用 <code>copy</code> 命令将生成的 <code>.elf</code> 和 <code>.map</code> 文件复制到输出目录中。</li><li><strong>生成其他格式文件</strong>：使用 <code>arm-none-eabi-objcopy</code> 命令将 <code>.elf</code> 文件转换为 <code>.s19</code>、<code>.hex</code> 和 <code>.bin</code> 格式，并存放在输出目录中。</li><li><strong>完成提示</strong>：脚本执行完成后，打印提示信息 <code>Compilation completed successfully. Output files copied to build_out folder.</code>。</li></ol><p>通过上述步骤，我们可以在编译完成后，自动将所有需要的输出文件统一拷贝到指定的目录中，从而实现统一管理，简化后续操作。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240524/01.png" alt=""></p><p>所以每次编译完，就会运行对应的 .bat 脚本，将输出的内容 copy 到对应的文件，这样，就完成了之前提出的需求了。</p><h1>结语</h1><p>上述就是针对 S32DS 这个 IDE，运用其提供的对应的 Build Command，完成我们需要的一些需求，当然不局限于我上述的，可以根据自己的需求，利用该功能定制化实现。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 软件 </tag>
            
            <tag> S32DS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Keil5 Build Command 技巧</title>
      <link href="/2b6702a14918/"/>
      <url>/2b6702a14918/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>Keil MDK 是嵌入式开发中高频使用的 IDE 工具，许多芯片的 SDK 都包含 keil 对应的开发工程。</p><p>最近在使用过程中，同事提出了一个需求，希望将编译的输出文件（如 bin、hex、axf、map）统一输出到整个项目的根目录，便于统一管理，这样就不用每次进入项目里，一层一层的查找输出的文件。这些文件还可能分布在不同的地方，例如 <code>./Listings</code> 目录中存放 <code>.bin</code> 和 <code>.map</code> 文件，而 <code>./Objects</code> 目录中存放 <code>.axf</code> 和 <code>.hex</code> 文件。这对不了解项目结构的工程师非常不友好。</p><p>对于他的考虑，我完全赞同，因为在一个项目中，后续接手的人可能不需要了解代码的具体实现和工程结构，他们只需要找到对应的输出文件，拿来对芯片进行烧录。</p><p>既然需求有了，那么就需要考虑怎样实现了，原先我想的是在根目录里，写一个 python 脚本，直接运行定位到具体文件路径并拷贝出来，但是这样还需要多一个步骤，就是手动运行脚本，所以不是特别的自动化，那么有没有办法直接在运行的过程中，就将文件处理好呢？</p><p>当然是有的，不然就没有这篇文章了，Keil 提供的 <code>Command Items</code>，可以实现上面的需求。</p><h1>Build Command</h1><p>Keil 提供的 Command Items，在 <code>Keil - 魔术棒 - User</code> 里，分别提供了几个选项：</p><ul><li>Before Compile C/C++ File - 编译 C/C++ 文件之前运行</li><li>Before Build/Rebuild - 编译之前运行</li><li>After Build/Rebuild - 编译之后运行</li></ul><p>每个选项提供了两条可运行的命令，我们需要根据需求在 User Command 中填入相应的命令，以实现所需功能。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240523/00.png" alt=""></p><p>基于我们之前的需求，即在编译之后运行命令将输出文件拷贝到目标目录，我们需要使用 <code>After Build/Rebuild</code> 选项。然而，Keil 只提供了两条可运行的命令，这对于我们的需求显然是不够的。所以我保留了一条用于将 .axf 文件转换为 .bin 的命令，将另一条命令用来实现文件的拷贝操作。</p><p>首先，在工程目录（即 <code>.uvprojx</code> 文件所在目录）创建一个 <code>.bat</code> 文件，我将其命名为 <code>build_script.bat</code>，内容如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">set BUILD_NAME=%1</span><br><span class="line">set OUTPUT_PATH=&quot;..\..\build_out&quot;</span><br><span class="line"></span><br><span class="line">mkdir %OUTPUT_PATH% 2&gt;nul</span><br><span class="line"></span><br><span class="line">copy Listings\%BUILD_NAME%.bin %OUTPUT_PATH% &gt;nul</span><br><span class="line">copy Listings\%BUILD_NAME%.map %OUTPUT_PATH% &gt;nul</span><br><span class="line">copy Objects\%BUILD_NAME%.hex %OUTPUT_PATH% &gt;nul</span><br><span class="line">copy Objects\%BUILD_NAME%.axf %OUTPUT_PATH% &gt;nul</span><br><span class="line"></span><br><span class="line">echo Done</span><br><span class="line"></span><br><span class="line">exit /b 0</span><br></pre></td></tr></table></figure><p>在 Keil 中，填写的命令如下图所示：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240523/01.png" alt=""></p><p>命令为：<code>.\build_script.bat test_project</code></p><p>这个 .bat 文件的主要功能如下：</p><ol><li><strong>设置变量</strong>：通过 set BUILD_NAME=%1 接收传入的参数，对应项目的名称。</li><li><strong>设置输出路径</strong>：使用 set OUTPUT_PATH=“…..\build_out” 指定输出文件的路径。</li><li><strong>创建输出目录</strong>：使用 mkdir %OUTPUT_PATH% 2&gt;nul 判断输出目录是否存在，如果不存在则创建它。</li><li><strong>复制文件</strong>：使用 copy 命令将生成的 .bin、.map、.hex 和 .axf 文件复制到输出目录中。</li><li><strong>完成提示</strong>：脚本执行完成后，打印提示信息 Done 并退出。</li></ol><p>通过上述步骤，我们可以在编译完成后，自动将所有需要的输出文件统一拷贝到指定的目录中，从而实现统一管理，简化后续操作。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240523/02.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240523/03.png" alt=""></p><p>所以每次编译完，就会运行对应的 .bat 脚本，将输出的内容 copy 到对应的文件，这样，就完成了之前提出的需求了。</p><h1>结语</h1><p>所以善用，Keil 的 Build Command，可以实现不同的效果，不需要局限与我上述的需求例子。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> keil </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝牙多点测距小记</title>
      <link href="/91206d67d16b/"/>
      <url>/91206d67d16b/</url>
      
        <content type="html"><![CDATA[<p>最近在学习蓝牙多点测距的内容，故此记录一下。</p><h2 id="基于-RSSI-的距离计算方法">基于 RSSI 的距离计算方法</h2><p>在蓝牙定位技术中，最常用的方法是基于信号强度 RSSI  值，测距方法的本质是通过计算当前环境下信号强度与距离的关系，从信号强度的 RSSI 值计算出两个设备之间的距离。</p><p>首先 RSSI 信号的衰减和距离的对数成正比，在最简单的情况下，RSSI 的计算方式可以表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mi>S</mi><mi>S</mi><mi>I</mi><mo>=</mo><mi>T</mi><mi>x</mi><mi>P</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo>−</mo><mn>10</mn><mo>∗</mo><mi>n</mi><mo>∗</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">RSSI = TxPower - 10 * n * log(d)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">RSS</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">10</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span></span></p><p>转换为距离公式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>d</mi><mo>=</mo><mn>1</mn><msup><mn>0</mn><mrow><mo stretchy="false">(</mo><mfrac><mrow><mi>T</mi><mi>x</mi><mi>P</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mo>−</mo><mi>R</mi><mi>S</mi><mi>S</mi><mi>I</mi></mrow><mrow><mn>10</mn><mo>∗</mo><mi>n</mi></mrow></mfrac><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">d = 10 ^{(\frac{TxPower - RSSI}{10 * n})}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0235em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0235em;"><span style="top:-3.413em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8721em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">10</span><span class="mbin mtight">∗</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mord mathnormal mtight">x</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">er</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">RSS</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中，</p><ul><li><code>TxPower</code> - 发射和接收相隔 1 米时的信号强度</li><li><code>d</code> - 距离</li><li><code>n</code> - 环境衰减因子</li><li><code>RSSI</code> - 接收信号强度</li></ul><p>使用 C 代码实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_LOG_10_VALUE 2.3026</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_TXPOWER_1M 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_DECREASE_FACTOR 2</span></span><br><span class="line"><span class="type">double</span> distance = <span class="built_in">exp</span>((<span class="built_in">abs</span>(rssi) - ALG_TXPOWER_1M) / (ALG_DECREASE_FACTOR * <span class="number">10</span>) * ALG_LOG_10_VALUE);</span><br></pre></td></tr></table></figure><p>Or</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_TXPOWER_1M 50</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALG_DECREASE_FACTOR 2</span></span><br><span class="line"><span class="type">double</span> distance = <span class="built_in">pow</span>(<span class="number">10</span>, (<span class="built_in">abs</span>(RSSI) - ALG_TXPOWER_1M) / (ALG_DECREASE_FACTOR * <span class="number">10</span>));</span><br></pre></td></tr></table></figure><p>其中 <code>ALG_TXPOWER_1M</code> 和 <code>ALG_DECREASE_FACTOR</code> 要根据实际情况，调节对应的宏定义参数。</p><p>环境衰减因子 n 的经典值：</p><table><thead><tr><th>Environment</th><th></th><th>n</th></tr></thead><tbody><tr><td>Outdoor</td><td>Open Space</td><td>2</td></tr><tr><td></td><td>Covered Space</td><td>2.7-5</td></tr><tr><td>Indoor</td><td>Open Space</td><td>1.6-1.8</td></tr><tr><td></td><td>Covered Space</td><td>4-6</td></tr></tbody></table><blockquote><p>数据来自：<a href="https://iopscience.iop.org/article/10.1088/1742-6596/1631/1/012162/pdf">https://iopscience.iop.org/article/10.1088/1742-6596/1631/1/012162/pdf</a></p></blockquote><h2 id="三点定位（三边测量、三角测量）算法">三点定位（三边测量、三角测量）算法</h2><p>三点定位，是通过已知的三个圆的坐标和半径，求得三个圆的交点，从而达到定位的效果。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20240328/00.png" alt=""></p><p>在上图中，每个圆代表手机在基站给定距离（半径）处的所有可能位置。三边测量算法的目的是计算三个圆的交点的 (x, y) 坐标。</p><p>三个圆的方程为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msubsup><mi>r</mi><mn>1</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(x - x_1)^2 + (y - y_1)^2 = r_1^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(x - x_2)^2 + (y - y_2)^2 = r_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mi>y</mi><mn>3</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><msubsup><mi>r</mi><mn>3</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(x - x_3)^2 + (y - y_3)^2 = r_3^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>将三个方程展开：</p><ol><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>x</mi><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>y</mi><msub><mi>y</mi><mn>1</mn></msub><mo>+</mo><msubsup><mi>y</mi><mn>1</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>r</mi><mn>1</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">x^2 - 2xx_1 + x_1^2 + y^2 - 2yy_1 + y_1^2 = r_1^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>x</mi><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>y</mi><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">x^2 - 2xx_2 + x_2^2 + y^2 - 2yy_2 + y_2^2 = r_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p></li><li><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>x</mi><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><msubsup><mi>x</mi><mn>3</mn><mn>2</mn></msubsup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>y</mi><msub><mi>y</mi><mn>3</mn></msub><mo>+</mo><msubsup><mi>y</mi><mn>3</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>r</mi><mn>3</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">x^2 - 2xx_3 + x_3^2 + y^2 - 2yy_3 + y_3^2 = r_3^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9474em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7944em;vertical-align:-0.15em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0585em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p></li></ol><p>方程 1 减去方程 2，方程 2 减去方程 3 后可得：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>y</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mi>y</mi><mo>=</mo><msubsup><mi>r</mi><mn>1</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>y</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(-2x_1 + 2x_2)x+(-2y_1+2y_2)y=r_1^2-r_2^2-x_1^2+x_2^2-y_1^2+y_2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi>x</mi><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>y</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mi>y</mi><mo>=</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>r</mi><mn>3</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>3</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>y</mi><mn>3</mn><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">(-2x_2 + 2x_3)x+(-2y_2+2y_3)y=r_2^2-r_3^2-x_2^2+x_3^2-y_2^2+y_3^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>由于除了 x 和 y，其他的变量都已知，所以可以将方程简化为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>x</mi><mo>+</mo><mi>B</mi><mi>y</mi><mo>=</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">Ax+By=C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>D</mi><mi>x</mi><mo>+</mo><mi>E</mi><mi>y</mi><mo>=</mo><mi>F</mi></mrow><annotation encoding="application/x-tex">Dx+Ey=F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>y</mi><mn>1</mn></msub><mo>+</mo><mn>2</mn><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mo>=</mo><msubsup><mi>r</mi><mn>1</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>y</mi><mn>1</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>D</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>x</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>E</mi><mo>=</mo><mo stretchy="false">(</mo><mo>−</mo><mn>2</mn><msub><mi>y</mi><mn>2</mn></msub><mo>+</mo><mn>2</mn><msub><mi>y</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>F</mi><mo>=</mo><msubsup><mi>r</mi><mn>2</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>r</mi><mn>3</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>x</mi><mn>3</mn><mn>2</mn></msubsup><mo>−</mo><msubsup><mi>y</mi><mn>2</mn><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>y</mi><mn>3</mn><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}   A = (-2x_1 + 2x_2) \\   B = (-2y_1 + 2y_2) \\   C = r_1^2 - r_2^2 - x_1^2 + x_2^2 - y_1^2 + y_2^2 \\   D = (-2x_2 + 2x_3) \\   E = (-2y_2 + 2y_3) \\   F = r_2^2 - r_3^2 - x_2^2 + x_3^2 - y_2^2 + y_3^2 \\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.64em;vertical-align:-4.07em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.45em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewBox="0 0 888.89 2416" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-4.416em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-5.558em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewBox="0 0 888.89 2416" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-7.966em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.57em;"><span style="top:-6.57em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:0.63em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.07em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>最后，由已知的条件可以得出：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>=</mo><mfrac><mrow><mi>C</mi><mi>E</mi><mo>−</mo><mi>F</mi><mi>B</mi></mrow><mrow><mi>E</mi><mi>A</mi><mo>−</mo><mi>B</mi><mi>D</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">x = \frac{CE-FB}{EA-BD}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">CE</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">FB</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mfrac><mrow><mi>C</mi><mi>D</mi><mo>−</mo><mi>A</mi><mi>F</mi></mrow><mrow><mi>B</mi><mi>D</mi><mo>−</mo><mi>A</mi><mi>E</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">y = \frac{CD-AF}{BD-AE  }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.1297em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>由上面的方程总结完可以得到对应的计算接口：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">&#125; POINT_T;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    POINT_T center;</span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">&#125; CIRCLE_T;</span><br><span class="line"></span><br><span class="line">POINT_T <span class="title function_">calculate_circle_intersection</span><span class="params">(CIRCLE_T c1, CIRCLE_T c2, CIRCLE_T c3)</span></span><br><span class="line">&#123;</span><br><span class="line">    POINT_T point;</span><br><span class="line">    <span class="type">int</span> A, B, C, D, E, F;</span><br><span class="line">    A = <span class="number">2</span> * c2.center.x - <span class="number">2</span> * c1.center.x;</span><br><span class="line">    B = <span class="number">2</span> * c2.center.y - <span class="number">2</span> * c1.center.y;</span><br><span class="line">    C = c1.r * c1.r - c2.r * c2.r - c1.center.x * c1.center.x + c2.center.x * c2.center.x - c1.center.y * c1.center.y + c2.center.y * c2.center.y;</span><br><span class="line">    D = <span class="number">2</span> * c3.center.x - <span class="number">2</span> * c2.center.x;</span><br><span class="line">    E = <span class="number">2</span> * c3.center.y - <span class="number">2</span> * c2.center.y;</span><br><span class="line">    F = c2.r * c2.r - c3.r * c3.r - c2.center.x * c2.center.x + c3.center.x * c3.center.x - c2.center.y * c2.center.y + c3.center.y * c3.center.y;</span><br><span class="line"></span><br><span class="line">    point.x = (C * E - F * B) / (E * A - B * D);</span><br><span class="line">    point.y = (C * D - A * F) / (B * D - A * E);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> point;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝牙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> BLE </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>imx6ull logo 更改</title>
      <link href="/732fd0ca5c67/"/>
      <url>/732fd0ca5c67/</url>
      
        <content type="html"><![CDATA[<h1>1 前期准备</h1><p>安装依赖工具，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; sudo pacman -S netbpm</span><br></pre></td></tr></table></figure><p>将要显示的 logo 图片准备好，logo 格式可以是 png，bmp 或 jpge。</p><p>我用的是 png 格式的 logo，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/00.png" alt=""></p><p>uboot 的 logo 是 bmp 格式的，那么需要先转化为 bmp 格式，这里不能直接用 windows 的画图软件直接转化，直接转化后烧录 logo 会不显示，使用下述命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngtopnm ./mylogo.png | ppmquant 31 | ppmtobmp -bpp 8 &gt; ./mylogo.bmp</span><br></pre></td></tr></table></figure><p>命令及输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; pngtopnm ./mylogo.png | ppmquant 31 | ppmtobmp -bpp 8 &gt; ./mylogo.bmp</span><br><span class="line">pnmcolormap: making histogram...  </span><br><span class="line">pnmcolormap: Scanning image 0  </span><br><span class="line">pnmcolormap: 8753 colors so far  </span><br><span class="line">pnmcolormap: 8753 colors found  </span><br><span class="line">pnmcolormap: choosing 31 colors...  </span><br><span class="line">pnmremap: 31 colors found <span class="keyword">in</span> colormap  </span><br><span class="line">ppmtobmp: analyzing colors...  </span><br><span class="line">ppmtobmp: 31 colors found  </span><br><span class="line">ppmtobmp: Writing 8 bits per pixel with a color palette</span><br></pre></td></tr></table></figure><p>kernel 的 logo 需要转化为 224 色的 ppm 文件，所以同样的，输入下述命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pngtopnm logo.png | ppmquant -fs 224 | pnmtoplainpnm &gt; logo_linux_clut224.ppm</span><br></pre></td></tr></table></figure><p>命令和输出如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/02.png" alt=""></p><p>如果使用的不是 png，将 <code>pngtopnm</code> 更改为 <code>bmptopnm</code> 或 <code>jpegtopnm</code> 即可。</p><p>上述生产了 uboot 需要的 <code>mylogo.bmp</code> 和 kernel 需要的 <code>logo_linux_clut224.ppm</code>。</p><h1>2 uboot</h1><p>将生成的 <code>mylogo.bmp</code>  copy 到 uboot 源码的 <code>./tools/logos/</code> 中，然后修改 <code>./tools/Makefile</code> 文件，添加下述代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LOGO_BMP= $(srctree)/$(src)/logos/mylogo.bmp</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/03.png" alt=""></p><p>添加完成后，重新编译并烧录即可。</p><h1>3 kernel</h1><p>将生成的 <code>logo_linux_clut224.ppm</code>  文件 copy 到 kernel 源码的 <code>./drivers/video/logo/</code> 中，并直接覆盖原始的 logo ppm 文件，</p><p>由于我生成的是和我屏幕同样大小的图片，也就是 800x480 的图片，所以需要更改 logo 显示的坐标，</p><p>定位到 <code>fb_show_logo_line</code> 函数，将 image.dx 和 image.dy 设置为 0，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/04.png" alt=""></p><p>完成后重新编译内核并烧录运行。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/01.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231220/05.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SPI、DSPI、QSPI 笔记</title>
      <link href="/93cfe9c2432d/"/>
      <url>/93cfe9c2432d/</url>
      
        <content type="html"><![CDATA[<h1>1 前言</h1><p>复习下，SPI、DSPI、QSPI 对应的接口时序，并作笔记。</p><h1>2 SPI</h1><h2 id="2-1-简介">2.1 简介</h2><p><strong>SPI（Serial Peripheral Interface）</strong>，是一种同步串行通信协议，用于在微控制器与各种外围设备进行<strong>全双工</strong>通信，它是一种<strong>全双工通讯协议</strong>，意味着数据可以同时在两个方向上传输。它是由摩托摩拉公司设计。</p><p>SPI 协议通常由一个主设备（主机）和一个或多个从设备（从机）组成。主设备负责发起通信并控制数据传输的时序，而从设备则被动地响应主设备的指令并提供数据。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/00.png" alt=""></p><h2 id="2-2-接口">2.2 接口</h2><p>SPI 通信涉及四条线：</p><ol><li><strong>SCLK</strong>：串行时钟（Serial Clock），由主设备产生，用于同步数据传输。</li><li><strong>MOSI</strong>：主出从入（Master Out Slave In），用于从主设备向从设备传输数据。</li><li><strong>MISO</strong>：主入从出（Master In Slave Out），用于从从设备向主设备传输数据。</li><li><strong>SS</strong>（或CS）：片选（Slave Select），主设备用来选中特定的从设备进行通信。</li></ol><p>SPI 协议的<strong>工作方式</strong>是通过主设备产生时钟信号来同步数据传输。主设备通过 SCLK 线产生时钟脉冲，每个时钟脉冲对应一个数据位的传输。在每个时钟脉冲期间，主设备将一个数据位发送到 MOSI 线上，同时从设备将一个数据位发送到 MISO 线上。通过这种方式，主设备和从设备可以同时传输数据。</p><h2 id="2-3-时序">2.3 时序</h2><h3 id="2-3-1-读时序">2.3.1 读时序</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/01.png" alt=""></p><h3 id="2-3-2-写时序">2.3.2 写时序</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/02.png" alt=""></p><h2 id="2-4-模式">2.4 模式</h2><p>认识四种模式前，需要先了解两个概念：</p><ul><li><strong>Clock Polarity</strong> - 时钟极性，用来描述 SCLK 时钟信号空闲状态的电平，0：低电平 1：高电平。</li><li><strong>Clock Phase</strong> - 时钟相位，一个时钟周期会有 2 个跳变沿，相位用来规定 SCLK 时钟信号是第一个跳变沿有效还是第二个跳变沿有效，0：第一个跳变沿 1：第二个跳变沿。</li></ul><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/03.png" alt=""></p><table><thead><tr><th>MODE</th><th>CPOL(Clock Polarity)</th><th>CPHA(Clock Phase)</th><th>NOTE</th></tr></thead><tbody><tr><td>mode 0</td><td>0</td><td>0</td><td>SCLK 空闲电平为低并且相位是一个跳变沿有效，那么说明是上升沿有效</td></tr><tr><td>mode 1</td><td>0</td><td>1</td><td>SCLK 空闲电平为低并且相位是二个跳变沿有效，那么说明是下降沿有效</td></tr><tr><td>mode 2</td><td>1</td><td>0</td><td>SCLK 空闲电平为高并且相位是一个跳变沿有效，那么说明是下降沿有效</td></tr><tr><td>mode 3</td><td>1</td><td>1</td><td>SCLK 空闲电平为高并且相位是二个跳变沿有效，那么说明是上升沿有效</td></tr></tbody></table><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/04.png" alt=""></p><h1>3 DSPI</h1><h2 id="3-1-简介">3.1 简介</h2><p><strong>DSPI（Dual Serial Peripheral Interface）</strong>，是 SPI 的一种扩展，在不使用 SPI 全双工性质的情况下，扩展使用<strong>半双工配置</strong>的两个数据引脚，在每个时钟周期发送两位。</p><p>它将 MOSI 线变成 SIO0、MISO 变为 SIO1，分别携带偶数位和奇数位，例如 SIO0 携带每个字节的位 6、4、2 和 0，SIO1 携带字节的位 7、5、3 和 1。</p><h2 id="3-2-接口">3.2 接口</h2><p>DSPI 通信涉及四条线：</p><ol><li><strong>SCLK</strong>：串行时钟（Serial Clock），由主设备产生，用于同步数据传输。</li><li><strong>SIO0</strong>(MOSI)：Data Input Output 1。</li><li><strong>SIO1</strong>(MISO)：Data Input Output 2。</li><li><strong>SS</strong>（或 CS）：片选（Slave Select），主设备用来选中特定的从设备进行通信。</li></ol><h2 id="3-3-时序">3.3 时序</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/05.png" alt=""></p><p>上述流程为：</p><p>CS 拉低 -&gt; 发送指令(3B) -&gt; 发送地址(A0-A23，24 位地址) -&gt; 等待 8 个空指令周期 -&gt; 数据阶段，开始双线发送任意数量字节</p><h1>4 QSPI</h1><h2 id="4-1-简介">4.1 简介</h2><p><strong>QSPI（Quad Serial Peripheral Interface）</strong>，同样是 SPI 的扩展，进一步的提高了传输速度，数据可以通过四条数据线同时传输，因此，在每个时间周期可以传输四个数据位。</p><h2 id="4-2-接口">4.2 接口</h2><p>QSPI 通信涉及六条线：</p><ol><li><strong>SCLK</strong>：串行时钟（Serial Clock），由主设备产生，用于同步数据传输。</li><li><strong>IO0，IO1，IO2，IO3</strong>：四条 Input Output Data 线。</li><li><strong>SS</strong>（或 CS）：片选（Slave Select），主设备用来选中特定的从设备进行通信。</li></ol><h2 id="4-3-时序">4.3 时序</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/06.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231201/07.png" alt=""></p><p>上述是一个典型的 QSPI 时序，工作模式切换到 QSPI 四线模式后，大致流程如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">指令(Instruction) + 地址(Address) + 扩展信息(Alt) + Dummy Clock(空闲周期) + 数据(Data) 。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP32-C3-LCDkit GPIO 学习</title>
      <link href="/c476b577ab06/"/>
      <url>/c476b577ab06/</url>
      
        <content type="html"><![CDATA[<h1>1 前言</h1><p>学习并记录下 <code>ESP32-C3-LCDkit</code> 开发板的 GPIO 的使用。</p><h1>2 Get-Started</h1><p><code>.\esp-idf\examples\peripherals\gpio</code> 目录下有二个例程，分别是 <strong>generic_gpio</strong> 和 <strong>matrix_keyboard</strong>，<strong>matrix_keyboard</strong> 是矩阵键盘的例程，手头上没有，干脆就不试了，简单看看 <strong>generic_gpio</strong> 这个例程。</p><p>copy esp-idf 的 generic_gpio 文件夹到自己的开发目录，这里我创建了个 esp_study 目录来存放，用于学习对应的 esp 例程。</p><h2 id="2-1-generic-gpio-配置和实现">2.1 generic_gpio 配置和实现</h2><p>使用 vscode 打开 generic_gpio 工程，并且在 generic_gpio 根目录下保存工作区，并新建一个 <code>.vscode</code>，存放该工作区项目配置和工具相关文件，这个在前一篇基础入门的时候说过，就不多赘述了。</p><p>我们先配置一下工程，并让工程跑起来，同样的设置串口和使用的芯片，这里我选择 <code>COM16</code> 和 <code>esp32c3</code>，看 demo 的 <a href="http://README.md">README.md</a>，可以知道，这个例程实现了两个 IO 作为输出、两个 IO 作为输入并配置中断，输出和输入 IO 为相连时，没有触发中断，则只会输出 cnt 计数，输出和输入相接时，会产生中断，并输出中断产生的 IO 和值。所以我需要先选四个 IO 出来，为了接线方便，我选了 LCD 接口相邻的四个 IO，分别是 GPIO0、1、7、2，并配置输出为 0 和 7，输入为 1 和 2，这样接线用杜邦线好接一些。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/00.png" alt=""></p><p>上述配置完成后，编译并进行烧录，我们看下效果：</p><p>GIF太大了，放到第三方图床了，<a href="https://www.z4a.net/image/VqkwGv">https://www.z4a.net/image/VqkwGv</a></p><h2 id="2-2-generic-gpio-代码">2.2 generic_gpio 代码</h2><p>从 app_main 入口开始，可以看到对应 gpio config 的结构体声明，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/01.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/02.png" alt=""></p><p>通过上面，我们可以得到，<br>作为输出的 0 和 7 被配置为不开启中断、模式为输出、上拉和下拉关闭。<br>作为输入的 1 和 2 被配置为了上升沿中断触发、模式为输入、开启上拉。</p><p>继续往下看，创建了队列和一个任务，用于产生中断时打印触发中断 IO 当前的电平状态，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/03.png" alt=""></p><p>最后 while 循环，延时 1S 打印计数值和翻转对应的 IO，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231103/04.png" alt=""></p><h1>3 总结</h1><p>这个例程主要实现了对 IO 初始化、中断的配置，</p><p>对于 IO 初始化，调用的 <code>gpio_config</code>，配置好传参，也就是 gpio_config_t，配置对应的 IO 功能，并传入到接口 <code>gpio_config</code>，</p><p>对于中断，调用 <code>gpio_install_isr_service</code>，开启对 GPIO 的中断，并调用 <code>gpio_isr_handler_add()</code> 函数注册各个管教的中断处理程序，也可以调用 <code>gpio_isr_handler_remove()</code> 去除对应 IO 的中断。</p><h1>4 结语</h1><p>到这里，基本都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p>]]></content>
      
      
      <categories>
          
          <category> ESP32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP32-C3-LCDkit 基础入门</title>
      <link href="/272c4a3365cb/"/>
      <url>/272c4a3365cb/</url>
      
        <content type="html"><![CDATA[<h1>1 前言</h1><p>上篇 <a href="https://www.nixgnauhcuy.cn/fab2071f499b/">ESP32-C3 开发环境搭建</a> 提到了，我买了块乐鑫的 <strong>ESP32-C3-LCDkit</strong> 开发板，并且搭建好了环境，所以准备跑下 <code>.\esp-idf\examples\get-started</code> 的例程，试试基础的功能。</p><h1>2 Get-Started</h1><p><code>.\esp-idf\examples\get-started</code> 目录下有三个例程，分别是 <strong>hello_world</strong>、<strong>sample_project</strong>、<strong>blink</strong>，所以我们简单分析并运行下这三个例程。</p><p>copy esp-idf 的 get-started 文件夹到自己的开发目录，这里我创建了个 esp_study 目录来存放，用于学习对应的 esp 例程。</p><h2 id="2-1-hello-world">2.1 hello_world</h2><p>使用 vscode 打开 hello_world 工程，并且在 hello_world 根目录下保存工作区，并新建一个 <code>.vscode</code>，存放该工作区项目配置和工具相关文件。</p><p>完成后，在 <code>.vscode</code> 创建 <code>c_cpp_properties.json</code>，并填入下述内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/**&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compileCommands&quot;</span><span class="punctuation">:</span> <span class="string">&quot;.\\build\\compile_commands.json&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>这个目的主要是为该工程导入 esp-idf 的文件，防止看代码的时候没办法跳转，不知道函数具体实现。</p><p>上述内容填充完毕后，后续的两个工程都可以同样用该方式实现，后面就不赘述了，接下来看代码前，我们先配置一下工程，并让工程跑起来。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/00.png" alt=""></p><ol><li>填充 <code>c_cpp_properties.json</code> 内容</li><li>连接设备，并设置 COM 端口</li><li>选择对应的芯片</li><li>点击火焰图标，该按钮会进行编译、烧录并且打开日志监控</li><li>查看输出内容</li></ol><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/01.png" alt=""></p><p>上述图片可以看出，实现的功能具体是打印了 <code>Hello World!</code>、芯片型号及芯片的资源，随后延时计数 10S 最终调用软件复位接口，复位软件。</p><p>我们简单看下代码，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/02.png" alt=""></p><ol><li>输出 <code>Hello world!</code></li><li>调用 <code>esp_chip_info</code> 接口，获取芯片信息，先确定它获取了什么信息，定位到 <code>esp_chip_info_t chip_info</code> 的结构体，它作为变量传入接口，<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/03.png" alt=""></li></ol><p>可以看出该结构体，定义了芯片型号、功能、版本、核心数，那么 <code>esp_chip_info</code> 这个接口，就是为了获取这些内容，我们跳转进去看看，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/04.png" alt=""></p><p>上面图片可以看到最终为传参填充的数据，不过版本号的获取，还调用了一个函数 <code>efuse_hal_chip_revision</code>，同样的，跳转进去看看，函数最终返回了 <code>efuse_hal_get_major_chip_version() * 100 + efuse_hal_get_minor_chip_version();</code>，为了减少大量图片的引用，所以我直接跳过到最后，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/05.png" alt=""></p><p>这里能看出，主要版本号和次要版本号都是从 <code>EFUSE - rd_mac_spi_sys_5</code> 寄存器中获取，关于乐鑫这款芯片的可以访问 <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32c3/api-reference/system/efuse.html">EFUSE</a>，里面有对应的 eFuse 管理器说明，我们只需要知道它是在 EFUSE BLOCK 寄存器中获取的就可以了。</p><blockquote><p>在路径 <code>.\esp-idf\components\efuse\esp32c3\</code> 可以看到 <code>esp_efuse_table.csv</code>，它描述了 Efuse 的字段。</p></blockquote><p>确定了芯片信息获取接口执行的内容后，这些打印的信息就简单多了。</p><ol><li>调用 <code>esp_flash_get_size</code> 接口，这个很好理解，读取对应的 flash 大小，工程默认配置是 2M flash，所以输出的时候是不对的，需要去 <code>menuconfig</code> 修改工程配置 <code>Serial flasher config</code> -&gt; <code>Flash size</code> -&gt; <code>4MB</code>。不过 esp32-c3-lcdkit 标注的是内部 4MBFlash，但其是相对于 <code>ESP32-C3-MINI-1 这个模组</code>，对于 <code>ESP32-C3</code> 芯片来说，其实是外部的 Flash，所以输出的日志可以看到是外部 2Mb flash，这点一开始我存在疑惑，<strong>我也提交了对应的 <a href="https://github.com/espressif/esp-idf/issues/12495">PR</a>，感谢乐鑫开发者的不吝指教</strong>。</li><li>调用 <code>esp_get_minimum_free_heap_size</code> 获取了剩余的堆的大小，这个暂时不深究，了解其作用就可以了。</li><li>for 循环 10 次，每次延时 1S 并输出 log，最后调用 <code>esp_restart</code>，进行复位。</li></ol><h2 id="2-2-sample-project">2.2 sample_project</h2><p>对于 <code>sample_project</code> 这个例程，可以跳过，不过官方推荐用该例程作为新项目的模板，并且这个例程的 <code>main.c</code> 的 <code>app_main</code> 没有任何操作。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/06.png" alt=""></p><h2 id="2-3-blink">2.3 blink</h2><p>同 <code>hello_world</code> 一样，创建工作区、创建 <code>c_cpp_properties.json</code> 文件，完成后配置工程，让其跑起来先，</p><p>开发板上只有一个 <code>RGB LED</code>，并没有普通的 LED 可以驱动，而且接到了芯片的 IO8 脚位，所以配置工程时，需要确定我们的 IO 口和对应 LED 类型是否正确，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/07.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/08.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/09.png" alt=""></p><ul><li>Blink LED type 需要勾选 <code>RMT - Addressable LED</code></li><li>Blink GPIO number 需要设置为 <code>8</code></li><li>Blink period in ms 默认即可。</li></ul><p>确认无误后，点击右上方的保存，点击编译烧录并监控日志，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/10.png" alt=""></p><p>简单看下代码，</p><ol><li>执行 <code>configure_led</code> 配置 LED 管脚</li><li>输出 <code>Example configured to blink addressable LED!</code>，并且设置 <code>led_strip_config_t</code> 结构体，填充当前使用的 IO 和最大的 LED 数，开发板上只有一颗，所以默认填充 1，配置 rmt 频率为 10MHz，<strong>RMT(Remote Control)，本质是用于红外发送/接收红外遥控信号的，由于 RMT 模块的灵活性，还可以用来生成和接收许多相似类型的信号</strong>，这里不做深究，调用 <code>led_strip_new_rmt_device</code> 接口，基于 RMT TX 通道来设置 led strip，</li><li>配置完成后，while 循环中会定时翻转 LED，并输出 <code>Turning the LED ON/OFF</code>，根据 Blink period 来延时翻转，翻转调用的 <code>blink_led</code>，<code>ON</code> 调用了 <code>led_strip_set_pixel(led_strip, 0, 16, 16, 16)</code>，设置对应的 RGB，并刷新显示，<code>OFF</code> 则调用 <code>led_strip_clear</code> 清除，从而达到闪烁的效果。</li></ol><p>最终效果如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231102/11.gif" alt=""></p><h1>3 结语</h1><p>到这里，基本都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p>]]></content>
      
      
      <categories>
          
          <category> ESP32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP32-C3 开发环境搭建</title>
      <link href="/fab2071f499b/"/>
      <url>/fab2071f499b/</url>
      
        <content type="html"><![CDATA[<h1>1 前言</h1><p>最近购入了一块 <strong>ESP32-C3-LCDkit</strong> 开发板，准备拿来学习下，自从毕业后就基本没用过 espressif 的芯片了，记忆还停留在使用 ESP8266，所以重新学习下，并且做一些记录~</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/00.jpg" alt="00.jpg"></p><h1>2 搭建 Win 开发环境</h1><p>首先，进入对应的开发板的文档 <a href="https://docs.espressif.com/projects/espressif-esp-dev-kits/zh_CN/latest/esp32c3/esp32-c3-lcdkit/index.html">ESP32-C3-LCDkit</a>，这里面包括了开发板的对应资源描述、硬件说明、以及一些使用上的说明等。</p><p>我们主要是要搭建开发环境，所以进入<strong>应用程序开发 - 软件设置 - 快速入门</strong>。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/01.png" alt="01.png"></p><p>我们需要安装 ESP-IDF(Espressif IoT Development Framework)，在下方找到<strong>手动安装</strong> - <a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/esp32c3/get-started/windows-setup.html">Windows Installer</a>，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/02.png" alt="02.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/03.png" alt="03.png"></p><p>进入后，向下找到 <a href="https://dl.espressif.cn/dl/esp-idf/?idf=4.4">ESP-IDF 工具安装器</a>并进入该路径，可以看到有在线和离线的安装方式，推荐直接用离线的方式，在线安装可能需要代理。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/04.png" alt="04.png"></p><p>下载完离线包后双击运行，选择<code>简体中文 - 我同意此协议</code>，随后进入安装前系统检测，等待检测完毕并进入下一步，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/05.png" alt="05.png"></p><p>填写安装路径，默认是 <code>C:\Espressif</code>，我将安装路径填写到 <code>C:\my\Espressif</code>，因为本身我没有对磁盘进行分区，只有一个 C 盘，并且 <code>my</code> 文件夹存放一些我自己的东西。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/06.png" alt="06.png"></p><p>确认安装路径后，进入选择安装组件，根据自己的需求，选择要安装的组件，由于我没有其他的 ESP32 板，所以 <code>chip targets</code> 只选择了 <code>ESP32-C3</code>，需要在终端编译的，可以将开发集成的 PowerShell 和命令提示符勾上，我是在 vscode 上开发，所以这里我没有勾选上。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/07.png" alt="07.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/08.png" alt="08.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/09.png" alt="09.png"></p><p>确认无误后，下一步，并等待安装完成。</p><p>安装完成后，我们打开 vscode，并进入扩展安装，安装 <code>Espressif IDF</code>，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/10.png" alt="10.png"></p><p>完成后，点击左边对应的扩展，进入该插件，并等待它搜寻上面我们安装的环境，等待它加载完即可。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/11.png" alt="11.png"></p><p>加载完成后，我们测下环境搭建是否成功，找到安装路径下 <code>get-started - hello_world</code>， 我的路径是 <code>C:\my\Espressif\frameworks\esp-idf-v5.1.1\examples\get-started\hello_world</code>，为了避免我们的修改导致 SDK 文件变动，我们将 <code>hello_world</code> 文件夹拷贝到自己需要编译的工程路径，这里我直接拷贝到 <code>C:\my\</code>，然后用 vscode 打开该工程，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/12.png" alt="12.png"></p><p>对应的功能如下图，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/13.png" alt="13.png"></p><p>我们先进行第一步，给开发板上电，选择对应的端口号和设备型号，我这里的端口是 COM12，设备是 esp32c3，并且是通过 usb 转串口进行的烧录，完成后，开始编译工程，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/14.png" alt="14.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/15.png" alt="15.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/16.png" alt="16.png"></p><p>编译完成后，点击烧录，并选择方式为串口，完成后会打印 Flash Done，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/17.png" alt="17.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/18.png" alt="18.png"></p><p>我们打开监听，查看输出日志是否正确，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231027/19.png" alt="19.png"></p><p>该例程会输出 <code>Hello world!</code>，并每 10S 执行一次复位。</p><p>至此，Windows 开发环境搭建完成。</p><h1>3 结语</h1><p>到这里，基本都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p>]]></content>
      
      
      <categories>
          
          <category> ESP32 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ESP32 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>imx6ull lvgl 移植</title>
      <link href="/031a4fb624db/"/>
      <url>/031a4fb624db/</url>
      
        <content type="html"><![CDATA[<h1>1 前言</h1><p>学习基于 I.MX6ULL 平台的 LVGL GUI 移植。</p><h1>2 开发环境</h1><ul><li>系统： arch linux</li><li>工具： <a href="https://github.com/nixgnauhcuy/nxp-uuu-qt-tool">nxp-uuu-qt-tool</a></li><li>硬件： 正点原子 I.MX6ULL 开发板、LCD 800*480</li><li>软件： linux 内核 <a href="https://github.com/nixgnauhcuy/linux-imx">5.4.21</a>、lvgl 和 lvgl drivers release/v8.3 以及 LVGL for frame buffer device</li><li>JFlash</li></ul><h1>3 准备</h1><blockquote><p>下述演示都是基于 <code>win11 wsl2 debian</code> 系统</p></blockquote><p>首先，克隆 <code>lv_port_linux_frame_buffer</code> 仓库，命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/lvgl/lv_port_linux_frame_buffer.git</span><br><span class="line">cd lv_port_linux_frame_buffer/</span><br><span class="line">git submodule update --init --recursive</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/00.png" alt="00.png"></p><p>上述命令，克隆了 lvgl 的 <code>lv_port_linux_frame_buffer</code> 仓库，完成后进入该文件夹，<code>git clone</code> 并没有将子模块 <code>lvgl</code> 和 <code>lv_drivers</code> 一起克隆，所以我们使用 <code>git submodule update</code> 将子模块一起拉取下来。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/01.png" alt="01.png"></p><p>然后输入下述命令，先编译一下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure><p>编译完成后，会在当前路径下，生成 build 文件夹，里面分别有 bin 和 obj 文件夹，用于存放输出的 bin 文件，和 obj 编译文件。</p><blockquote><p>原先编译是没有对编译文件和输出文件做整理，后面我给该仓库提交了 PR 请求，没想到很快就被合并了，好评拉满。</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/02.png" alt="02.png"></p><p>到这一步，编译没问题后，基本准备工作就完成了，接下来开始移植。</p><h1>4 移植</h1><h2 id="4-1-Makefile-修改">4.1 Makefile 修改</h2><p>首先，更改我们的编译工具，因为 I.MX6ULL 是 arm 架构的，所以我们要更改使用的工具链。</p><p>打开 <code>Makefile</code> 修改两个点，</p><ul><li>将 <strong>cc</strong> 的值由 <code>?= gcc</code> 更改为 <code>= arm-linux-gnueabihf-gcc</code></li><li>注释掉 <code>CSRCS +=$(LVGL_DIR)/mouse_cursor_icon.c</code>，这里没有用到鼠标，所以我注释掉了</li></ul><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/03.png" alt="03.png"></p><p>更改完，还不需要 <code>make</code> 重编译，因为还没修改完，这个时候编译会报错。</p><h2 id="4-2-main-c-修改">4.2 main.c 修改</h2><p>接下来更改 main.c，注释掉鼠标相关代码，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/04.png" alt="04.png"></p><p>修改完成后，我们就可以重新输入 <code>make clean</code> 和 <code>make</code> 指令重新编译下，附上修改编译链的对比图：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/05.png" alt="05.png"></p><p>使用 `file`` 确定文件类型是否是 32 位 arm 的可执行文件，这才是我们最终要执行的文件。</p><p>别着急，还没修改完，接下来我们修改对应的配置文件。</p><h2 id="4-3-lv-conf-h-和-lv-drv-conf-h-修改">4.3 lv_conf.h 和 lv_drv_conf.h 修改</h2><p><code>lv_conf.h</code> 该文件无需修改，如果有需要定制修改的，可以对照注释修改。</p><p><code>lv_drv_conf.h</code> 这个需要修改，这里的变动会直接影响到显示和触摸，</p><ul><li>定位到 <code>USE_EVDEV</code> 中，修改为当前 linux 设备对应的触摸驱动，这里我是 <code>/dev/input/event1</code>，这里默认用的 <code>event10</code>，要结合自己的设备修改。</li><li>定位到 <code>USE_FBDEV</code> 中，修改为当前 linux 设备对应的显示驱动，这里我是 <code>/dev/fb0</code>，这里默认用的 <code>fb0</code>，要结合自己的设备进行修改，这里我默认即刻。</li></ul><p>修改完成后，重新编译一下工程。</p><p>到这里基本就完成了，整个过程基本没有什么难点。</p><h2 id="4-4-烧录">4.4 烧录</h2><p>将重新编译完的可执行文件，路径是 <code>./build/bin/demo</code>，拷贝到 imx6ull 中执行，这里我用自己的做的工具，由于这里我没用我的主力设备 archlinux，用的 wsl2 debian，所以我先复制到 win11，再通过工具烧录到设备中，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/06.png" alt="06.png"></p><h2 id="4-5-效果">4.5 效果</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231025/07.gif" alt="07.gif"></p><h1>5 结</h1><p>简单记录下 imx6ull 对 lvgl 的移植，过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CC2640 OAD 生产烧录单文件实现</title>
      <link href="/8159bca7abcd/"/>
      <url>/8159bca7abcd/</url>
      
        <content type="html"><![CDATA[<h1>1 前言</h1><p>在使用 CC2640 OAD功能时，每次烧录都要烧录四个文件，而且四个工程四个输出文件都在不同的文件夹，操作起来复杂的很，所以折腾了一下，将四个烧录件合并为单个 <code>.bin</code> 文件，直接烧录一个即可。</p><h1>2 开发环境</h1><ul><li>系统： win11</li><li>IAR Embedded Workbench IDE - Arm 8.32.1</li><li>SDK版本： simplelink_cc2640r2_sdk_5_30_00_03</li><li>例程： blestack\simple_peripheral_oad_onchip</li><li>JFlash</li></ul><h1>3 实现</h1><p><code>oad_onchip</code> 项目中，有四个工程，分别是 <code>bim_onchip</code>、<code>app</code>、<code>persistent_app</code> 和 <code>stack</code>，这些工程代表的意义这里就不赘述了，对这篇文章感兴趣的，相信应该对这些已经有一定的了解。</p><p>这四个工程对应的文件夹如图所示，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/00.png" alt="00.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/01.png" alt="01.png"></p><p>对整个项目进行编译后，会依次在下述几个路径生成对应的编译文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.\simple_peripheral_oad_onchip\tirtos\iar\app\FlashROM\Exe</span><br><span class="line">.\simple_peripheral_oad_onchip\tirtos\iar\bim_onchip\FlashOnly\Exe</span><br><span class="line">.\simple_peripheral_oad_onchip\tirtos\iar\persistent_app\FlashOnly\Exe</span><br><span class="line">.\simple_peripheral_oad_onchip\tirtos\iar\stack\FlashROM\Exe</span><br></pre></td></tr></table></figure><p>生成的编译文件包括了 <code>.out</code>、<code>.hex</code>、<code>.bin</code> 等，因为是烧录文件，并不需要附带调试信息和地址信息，那么 <code>.bin</code> 文件就是我们需要的目标，那么每次烧录四个 <code>.bin</code> 文件，就需要到这四个路径下找到该文件，属实有点繁琐，那么第一步，我们就先把需要的文件归并到一个目录去。</p><h2 id="3-1-bim-onchip">3.1 bim_onchip</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/02.png" alt="02.png"></p><p>进入 IAR，因为这边我是用的 IAR 编译的，右键 <code>cc2640r2lp_bim_onchip</code> 工程，选择 <code>options..</code> 进入选项中，找到 <code>Build Actions</code>，我们需要修改其中的 <code>Post-build command line:</code>，这个是相当于编译完后要执行的命令，<code>cc2640r2lp_bim_onchip</code> 默认应该是空的，也就是没有我框起来的内容，那么我们给它添加一组命令，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$EXAMPLE_BLE_ROOT$\tools\hex2bin.exe $EXE_DIR$\$TARGET_BNAME$.hex $PROJ_DIR$\..\output\$TARGET_BNAME$.bin</span><br></pre></td></tr></table></figure><p>上述命令的内容，我简单描述下，</p><p><code>$EXAMPLE_BLE_ROOT$</code>，这个代表的是 example 工程的路径，也就是我们当前选择的例程的路径 <code>.\simple_peripheral_oad_onchip\</code>，所以就是说使用例程路径下的 tools 文件夹的 hex2bin.exe 将编译生成的 <code>sp_oad_onchip_cc2640r2lp_bim_onchip_FlashOnly.hex</code> 转换为 <code>sp_oad_onchip_cc2640r2lp_bim_onchip_FlashOnly.bin</code> 并放在 <code>$PROJ_DIR$\..\output</code> 文件夹中，<code>$PROJ_DIR$</code> 代表的是工程的路径，也就是 <code>.\simple_peripheral_oad_onchip\tirtos\iar\bim_onchip</code>。而 <code>\..\</code> 代表上一级目录，所以就是将要输出的 bin 文件放置在 <code>simple_peripheral_oad_onchip\tirtos\iar\output</code> 中。</p><p>那么 <code>hex2bin.exe</code> 在哪里来呢，这里我已经打包好了，可以直接在 <code>https://github.com/nixgnauhcuy/intelhex/releases/tag/v1.0.0</code> 下载并放置在对应的 <code>tools</code> 文件夹里。</p><blockquote><p><code>tools</code> 文件夹主要要用来放置一下对应的工具，不需要完全参考我的。</p></blockquote><p>填入上述的内容后，Rebuild 下对应的工程，就可以在 <code>simple_peripheral_oad_onchip\tirtos\iar\output</code> 看到 <code>sp_oad_onchip_cc2640r2lp_bim_onchip_FlashOnly.bin</code>文件。</p><p>到这第一个工程就完成了，第一步稍微繁琐，后面会简单许多。</p><h2 id="3-2-app">3.2 app</h2><p>同样的，右键 <code>cc2640r2lp_app</code> 工程，选择 <code>options..</code> 进入选项中，找到 <code>Build Actions</code>，修改其中的 <code>Post-build command line:</code>，原始内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\oad\oad_image_tool.exe iar $PROJ_DIR$ 1 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_boundary.xcl -hex2 $PROJ_DIR$\..\stack\FlashROM\Exe\sp_oad_onchip_cc2640r2lp_stack_FlashROM.hex -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $EXE_DIR$\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><p>上面的内容，简单概述下，就是使用 SDK 工程 tools\blestack\oad\oad_image_tool.exe 将编译的 hex 文件，结合 oad 密钥文件，最后输出转化为 bin 文件，有兴趣的可以在该工具目录下打开命令行，输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; .\oad_image_tool.exe -h</span><br><span class="line">usage: oad_image_tool [-h] [-v] [-verbose] [-hex1 HEXPATH1] [-bdf BDFILEPATH]</span><br><span class="line">                      [-hex2 [HEXPATH2]] [-k [KEYFILE]] -o OUTPUT</span><br><span class="line">                      ProjType ProjDir BinaryType</span><br><span class="line"></span><br><span class="line">OAD Hex to Binary Converter version</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这里不过多赘述，我们只需将输出的文件放置到我们的 ouput 文件夹中即可，修改后内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\oad\oad_image_tool.exe iar $PROJ_DIR$ 1 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_boundary.xcl -hex2 $PROJ_DIR$\..\stack\FlashROM\Exe\sp_oad_onchip_cc2640r2lp_stack_FlashROM.hex -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $PROJ_DIR$\..\output\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><p>这样第二个工程就完毕了，接下来的工程基本都这样，所以我会简单带过。</p><h2 id="3-3-persistent-app">3.3 persistent_app</h2><p>同 <code>3.2</code>，打开 <code>cc2640r2lp_persistent_app</code>，</p><p>原始内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\frontier\frontier.exe iar -b 1 $PROJ_DIR$\$CONFIG_NAME$\List\sp_oad_onchip_$PROJ_FNAME$_$CONFIG_NAME$.map $PROJ_DIR$\..\config\iar_oad_tgt_boundary.bdef $PROJ_DIR$\..\config\iar_oad_tgt_boundary.xcl &amp;amp; $TOOLS_BLE_DIR$\output_converter\output_converter.exe $EXE_DIR$\sp_oad_onchip_$PROJ_FNAME$_$CONFIG_NAME$.bin -b $PROJ_DIR$\..\config\iar_oad_tgt_boundary.bdef &amp;amp; $TOOLS_BLE_DIR$\oad\oad_image_tool.exe --verbose  iar $PROJ_DIR$ 0 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_oad_tgt_boundary.xcl -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $EXE_DIR$\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><p>修改如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\frontier\frontier.exe iar -b 1 $PROJ_DIR$\$CONFIG_NAME$\List\sp_oad_onchip_$PROJ_FNAME$_$CONFIG_NAME$.map $PROJ_DIR$\..\config\iar_oad_tgt_boundary.bdef $PROJ_DIR$\..\config\iar_oad_tgt_boundary.xcl &amp;amp; $TOOLS_BLE_DIR$\output_converter\output_converter.exe $EXE_DIR$\sp_oad_onchip_$PROJ_FNAME$_$CONFIG_NAME$.bin -b $PROJ_DIR$\..\config\iar_oad_tgt_boundary.bdef &amp;amp; $TOOLS_BLE_DIR$\oad\oad_image_tool.exe --verbose  iar $PROJ_DIR$ 0 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_oad_tgt_boundary.xcl -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $PROJ_DIR$\..\output\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><h2 id="3-4-stack">3.4 stack</h2><p>同 <code>3.2</code>，打开 <code>cc2640r2lp_stack</code>，</p><p>原始内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\frontier\frontier.exe  iar $PROJ_DIR$\$CONFIG_NAME$\List\$TARGET_BNAME$.map $PROJ_DIR$\..\config\iar_boundary.bdef $PROJ_DIR$\..\config\iar_boundary.xcl &amp;amp; $TOOLS_BLE_DIR$\oad\oad_image_tool.exe --verbose  iar $PROJ_DIR$ 2 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_boundary.xcl -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $EXE_DIR$\$TARGET_BNAME$_oad&quot;$PROJ_DIR$\..\output\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><p>修改如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd /C &quot;$TOOLS_BLE_DIR$\frontier\frontier.exe  iar $PROJ_DIR$\$CONFIG_NAME$\List\$TARGET_BNAME$.map $PROJ_DIR$\..\config\iar_boundary.bdef $PROJ_DIR$\..\config\iar_boundary.xcl &amp;amp; $TOOLS_BLE_DIR$\oad\oad_image_tool.exe --verbose  iar $PROJ_DIR$ 2 -hex1 $EXE_DIR$\$TARGET_BNAME$.hex -bdf $PROJ_DIR$\..\config\iar_boundary.xcl -k &quot;$TOOLS_BLE_DIR$\oad\private.pem&quot; -o $PROJ_DIR$\..\output\$TARGET_BNAME$_oad&quot;</span><br></pre></td></tr></table></figure><h2 id="3-5-编译工程">3.5 编译工程</h2><p>上面四个工程都修改完毕后，我们对整个项目进行重编译，就可以在 <code>.\simple_peripheral_oad_onchip\tirtos\iar\output</code> 中看到四个对应的 <code>.bin</code> 文件。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/03.png" alt="03.png"></p><p>那么四个主要的文件有了，就差合并了，这里我自己写了个 python 脚本合并多个 bin 文件，源码在<a href="https://github.com/nixgnauhcuy/python_script">python_script</a>，打包文件可以在这里下载 <a href="https://github.com/nixgnauhcuy/python_script/releases/tag/v1.0.0">releases</a>。</p><p>将打包好的 <code>bin_allinone.exe</code> 放在刚才放置 hex2bin.exe 的 tools 文件夹里。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/04.png" alt="04.png"></p><p>用法可以直接输入 -h 查看对应的帮助信息，这里不多赘述，下载并放置好文件夹后，我们回到 <code>output</code> 这个文件夹，创建一个 <code>.bat</code> 脚本，名字随意，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">..\..\..\tools\bin_allinone.exe .\sp_oad_onchip_cc2640r2lp_persistent_app_FlashOnly_oad.bin 0x14000 .\sp_oad_onchip_cc2640r2lp_app_FlashROM_oad.bin 0x0 .\sp_oad_onchip_cc2640r2lp_bim_onchip_FlashOnly.bin 0x1E000 .\sp_oad_onchip_cc2640r2lp_stack_FlashROM_oad.bin 0xB000 -p 0xff -o all_in_one.bin</span><br></pre></td></tr></table></figure><p>复制并保存到 <code>output</code> 文件夹，双击运行 <code>.bat</code> 文件，即可在文件夹中看到输出文件，名字为 <code>all_in_one.bin</code>。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231020/05.png" alt="05.png"></p><p>上述的 bat 脚本可以自己定制化地址偏移，以及输出的文件名。</p><p>这样，合并就完成了。</p><h1>结语</h1><p>到这里，基本都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CC2640 仿真烧录方式</title>
      <link href="/f4985376a128/"/>
      <url>/f4985376a128/</url>
      
        <content type="html"><![CDATA[<h1>1 前言</h1><p>简单记录下调试 Ti CC2640 时，所使用的仿真烧录器的烧录方式。</p><h1>2 开发环境</h1><ul><li>win11</li><li>IAR Embedded Workbench IDE - Arm 8.32.1</li><li>JFlash</li></ul><h1>3 仿真器</h1><h2 id="3-1-J-Link-EDU">3.1 J-Link EDU</h2><blockquote><p>注：市面上的盗版 JLINK ARM V8、 ARM V9 这些似乎均不支持 cJtag 功能，使用二线模式的时候需要注意自己用的 JLink 是否支持。</p></blockquote><p>使用 <code>JLink EDU</code>，通过二线模式烧录仿真，需要 JLink 支持 <code>cJtag</code> 功能，连线上只需连接 <code>TMS</code>、<code>TCK</code>、VCC 和 GND 即可，RESET 脚可接可不接，为了方便使用，最好还是接上。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/00.png" alt="00.png"></p><h2 id="3-1-XDS110">3.1 XDS110</h2><p>使用 <code>XDS110</code> 时，同样可以使用 <code>cJtag</code> 功能，连接 TMS、TCK 和电源地以及 RESET，接法和上面 <code>J-Link</code> 一致。</p><p>也可以使用 <code>Jtag</code> 接法，不过目前用的板子没有引出那么多口，所以未使用该方式，附上参考连接图：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/01.png" alt="01.png"></p><h1>4 仿真和烧录</h1><h2 id="4-1-IAR">4.1 IAR</h2><p>使用 IAR 对 CC2640 项目进行仿真烧录时，需要根据选择的仿真器进行配置，上述 <code>JLINK</code> 和 <code>XDS110</code> 仿真器均可使用，在 IAR 工程中，<code>右键项目 - Options - Debugger</code>，不同仿真器配置如下：</p><h3 id="4-1-1-J-Link-EDU">4.1.1 J-Link EDU</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/02.png" alt="02.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/03.png" alt="03.png"></p><h3 id="4-1-2-XDS110">4.1.2 XDS110</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/04.png" alt="04.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/05.png" alt="05.png"></p><p>这里用的是 <code>cJTAG</code> 方式，所以需要勾选 <code>cJTAG（2-pin）</code>。</p><h2 id="4-2-JFlash">4.2 JFlash</h2><p>JFlash 仅 <code>JLInk</code> 可用，用来烧录个人感觉还是很方便的，配置如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/06.png" alt="06.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20231019/07.png" alt="07.png"></p><p>通过快捷键 <code>F4</code> 擦除芯片后，分别将四个固件按顺序 <code>F7</code> 烧入芯片后，重新复位或上电即可。</p><h1>5 结语</h1><p>上述都是针对我的使用场景做的一些笔记，所以例如 Ti 的 CCS 仿真烧录这些我就没写。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 打包工具之 pyinstaller</title>
      <link href="/047559a4bb5f/"/>
      <url>/047559a4bb5f/</url>
      
        <content type="html"><![CDATA[<h1>什么是 pyinstaller</h1><p>PyInstaller 可以将 Python 程序打包成的独立的可执行文件。它通过读取编写的 Python 代码并分析代码在执行时需要的每一个模块和库。通过收集所有这些文件的副本及 Python 解释器，将其放在一个文件夹里，或者生成一个单独的可执行文件。</p><h1>pyinstaller 优缺点</h1><p>优点：</p><ul><li>打包快，并且操作简单。</li><li>跨平台</li></ul><p>缺点：</p><ul><li>性能差，执行的效率会比较低。</li><li>pyinstaller 捆绑编译的 Python 脚本(.pyc文件)。 原则上可以对这些进行反编译以揭示你的代码逻辑。</li></ul><p>还有关于单文件打包的弊端，如下图：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230626/00.png" alt="00.png"></p><p>来源于知乎 (<a href="https://www.zhihu.com/question/48776632/answer/2336654649">https://www.zhihu.com/question/48776632/answer/2336654649</a>) @韦易笑的回答。</p><h1>pyinstaller 安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pip install pyinstaller</span><br></pre></td></tr></table></figure><p>校验是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller --version</span><br><span class="line">5.11.0</span><br></pre></td></tr></table></figure><h1>pyinstaller 打包</h1><p>使用一个实际的项目来演示如何打包，项目地址在 <a href="https://github.com/nixgnauhcuy/QtComMate">QtComMate</a>，基于 pyqt6 的一个串口工具。</p><p>项目结构如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">├─docs</span><br><span class="line">│  ├─images</span><br><span class="line">│  └─translations</span><br><span class="line">└─src</span><br><span class="line">    │  config.py</span><br><span class="line">    │  main.py</span><br><span class="line">    │  main.ui</span><br><span class="line">    │  requirements.txt</span><br><span class="line">    │  resources_rc.py</span><br><span class="line">    │  serialport.py</span><br><span class="line">    │  serialport_combobox.py</span><br><span class="line">    │  Ui_main.py</span><br><span class="line">    └─Resources</span><br><span class="line">        ├─icon</span><br><span class="line">        │      main.ico</span><br><span class="line">        ├─img</span><br><span class="line">        ├─sty</span><br><span class="line">        └─translations</span><br></pre></td></tr></table></figure><p>上述我省略了一些无关紧要的文件，可以看出主程序是 <code>./src/main.py</code> 图标在 <code>./src/Resources/icon/main.ico</code> 中。</p><p>确认了主入口和图标位置后，开始打包，输入下述命令：</p><p>非单文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -D -w -i ./src/Resources/icon/main.ico ./src/main.py</span><br></pre></td></tr></table></figure><p>单文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -F -w -i ./src/Resources/icon/main.ico ./src/main.py</span><br></pre></td></tr></table></figure><p>等待命令执行完，执行完毕后，会在当前目录下生成 <code>dist</code> 文件夹，这样就打包成功了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230626/01.png" alt="01.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230626/02.png" alt="02.png"></p><p>简单运行下，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230626/00.gif" alt="00.gif"></p><p>打包命令各参数解析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -D -w -i .\src\Resources\icon\main.ico .\src\main.py</span><br></pre></td></tr></table></figure><ul><li><code>-w</code>：不显示控制台窗口</li><li><code>-i</code>：可执行文件的图标路径。</li><li><code>-D</code>：创建一个包含可执行文件的单文件夹。</li><li><code>-F</code>：创建一个单文件可执行文件。</li></ul><p>如果要了解其他的命令参数可以输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -h</span><br><span class="line">usage: pyinstaller [-h] [-v] [-D] [-F] [--specpath DIR] [-n NAME] [--add-data &lt;SRC;DEST or SRC:DEST&gt;] [--add-binary &lt;SRC;DEST or SRC:DEST&gt;] [-p DIR] [--hidden-import MODULENAME]</span><br><span class="line">                   [--collect-submodules MODULENAME] [--collect-data MODULENAME] [--collect-binaries MODULENAME] [--collect-all MODULENAME] [--copy-metadata PACKAGENAME]</span><br><span class="line">                   [--recursive-copy-metadata PACKAGENAME] [--additional-hooks-dir HOOKSPATH] [--runtime-hook RUNTIME_HOOKS] [--exclude-module EXCLUDES] [--splash IMAGE_FILE]      </span><br><span class="line">                   [-d &#123;all,imports,bootloader,noarchive&#125;] [--python-option PYTHON_OPTION] [-s] [--noupx] [--upx-exclude FILE] [-c] [-w]</span><br><span class="line">                   [-i &lt;FILE.ico or FILE.exe,ID or FILE.icns or Image or <span class="string">&quot;NONE&quot;</span>&gt;] [--disable-windowed-traceback] [--version-file FILE] [-m &lt;FILE or XML&gt;] [--no-embed-manifest]     </span><br><span class="line">                   [-r RESOURCE] [--uac-admin] [--uac-uiaccess] [--win-private-assemblies] [--win-no-prefer-redirects] [--argv-emulation]</span><br><span class="line">                   [--osx-bundle-identifier BUNDLE_IDENTIFIER] [--target-architecture ARCH] [--codesign-identity IDENTITY] [--osx-entitlements-file FILENAME]</span><br><span class="line">                   [--runtime-tmpdir PATH] [--bootloader-ignore-signals] [--distpath DIR] [--workpath WORKPATH] [-y] [--upx-dir UPX_DIR] [-a] [--clean] [--log-level LEVEL]</span><br><span class="line">                   scriptname [scriptname ...]</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">  scriptname            Name of scriptfiles to be processed or exactly one .spec file. If a .spec file is specified, most options are unnecessary and are ignored.</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -v, --version         Show program version info and <span class="built_in">exit</span>.</span><br><span class="line">....</span><br></pre></td></tr></table></figure><h1>结语</h1><p>如果单纯打包玩玩的话，可以使用 pyinstaller + pipenv 虚拟环境打包的方式，这样不会导致不需要的依赖也被打包，这里我就不多说了，我还是更推荐 Nuitka 的打包方法。</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 打包工具之 Nuitka</title>
      <link href="/cc72c04a110b/"/>
      <url>/cc72c04a110b/</url>
      
        <content type="html"><![CDATA[<h1>什么是 Nuitka</h1><p>Nuitka 是一个用 Python 编写的 Python 编译器。完全兼容 Python 2.6、2.7、3.4、3.5、3.6、3.7、3.8、3.9、3.10 和 3.11 版本，它以一种极其兼容的方式将未编译的代码和已编译的代码一起执行。Nuitka 将 Python 模块翻译成 C 级程序，然后使用 libpython 和自己的静态 C 文件，以 CPython 的方式执行。</p><h1>为什么使用 Nuitka</h1><ul><li>打包体积小</li><li>性能高，Nuitka 可以显著提高 Python 代码的性能，将其编译为二进制格式，可以比解释代码更有效地执行。这可以带来更快的执行时间和更好的资源利用率。</li><li>安全性，将 Python 代码编译成二进制格式可以使攻击者更难进行逆向工程或修改代码。</li></ul><h1>Nuitka 安装和环境</h1><h2 id="安装">安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pip install nuitka</span><br></pre></td></tr></table></figure><p>校验是否安装成功：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m nuitka --version</span><br><span class="line">1.7rc4</span><br><span class="line">Commercial: None</span><br><span class="line">Python: 3.9.10 (tags/v3.9.10:f2f3f53, Jan 17 2022, 15:14:21) [MSC v.1929 64 bit (AMD64)]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="环境">环境</h2><ul><li>Python：2.6、2.7、3.4、3.5、3.6、3.7、3.8、3.9、3.10 和 3.11 任一版本</li><li>C 编译器：推荐使用<code>mingw64</code>。其他的可参考官方文档 <a href="https://nuitka.net/de_DE/doc/user-manual.html#requirements">Requirements</a></li></ul><p>我当前的环境如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; python --version</span><br><span class="line">Python 3.9.10</span><br><span class="line">&gt; gcc --version</span><br><span class="line">gcc.exe (x86_64-win32-seh-rev0, Built by MinGW-W64 project) 8.1.0</span><br></pre></td></tr></table></figure><h1>Nuitka 打包</h1><blockquote><p>第一次使用时会提示下载一个 C 语言缓存工具（以加速重复编译生成的 C 代码）和一个基于 MinGW64 的 C 语言编译器。都输入 yes 即可。</p></blockquote><p>使用一个实际的项目来演示如何打包，项目地址在 <a href="https://github.com/nixgnauhcuy/QtComMate">QtComMate</a>，基于 pyqt6 的一个串口工具。</p><p>项目结构如下:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">D:.</span><br><span class="line">├─docs</span><br><span class="line">│  ├─images</span><br><span class="line">│  └─translations</span><br><span class="line">└─src</span><br><span class="line">    │  config.py</span><br><span class="line">    │  main.py</span><br><span class="line">    │  main.ui</span><br><span class="line">    │  requirements.txt</span><br><span class="line">    │  resources_rc.py</span><br><span class="line">    │  serialport.py</span><br><span class="line">    │  serialport_combobox.py</span><br><span class="line">    │  Ui_main.py</span><br><span class="line">    │</span><br><span class="line">    └─Resources</span><br><span class="line">        ├─icon</span><br><span class="line">        │      main.ico</span><br><span class="line">        ├─img</span><br><span class="line">        ├─sty</span><br><span class="line">        └─translations</span><br></pre></td></tr></table></figure><p>上述我省略了一些无关紧要的文件，可以看出主程序是 <code>./src/main.py</code> 图标在 <code>./src/Resources/icon/main.ico</code> 中。</p><p>确认了主入口和图标位置后，开始打包，输入下述命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m nuitka --mingw64 --standalone --show-memory --enable-plugin=pyqt6 --nofollow-import-to=numpy --nofollow-imports --remove-output --disable-console --windows-icon-from-ico=.\src\Resources\icon\main.ico --output-dir=out  .\src\main.py</span><br></pre></td></tr></table></figure><p>等待命令执行完，过程会稍微要点时间，并且会占用大量 CPU 资源，执行完毕后，会在当前目录下输出 out/main.dist 文件夹，这样就打包成功了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230621/00.png" alt="00.png"></p><p>简单运行下，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230621/00.gif" alt="00.gif"></p><p>为了对比一下 <code>pyinstaller</code>，输入下述命令使用 <code>pyinstaller</code> 打包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; pyinstaller -D -w -i .\src\Resources\icon\main.ico .\src\main.py</span><br></pre></td></tr></table></figure><p><code>pyinstaller</code> 会在当前目录生成 <code>dist</code> 和 <code>build</code> 文件，对比一下两者打包后的大小：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230621/01.png" alt="01.png"></p><p>可以看出 <code>Nuitka</code> 会比 <code>pyinstaller</code> 打包后的体积小。</p><p>打包命令各参数解析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m nuitka --mingw64 --standalone --show-memory --enable-plugin=pyqt6 --nofollow-import-to=numpy --nofollow-imports --remove-output --disable-console --windows-icon-from-ico=.\src\Resources\icon\main.ico --output-dir=out  .\src\main.py</span><br></pre></td></tr></table></figure><ul><li><code>--mingw64</code>：在 Windows 上强制使用 MinGW64。</li><li><code>--standalone</code>：启用输出的独立模式。这使你可以将创建的二进制文件传输到其他机器上，而不用使用现有的 Python 安装。这也意味着它将变得很大。</li><li><code>--show-memory</code>：提供内存信息和统计数据。</li><li><code>--enable-plugin</code>：启用的插件。必须是插件名称。</li><li><code>--nofollow-import-to</code>：在打包过程中忽略指定的 Python 软件包。</li><li><code>--nofollow-imports</code>：不导入任何模块。</li><li><code>--remove-output</code>：打包完成后删除 build 目录。</li><li><code>--disable-console</code>：禁用控制台窗口。</li><li><code>--windows-icon-from-ico</code>：可执行文件的图标路径。</li><li><code>--output-dir</code>：打包的输出文件夹路径。</li></ul><p>如果要了解其他的命令参数可以输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m nuitka --<span class="built_in">help</span></span><br><span class="line">Usage: __main__.py [--module] [--run] [options] main_module.py</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  --<span class="built_in">help</span>                show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  --version             Show version information and important details <span class="keyword">for</span> bug</span><br><span class="line">                        reports, <span class="keyword">then</span> <span class="built_in">exit</span>. Defaults to off.</span><br><span class="line">  --module              Create an extension module executable instead of a</span><br><span class="line">                        program. Defaults to off.</span><br><span class="line">....</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用代理 API 接口实现 GPT Chat</title>
      <link href="/b24e231b6701/"/>
      <url>/b24e231b6701/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>昨天写的 <a href="https://www.nixgnauhcuy.cn/8ea2fbe8b8db/">A Simple GPT Qt Demo</a>，由于使用的是官方的 API 接口，所以国内是无法使用的。基于这点考虑，寻找了替代 <a href="https://www.openai-proxy.com/">OpenAI API代理服务</a>来实现。</p><p>不过目前该代理接口只实现了 chat 功能，所以不能用于生成图片等功能。</p><p>代理接口支持通过上下文内容进行连续对话，所以刚好拿来玩一玩。</p><p>一些使用方法和注意事项，可以前往该链接 <a href="https://www.openai-proxy.com/">https://www.openai-proxy.com/</a> 查看，我就不多赘述了。</p><h1>实现</h1><p>为了直观，简单用了 QT 实现了该功能，具体代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> openai</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Ui_main <span class="keyword">import</span> Ui_MainWindow</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QMainWindow</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPyQT_Form</span>(QMainWindow, Ui_MainWindow):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line">        self.chatPushButton.clicked.connect(self.chatPushButtonEvent)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chatPushButtonEvent</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.chatLineEdit.text() == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        url = <span class="string">&quot;https://api.openai-proxy.com/v1/chat/completions&quot;</span></span><br><span class="line">        payload = json.dumps(&#123;</span><br><span class="line">            <span class="string">&quot;apiKey&quot;</span>: <span class="string">&quot;xxx&quot;</span>,</span><br><span class="line">            <span class="string">&quot;sessionId&quot;</span>: <span class="string">&quot;8d1cb9b0-f535-43a8-b738-4f61b1608572&quot;</span>,</span><br><span class="line">            <span class="string">&quot;content&quot;</span>: self.chatLineEdit.text()</span><br><span class="line">        &#125;)</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=payload).json() </span><br><span class="line"></span><br><span class="line">        self.chatTextEdit.append(<span class="string">&quot;user：\n&quot;</span> + self.chatLineEdit.text() + <span class="string">&quot;\n\n&quot;</span> + <span class="string">&quot;ask：\n&quot;</span> + response[<span class="string">&#x27;data&#x27;</span>] + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    my_pyqt_form = MyPyQT_Form()</span><br><span class="line">    my_pyqt_form.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h1>效果</h1><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325_1/00.gif" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325_1/01.gif" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> GPT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在 FireFox 使用 New Bing Chat</title>
      <link href="/5cf08051cca4/"/>
      <url>/5cf08051cca4/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>之前申请的 New Bing 因为要在 Edge 才能使用，所以好长时间都没有使用过。因此，特意去搜索在自己使用的浏览器 FireFox 上能使用的方法。</p><p>先贴一下实现效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/00.png" alt=""></p><h1>实现</h1><blockquote><p>前提：使用的微软账号已经申请并拥有 new bing 的使用权限。</p></blockquote><p>原理很简单，实际只是 <code>bing</code> 检测了发送请求的 <code>UA(User-Agent)</code>，只要我们伪装成 Edge 的 UA 就可以正常使用了。所以，其他浏览器也可以通过伪装的方式，实现访问 New Bing。这里只是我没有装其他的浏览器，也懒得下载一一测试，所以这里只说 FireFox 的实现。</p><p>在 FireFox 的附件扩展中下载并使用 <a href="https://addons.mozilla.org/zh-CN/firefox/addon/user-agent-string-switcher/">User-Agent Switcher and Manager</a>，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/01.png" alt=""></p><p>点击进入该扩展，并选择 <code>Edge</code> 进行伪装，随后进入 <a href="https://www.bing.com/new">new bing</a> 就可以正常使用了，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/02.png" alt=""></p><p>在浏览器使用 F12 进入控制台，可以在网络的发送请求中看到，请求的 <code>UA</code> 已经是伪装后的了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/03.png" alt=""></p><p>如果设置后进入还是没有生效，可以进入设置中将 <code>bing.com</code> 的 <code>Cookie</code> 删除，刷新试试。如果不希望所有的网站都生效伪装，可以前往插件设置中设置白名单。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/04.png" alt=""></p><p>还有其他能实现同样效果的插件，例如：</p><p><a href="https://addons.mozilla.org/en-US/firefox/addon/bing-chat-for-all-browsers/">bing-chat-for-all-browsers</a> 扩展，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/05.png" alt=""></p><p>安装完成后，点击扩展后按下 <code>Open Bing Chat</code> 按钮会自动跳转到 new bing 界面。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/06.png" alt=""></p><p>该扩展的 Github ReadMe 中，提示 FireFox 需要更新为最新版本，并进入 <code>about:config</code> 中，设置 <code>layout.css.overflow-overlay.enabled</code> 为 <code>true</code>，否则无法滚动。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/07.png" alt=""></p><p><a href="https://addons.mozilla.org/en-US/firefox/addon/modheader-firefox/">ModHeader</a> 扩展，安装完成后，填入 <code>Request headers</code> 的 <code>Name</code> 为 <code>User-Agent</code> ，<code>Value</code> 为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36 Edg/109.0.1474.0</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230325/08.png" alt=""></p><p>最后填入 <code>Request URL filters</code> 并运行即可。</p><h1>结语</h1><p>实际上只要实现伪装 UA 来访问 New Bing Chat，所以可用的方法很多，上面我罗列的插件，其实基本原理一致，选其一即可。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>A Simple GPT Qt Demo</title>
      <link href="/8ea2fbe8b8db/"/>
      <url>/8ea2fbe8b8db/</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>注册 OpenAi 好长一段时间了，送的 18 刀的 api 接口一直没怎么使用过，突然看到今年 6 月份就过期了，刚好就拿来玩玩。简单尝试后，就想着用 PYQT5 来实现，目前实现了对话和图片生成，对话的上下文联系功能没做，因为一旦对话太长，消耗的 api 请求也会增加。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230324/00.png" alt="00.png"></p><blockquote><p>项目地址：<a href="https://github.com/nixgnauhcuy/ASimpleGPTQtDemo">https://github.com/nixgnauhcuy/ASimpleGPTQtDemo</a></p></blockquote><h1>实现</h1><p>实现十分简单，项目基于 pyqt5，界面代码我就不贴了，应用代码如下，也可以前往 <a href="https://github.com/nixgnauhcuy/ASimpleGPTQtDemo">ASimpleGPTQtDemo</a> 下载代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">chatThread</span>(<span class="title class_ inherited__">QThread</span>):</span><br><span class="line">    chatSignal = pyqtSignal(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__int__</span>(<span class="params">self, text=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(chatThread, self).__init__()</span><br><span class="line">        self.text = text</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = openai.ChatCompletion.create(</span><br><span class="line">                model=<span class="string">&quot;gpt-3.5-turbo&quot;</span>,</span><br><span class="line">                messages = [&#123;<span class="string">&quot;role&quot;</span>:<span class="string">&quot;user&quot;</span>, <span class="string">&quot;content&quot;</span>: self.text&#125;],</span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            ask = response[<span class="string">&#x27;choices&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">            self.chatSignal.emit(ask)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">            ask = <span class="built_in">str</span>(result)</span><br><span class="line">            self.chatSignal.emit(ask)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">createImgThread</span>(<span class="title class_ inherited__">QThread</span>):</span><br><span class="line">    createImgSignal = pyqtSignal(<span class="built_in">str</span>, <span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__int__</span>(<span class="params">self, text=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(createImgThread, self).__init__()</span><br><span class="line">        self.text = text</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = openai.Image.create(</span><br><span class="line">                prompt=self.text,</span><br><span class="line">                n=<span class="number">1</span>,</span><br><span class="line">                size=<span class="string">&quot;512x512&quot;</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">            image_url = response[<span class="string">&#x27;data&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;url&#x27;</span>]</span><br><span class="line">            self.createImgSignal.emit(image_url, <span class="string">&#x27;True&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">            image_url = <span class="built_in">str</span>(result)</span><br><span class="line">            self.createImgSignal.emit(image_url, <span class="string">&#x27;False&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyPyQT_Form</span>(QMainWindow, Ui_MainWindow):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line"></span><br><span class="line">        self.chatRunFlag = <span class="literal">False</span></span><br><span class="line">        self.chat = chatThread()</span><br><span class="line">        self.chat.chatSignal.connect(self.chatAskEvent)</span><br><span class="line">        self.chatPushButton.clicked.connect(self.chatPushButtonEvent)</span><br><span class="line"></span><br><span class="line">        self.createImgRunFlag = <span class="literal">False</span></span><br><span class="line">        self.createImg = createImgThread()</span><br><span class="line">        self.createImg.createImgSignal.connect(self.createImgEvent)</span><br><span class="line">        self.createImgPushButton.clicked.connect(self.createImgPushButtonEvent)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chatAskEvent</span>(<span class="params">self, <span class="built_in">str</span></span>):</span><br><span class="line">        self.chatTextEdit.append(<span class="string">&#x27;ask：\n&#x27;</span> + <span class="built_in">str</span> + <span class="string">&#x27;\n----------------------------------\n&#x27;</span>)</span><br><span class="line">        self.statusBar.clearMessage()</span><br><span class="line">        self.chatRunFlag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chatPushButtonEvent</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.chatLineEdit.text() == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> self.chatRunFlag != <span class="literal">False</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        openai.api_key = self.apiKeyLineEdit.text()</span><br><span class="line"></span><br><span class="line">        self.chatRunFlag = <span class="literal">True</span></span><br><span class="line">        self.chat.text = self.chatLineEdit.text()</span><br><span class="line">        self.chatTextEdit.append(<span class="string">&#x27;user：\n&#x27;</span> + self.chat.text + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        self.statusBar.showMessage(<span class="string">&#x27;正在生成中...&#x27;</span>)</span><br><span class="line">        self.chat.start()</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">createImgEvent</span>(<span class="params">self, url, flag</span>):</span><br><span class="line">        <span class="keyword">if</span> flag == <span class="string">&#x27;True&#x27;</span>:</span><br><span class="line">            res = requests.get(url)</span><br><span class="line">            photo = QPixmap()</span><br><span class="line">            photo.loadFromData(res.content)</span><br><span class="line">            self.createImgLabel.setPixmap(photo)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.createImgLabel.setText(url)</span><br><span class="line"></span><br><span class="line">        self.createImgRunFlag = <span class="literal">False</span></span><br><span class="line">        self.statusBar.clearMessage()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">createImgPushButtonEvent</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.createImgLineEdit.text() == <span class="string">&quot;&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> self.createImgRunFlag != <span class="literal">False</span>:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        </span><br><span class="line">        openai.api_key = self.apiKeyLineEdit.text()</span><br><span class="line">    </span><br><span class="line">        self.createImgRunFlag = <span class="literal">True</span></span><br><span class="line">        self.createImg.text = self.createImgLineEdit.text()</span><br><span class="line"></span><br><span class="line">        self.statusBar.showMessage(<span class="string">&#x27;正在生成中...&#x27;</span>)</span><br><span class="line">        self.createImg.start()</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    my_pyqt_form = MyPyQT_Form()</span><br><span class="line">    my_pyqt_form.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><h1>效果演示</h1><h2 id="对话">对话</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230324/Chat.gif" alt="Chat"></p><h2 id="图片生成">图片生成</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230324/creatImg.gif" alt="creatImg"></p><h2 id="出错预览">出错预览</h2><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230324/Error.gif" alt="Error"></p>]]></content>
      
      
      <categories>
          
          <category> GPT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集成 GPT-4 的 IDE 工具 Cursor</title>
      <link href="/10ab07f6c6c9/"/>
      <url>/10ab07f6c6c9/</url>
      
        <content type="html"><![CDATA[<blockquote><p>**2023-10-12：</p><ul><li>更新 <code>Cursor</code> 主页地址。</li><li>更新 <code>Cursor</code> 当前收费标准</li></ul></blockquote><h1>Cursor</h1><p><a href="https://cursor.sh/">Cursor</a> 是集成了 GPT-4 的 IDE 工具，目前免费并且无需 API Key，支持 Win、Mac、Linux 平台，可以按要求生成代码，或者让 AI 帮你优化代码，分析代码。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_2/00.png" alt="00.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_2/05.png" alt="05.png"></p><p>目前免费版每月可享用 50次 GPT-4 和 200次 GPT-3.5。</p><p>下载地址：<a href="https://cursor.sh/">https://cursor.sh/</a></p><h1>应用</h1><p>下载后，启动应用，界面十分简洁，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_2/01.png" alt="01.png"></p><p>使用方法：</p><ul><li><p><code>Ctrl + K</code>，输入要求后用于生成代码或更改代码</p></li><li><p><code>Ctrl + L</code>，输入问题后，AI 会对代码按要求进行分析或解答</p></li></ul><h1>演示</h1><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_2/02.png" alt="02.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_2/03.png" alt="03.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_2/04.png" alt="04.png"></p><p>IDE 工具可以帮你按照你的要求自动生成代码，可以帮你检查你的代码工程，我这里懒的贴 GIF 和视频，所以用的 Demo 都十分的简单，如果感兴趣的话，可以自己下载体验，目前是免费的，后面收不收费就不知道了~</p>]]></content>
      
      
      <categories>
          
          <category> GPT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GPT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pdf2htmlEx - html高度还原pdf</title>
      <link href="/2dc15143d194/"/>
      <url>/2dc15143d194/</url>
      
        <content type="html"><![CDATA[<h1>引言</h1><p>本篇针对我的上篇文章<a href="https://www.nixgnauhcuy.cn/15e677942aff/">翻译手册技巧</a>，对 pdf 转 html 进行一个补充。</p><p>上一篇文章，我使用了福晰 pdf 编辑器，对 pdf 转换成 html 来对英文进行翻译，具体效果如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/00.png" alt="00.png"></p><p>转换完成后，效果很差，排版与原始的 pdf 相差太远，所以基于这点考虑，我就想是否有替代的方式可以保留原始格式，最终在 Github 上，看到作者 coolwanglu 的开源项目 <a href="https://github.com/coolwanglu/pdf2htmlEX">pdf2htmlEx</a>，可以完美的解决这个问题。</p><h1>pdf2htmlEx</h1><h2 id="介绍">介绍</h2><p>该项目地址为：<a href="https://github.com/coolwanglu/pdf2htmlEX%E3%80%82">https://github.com/coolwanglu/pdf2htmlEX。</a></p><blockquote><p>pdf2htmlEX 利用现代 Web 技术以 HTML 格式呈现 PDF 文件。</p></blockquote><p>贴两个作者项目的效果图：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/01.png" alt="01.png"></p><ul><li><a href="https://github.com/raphink/geneve_1564/releases/download/2015-07-08_01/geneve_1564.pdf">pdf</a></li><li><a href="https://wang-lu.com/pdf2htmlEX/demo/geneve.html">html</a></li></ul><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/02.png" alt="02.png"></p><ul><li><a href="https://www.tug.org/texshowcase/cheat.pdf">pdf</a></li><li><a href="https://wang-lu.com/pdf2htmlEX/demo/cheat.html">html</a></li></ul><p>转换完的 html 效果基本完美的还原了 pdf 的格式，具体的其他展示可以去项目地址查看。</p><h2 id="下载">下载</h2><p>有能力的读者可以下载源码自行编译，项目的 <a href="https://github.com/coolwanglu/pdf2htmlEX/wiki/Quick-Start">Wiki</a> 介绍了使用方法及构建的方法。</p><p>这里我直接用简单的方法，Wiki 上<a href="https://github.com/coolwanglu/pdf2htmlEX/wiki/Download">下载页</a>有打包者打包好的各环境的包，这里我用的 Windows，所以直接点击进入下载。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/03.png" alt="03.png"></p><p>下滑至下载，选择第一个进行下载即可。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/04.png" alt="04.png"></p><p>下载至本地后，解压到自己需要保存的路径，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/05.png" alt="05.png"></p><p>接下来，就可以直接用下载好的工具，对 pdf 进行转换了，</p><p>在工具目录下右键打开命令行，为了简单，我直接把要转换的 pdf 拖到工具目录下，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/06.png" alt="06.png"></p><p>由于不需要特殊处理，我直接用最简单的命令进行转换，转换完成后，会在当前路径生成 html。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/07.png" alt="07.png"></p><p>转换效果如图：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317_1/08.png" alt="08.png"></p><p>软件更多的操作命令，可以在作者项目的 wiki 里看到，这里我就不过多陈述了。</p><h2 id="结语">结语</h2><p>使用 pdf2htmlEx 转换后的 html 格式高度的还原了 pdf，对比之前的工具，这个已经堪称神器了，配合翻译，可以更加高效的阅读文档，所以十分推荐大家使用这个~</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英文芯片手册阅读技巧</title>
      <link href="/15e677942aff/"/>
      <url>/15e677942aff/</url>
      
        <content type="html"><![CDATA[<h1>英文芯片手册阅读技巧</h1><h2 id="引言">引言</h2><p>本篇针对像我一样的英语学渣，但是工作中经常需要翻阅英文芯片的 pdf 手册，却因为英文水平过差，提供一种另类取巧的方式。</p><p><code>该方法有部分局限性，但不限于芯片文档，其他的英文书籍 pdf 也可使用该方法。</code></p><h2 id="准备">准备</h2><ul><li>能转换 pdf 为 html 的工具，例如福晰 pdf 编辑器，在线 pdf 转换工具等。</li><li>支持安装插件的浏览器，如 Firefox、Edge、Chrome等。</li><li>浏览器需自带或安装翻译插件，例如 <code>TWP - Translate Web Pages</code>、<code>油猴脚本-沉寂式翻译</code>（推荐，可以实现双语），其他可以翻译页面的工具等。</li></ul><p>目前我自己在用的：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/00.png" alt="00.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/01.png" alt="01.png"></p><h2 id="实现方法">实现方法</h2><h3 id="1-下载要翻译的-pdf-文档">1. 下载要翻译的 pdf 文档</h3><p>首先，将要翻译的 pdf 文档下载到本地，这里我随便找了个 Ti 的<a href="https://www.ti.com/lit/ds/symlink/ina851.pdf?ts=1679005649055&amp;ref_url=https%253A%252F%252Fwww.ti.com%252Fproduct%252FINA851">芯片手册</a></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/02.png" alt="02.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/03.png" alt="03.png"></p><h2 id="2-将-pdf-转换-html">2. 将 pdf 转换 html</h2><p>将 pdf 打开，并转换为 html，这里我使用福晰 pdf 编辑器作为演示，有其他相似工具基本原理一致。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/04.png" alt="04.png"></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/05.png" alt="05.png"></p><h3 id="3-翻译-html">3 翻译 html</h3><p>将转换好的 html 用浏览器打开，这里我使用的 Firefox，其他浏览器也可，原理一致。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/06.png" alt="06.png"></p><p>转换后显示格式会错乱，这个影响不大，我们只需要它能翻译即可，这里就可以直接用浏览器对整页进行翻译，下边是我使用的两个插件的效果：</p><p><code>TWP - Translate Web Pages</code>效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/07.png" alt="07.png"></p><p><code>油猴脚本-沉寂式翻译</code>效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230317/08.png" alt="08.png"></p><h2 id="结语">结语</h2><p>该技巧算是十分简单了，门槛不高。</p>]]></content>
      
      
      <categories>
          
          <category> 技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 技巧 </tag>
            
            <tag> 英文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编码命名风格</title>
      <link href="/e12d07c4a704/"/>
      <url>/e12d07c4a704/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“There are only two hard things in Computer Science: cache invalidation and naming things.”</p></blockquote><h2 id="引言">引言</h2><p>编码命名风格是在软件开发中起着至关重要作用的一项技能。一个好的命名风格可以增强代码的可读性、可维护性和可重用性，使得代码更加易于理解和修改。在本文中，我们将深入讨论常见的编码命名风格，包括驼峰命名法、蛇形命名法和匈牙利命名法，并探讨它们的优缺点和最佳实践。</p><hr><h2 id="常见的编码命名风格">常见的编码命名风格</h2><h3 id="驼峰式命名法-camel-case">驼峰式命名法(camel case)</h3><h4 id="简介">简介</h4><p>驼峰命名法是一种常用的命名风格，单词之间不以空格或连接符 “-”、下划线 “_” 连接，主要分为大驼峰和小驼峰两种形式。</p><p>在大驼峰命名法(upper camel case，也被称为 Pascal 命名法)中，每个单词的首字母都大写，而在小驼峰命名法(lower camel case)中，第一个单词的首字母小写，其余单词的首字母大写。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230301/00.png" alt="大驼峰命名法"></p><p>(图片来源于 <a href="https://zh.wikipedia.org/wiki/%E9%A7%9D%E5%B3%B0%E5%BC%8F%E5%A4%A7%E5%B0%8F%E5%AF%AB">Wiki</a>)</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20230301/01.png" alt="小驼峰命名法"></p><p>(图片来源于 <a href="https://zh.wikipedia.org/wiki/%E9%A7%9D%E5%B3%B0%E5%BC%8F%E5%A4%A7%E5%B0%8F%E5%AF%AB">Wiki</a>)</p><h4 id="例子">例子</h4><p><strong>大驼峰命名法：</strong></p><ul><li>FirstName</li><li>UserName</li><li>TmpData</li></ul><p><strong>小驼峰命名法：</strong></p><ul><li>firstName</li><li>userName</li><li>lowerCamelCase</li></ul><h4 id="优缺点">优缺点</h4><p>优点：</p><ul><li>可读性：由于使用了大小写混合的形式，使得单词之间的边界更明显，有助于代码更易于阅读和理解。</li><li>美观性：使用驼峰命名法可以使代码看起来更加整洁和美观，有助于提高代码质量和可维护性。</li><li>与惯例一致性：驼峰命名法已经成为许多编程语言(C#、Java、JavaScript、PHP 等)和框架的惯例，因此使用它可以使代码更符合行业标准和约定。</li></ul><p>缺点：</p><ul><li>长度：使用驼峰命名法可能会导致变量名变得很长，尤其是在包含多个单词的情况下，驼峰式命名法可能使变量名变得不够易读。</li><li>命名冲突：由于驼峰命名法中的大小写形式相同，因此如果两个变量名只有大小写不同，则可能会导致命名冲突。</li><li>不适合某些情况：有时候，驼峰命名法可能不适合某些特定的情况，比如需要与其他系统或API进行交互时，可能需要使用特定的命名规范或命名方式。</li></ul><h3 id="蛇形命名法-snake-Case">蛇形命名法(snake Case)</h3><h4 id="简介-2">简介</h4><p>蛇形命名法，也称为下划线命名法。在蛇形命名法中，单词之间或逻辑断点之间用下划线 “-”分隔。</p><h4 id="例子-2">例子</h4><ul><li>first_name</li><li>user_name</li><li>tmp_data</li></ul><h4 id="优缺点-2">优缺点</h4><p>优点：</p><ul><li>可读性：由于使用单词之间用下划线分隔的形式，使得单词之间的边界更明显，有助于代码更易于阅读和理解。</li><li>命名风格统一：蛇形命名法在许多编程语言中都是常用的命名约定，因此可以在不同的编程语言(Python、Ruby、JavaScript、PHP 等)和环境中使用，而不需要进行额外的转换或重命名。</li><li>易于输入：在编写代码时，输入下划线相对于连字符或驼峰式命名法更加容易和自然。</li></ul><p>缺点：</p><ul><li>代码冗长：由于使用下划线分隔单词，因此蛇形命名法的变量名通常比其他命名约定的变量名更长。</li><li>美观性：蛇形命名法可能会使代码看起来不够美观和整洁，因为它在变量名中使用了许多下划线字符。</li><li>不适合网络：在 Web 开发中，蛇形命名法不适合用于 HTML/CSS 中的类名和 ID，因为它们会影响可读性和 SEO（搜索引擎优化）。</li></ul><h3 id="匈牙利命名法-Hungarian-Notation">匈牙利命名法(Hungarian Notation)</h3><h4 id="简介-3">简介</h4><p>匈牙利命名法是一种命名风格，由 Charles Simonyi 在 Microsoft 公司开发 Windows 应用程序时提出。它的名字“匈牙利”源于 Simonyi 的出生地匈牙利。在当时，计算机的内存非常昂贵，因此使用这种命名约定可以帮助程序员更好地管理内存，减少内存浪费和数据类型错误。在匈牙利命名法中，前缀通常由一个或多个小写字母组成，后面跟着变量名。这个后半部分的首字母可以大写，以区别前面的类型指示字母，匈牙利命名法最初的设计目的是提高代码可读性和可维护性。</p><h4 id="例子-3">例子</h4><ul><li>strName - 表示该变量是一个字符串类型的变量</li><li>iCount - 表示该变量是一个整型计数器</li><li>bEnabled - 表示该变量是一个布尔型的开关</li><li>szBuffer - 表示该变量是一个以 null 结尾的字符串缓冲区</li><li>hWnd - 表示该变量是一个窗口句柄(handle to window)</li><li>lpData - 表示该变量是一个指向数据的指针(pointer to data)</li><li>fValue - 表示该变量是一个浮点数(floating-point value)</li></ul><h4 id="优缺点-3">优缺点</h4><p>优点：</p><ul><li>可读性：匈牙利命名法使用类型前缀或其他含义相关的前缀来表示变量的含义，有助于代码可读性和可维护性。</li><li>类型检查：修改代码时，通过类型前缀可以更容易地找到相应的变量，并且可以轻易的对变量类型进行检查，减少了在运行时发生类型错误的风险以及提高代码的可维护性。</li><li>防止变量重名：通过加上前缀，可以避免不同类型的变量同名的情况。</li><li>规范化：使用匈牙利命名法可以使代码更加规范化，因为多个开发人员可以使用相同的命名规则，从而使代码更易于维护。</li></ul><p>缺点：</p><ul><li>代码冗长：由于需要加上类型前缀，变量名可能会变得很长，这使得代码显得冗长而难以阅读。</li><li>不适用于某些场景：匈牙利命名法通常不适用于面向对象的程序设计，因为它难以表示对象和类之间的关系。</li><li>不兼容：由于不同平台使用的类型前缀可能不同，因此在跨平台开发时，命名可能会变得混乱。</li><li>非强制性：匈牙利命名法不是强制性的，因此在一个团队中使用时，可能会出现有些人使用它，有些人不使用的情况，这可能会导致代码混乱。</li></ul><h3 id="串式命名法-kebab-case">串式命名法(kebab-case)</h3><h4 id="简介-4">简介</h4><p>Kebab-case 命名法是一种命名约定，它是一种使用连字符 “-” 将单词连接在一起的方式来命名变量、函数、文件等。</p><h4 id="例子-4">例子</h4><ul><li>user-name</li><li>tmp-data</li><li>first-name</li></ul><h4 id="优缺点-4">优缺点</h4><p>优点：</p><ul><li>可读性：由于使用单词之间用连字符分隔的形式，使得单词之间的边界更明显，有助于代码更易于阅读和理解。</li><li>与没有分隔符的命名方式相比，kebab-case 更易于阅读和理解，因为单词之间有明显的分隔符。</li><li>与URL一致：kebab-case 在 URL 和文件路径中广泛使用，因此在 Web 开发中非常流行</li><li>网络友好性：在 Web 开发钟，kebab-case 常用于 HTML/CSS 中的类名和 ID，因为它们更易于阅读和 SEO。</li></ul><p>缺点：</p><ul><li>不易于使用：由于破折号(-)在某些编程语言中具有特殊意义，因此使用 kebab-case 变量名可能会引起一些问题，特别是在使用命令行工具和脚本时。</li><li>代码冗长：因为使用了连字符 “-”，kebab-case 变量名通常比其他命名约定更长，这可能会使代码更难以阅读和理解。</li></ul><h3 id="火车命名法-Train-Case">火车命名法(Train-Case)</h3><h4 id="简介-5">简介</h4><p>Train-Case 命名法（也称为 Pascal-Case-With-Dashes）是一种命名约定，它是一种使用连字符将单词连接在一起的方式来命名变量、函数、文件等，并且使用大驼峰命名法的方式首字母大写。火车命名法通常用于编程语言、文件命名、网页URL等场景中，可以提高可读性和可维护性。</p><h4 id="例子-5">例子</h4><ul><li>User-Name</li><li>Tmp-Data</li><li>First-Name</li></ul><h4 id="优缺点-5">优缺点</h4><p>优点：</p><ul><li>可读性：由于每个单词首字母大写并且单词之间用连字符分隔的形式，使得单词之间的边界更明显，有助于代码更易于阅读和理解。</li><li>可维护性好：命名规范统一，使得代码更易于理解和修改，便于维护。</li><li>易于转换：相对于驼峰命名法，火车命名法更易于与其他命名方式进行转换，例如可以将连字符 “-” 替换为下划线 “_” 或驼峰命名法。</li></ul><p>缺点：</p><ul><li>代码冗长：由于使用连字符 “-” 分隔单词，因此火车命名法的变量名通常比其他命名约定的变量名更长。</li><li>变量名较长：因为使用了破折号 ‘-’，kebab-case 变量名通常比其他命名约定更长，这可能会使代码更难以阅读和理解。</li><li>不适用于所有编程语言：某些编程语言或系统可能不支持连字符 “-” 作为命名中的一部分，这可能导致在使用火车命名法时出现一些问题。</li></ul><hr><h2 id="最佳实践">最佳实践</h2><p>选择适合自己和团队的命名约定是一种非常主观的决策，不同的团队和项目可能会有不同的偏好和要求。以下是一些通用的最佳实践，可以帮助您选择和使用适合自己和团队的命名约定：</p><ol><li>保持一致性：在整个项目中使用相同的命名约定，以确保代码的一致性和可读性。</li><li>使用有意义的名称：使用能够准确反映变量、函数或类目的名称，使代码更容易理解和维护。</li><li>避免过长的名称：尽量使用简短和明了的名称，同时避免使用过长的名称，以提高代码的可读性。</li><li>避免缩写：尽量避免使用缩写，因为缩写可能会导致代码难以理解。</li><li>选择流行的命名约定：流行的命名约定通常在广泛使用中，并且已被证明在许多项目中具有可靠性和可读性。</li></ol><p>总之，选择一个适合自己和团队的命名约定并不是一件容易的事情。最重要的是选择一个命名约定，并坚持使用它。在整个项目中保持一致性和规范性，可以帮助提高代码的可读性和可维护性。</p><hr><h2 id="常见的编程命名错误">常见的编程命名错误</h2><ol><li>拼写错误：拼写错误可能是最常见的错误之一。如果你不小心将变量或函数名拼错了，编译器将无法识别它们，并给出错误提示。</li><li>不规范的命名：不规范的命名可能会导致代码难以理解。例如，使用单个字母或数字作为变量名可能会让人感到困惑，因为它们不清楚地描述变量的含义。</li><li>混淆变量名：在一些情况下，程序员可能会使用类似的变量名来表示不同的变量，这可能会导致混淆和错误。例如，使用类似于 “i” 和 “l” 这样的变量名，因为它们在某些字体中很难区分。</li><li>不一致的命名约定：使用不一致的命名约定可能会使代码难以阅读。例如，有时使用下划线分隔单词，有时使用驼峰命名法，有时使用全大写字母等等。</li><li>保留字冲突：如果你不小心使用保留字作为变量名，编译器将无法识别它们，并给出错误提示。</li><li>不恰当的长度：变量和函数名应该既不太短也不太长。如果变量名太短，它们可能不足以描述其含义，如果太长，则可能会使代码难以阅读。</li><li>忘记使用标准命名规则：某些编程语言有一些标准的命名规则，例如，Java中的 “驼峰命名法”，如果你忘记了这些规则，可能会使代码难以阅读和维护。</li><li>没有使用有意义的命名：变量和函数名应该有意义，并能够清晰地表达它们所代表的含义。如果命名没有意义，代码可能会难以理解。</li><li>不一致的缩写：如果你使用了缩写，应该确保它们的使用是一致的。例如，如果你将 “maximum” 缩写为 “max”，那么你应该在整个代码中都使用这个缩写。</li></ol><hr><h2 id="推荐">推荐</h2><h3 id="Google-开源项目风格指南">Google 开源项目风格指南</h3><blockquote><p>Google 经常会发布一些开源项目, 意味着会接受来自其他代码贡献者的代码. 但是如果代码贡献者的编程风格与 Google 的不一致,  会给代码阅读者和其他代码提交者造成不小的困扰. Google 因此发布了这份自己的编程风格指南, 使所有提交代码的人都能获知 Google  的编程风格.</p></blockquote><p><a href="https://github.com/zh-google-styleguide/zh-google-styleguide">Google 开源项目风格指南</a>目前已经发布了七份中文版的风格指南，包括 C++、Objective-C、Python、JavaScript、Shell、JSON、TypeScript，可以在 Github 上，相应的跳转到对应的风格指南去。</p><h3 id="《代码整洁之道》">《代码整洁之道》</h3><p>《代码整洁之道》（Clean Code）是由 Robert C. Martin 编写的一本经典的软件工程书籍，是软件开发者必读的一本书。</p><p>这本书主要讲述了如何编写清晰、可读、易于维护的代码。作者提出了许多有用的原则和实践，涵盖了代码组织、命名、注释、测试等方面的内容。书中提倡使用简单的代码结构、清晰的命名、精简的函数、规范的注释等技术来提高代码的质量。</p><p>该书主要包含以下内容：</p><ol><li>代码整洁的重要性及其对软件开发的影响。</li><li>如何命名变量、函数、类等。</li><li>如何组织代码，使用类、函数等基本元素，以及如何避免重复代码。</li><li>如何编写有意义的注释，以及何时应该避免注释。</li><li>如何编写有效的单元测试，以及测试的重要性。</li><li>如何处理异常和错误，以及如何编写可恢复的代码。</li><li>如何编写简洁的代码，以及如何避免复杂的逻辑和表达式。</li><li>如何使用工具和技术来提高代码质量。</li></ol><p>总的来说，《代码整洁之道》是一本非常实用的书籍，其中提出的许多原则和实践都是经过实践验证的，可以帮助开发者编写更好的代码，提高软件开发效率和质量。如果您想要提高自己的编程技能，我非常推荐这本书。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编译 Linux 内核，打印 &quot;multiple definition of `yylloc&#39;&quot; 出错</title>
      <link href="/b77d15ce3b54/"/>
      <url>/b77d15ce3b54/</url>
      
        <content type="html"><![CDATA[<h2 id="1-问题描述">1 问题描述</h2><h3 id="1-1-环境">1.1 环境</h3><ul><li>OS：Arch Linux x86_64</li><li>GCC：12.2.0</li><li>ld：2.39.0</li><li>编译的内核版本：linux-imx-rel_imx_4.1.15_2.1.0</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">❯ <span class="built_in">cat</span> /proc/version</span><br><span class="line">Linux version 6.0.12-arch1-1 (linux@archlinux) (gcc (GCC) 12.2.0, GNU ld (GNU Binutils) 2.39.0) <span class="comment">#1 SMP PREEMPT_DYNAMIC Thu, 08 Dec 2022 11:03:38 +0000</span></span><br><span class="line"></span><br><span class="line">❯ <span class="built_in">uname</span> -m</span><br><span class="line">x86_64</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="1-2-错误输出">1.2 错误输出</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">  CHK     include/generated/bounds.h</span><br><span class="line">  UPD     include/generated/bounds.h</span><br><span class="line">  CC      <span class="built_in">arch</span>/arm/kernel/asm-offsets.s</span><br><span class="line">  CHK     include/generated/asm-offsets.h</span><br><span class="line">  UPD     include/generated/asm-offsets.h</span><br><span class="line">  CALL    scripts/checksyscalls.sh</span><br><span class="line">  HOSTLD  scripts/dtc/dtc</span><br><span class="line">/usr/bin/ld: scripts/dtc/dtc-parser.tab.o:(.bss+0x50): multiple definition of `yylloc<span class="string">&#x27;; scripts/dtc/dtc-lexer.lex.o:(.bss+0x0): first defined here</span></span><br><span class="line"><span class="string">collect2: 错误：ld 返回 1</span></span><br><span class="line"><span class="string">make[2]: *** [scripts/Makefile.host:100：scripts/dtc/dtc] 错误 1</span></span><br><span class="line"><span class="string">make[1]: *** [scripts/Makefile.build:403：scripts/dtc] 错误 2</span></span><br><span class="line"><span class="string">make[1]: *** 正在等待未完成的任务....</span></span><br><span class="line"><span class="string">  HOSTLD  scripts/genksyms/genksyms</span></span><br><span class="line"><span class="string">  HOSTLD  scripts/mod/modpost</span></span><br><span class="line"><span class="string">make: *** [Makefile:555：scripts] 错误 2</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><hr><h2 id="2-原因">2 原因</h2><p>gcc 10 将默认为 <code>-fno-common</code>，这将导致在链接时出现错误 <code>multiple definition of </code>yylloc’;`</p><hr><h2 id="3-解决方法">3 解决方法</h2><p>使用下述两种方式皆能编译通过。</p><h3 id="3-1-方法-1">3.1 方法 1</h3><p>降级 gcc 版本为 gcc 9</p><h3 id="3-2-方法-2">3.2 方法 2</h3><p>定位到内核目录，使用 vim 编辑 <code>./scripts/dtc/dtc-lexer.lex.c</code>，</p><p>找到</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YYLTYPE yylloc;</span><br></pre></td></tr></table></figure><p>更改为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extern YYLTYPE yylloc;</span><br></pre></td></tr></table></figure><hr><h2 id="4-参考">4 参考</h2><ol><li><a href="https://github.com/BPI-SINOVOIP/BPI-M4-bsp/issues/4">‘multiple definition of yylloc’ error #4的解决方案</a></li><li><a href="https://github.com/Tomoms/android_kernel_oppo_msm8974/commit/11647f99b4de6bc460e106e876f72fc7af3e54a6.patch">补丁</a></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝牙开发之 IOS AMS</title>
      <link href="/e7b57229acd4/"/>
      <url>/e7b57229acd4/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><strong>本篇是针对 IOS 的 <code>AMS(Apple Media Service)</code> 进行记录并总结，如果对 <code>ANCS(Apple Notification Center Service)</code> 有兴趣，可以前往我的另一篇推文 <a href="https://www.nixgnauhcuy.cn/f0b6078aa8de/">蓝牙开发之 IOS ANCS</a>。</strong></p><p><strong>文章有误或有理解不到位的地方，望不吝指教，我会及时改正错误。</strong></p><h2 id="什么是-AMS">什么是 AMS</h2><h3 id="效果展示">效果展示</h3><blockquote><p><strong>播放暂停：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220412/1.gif" alt="播放暂停"></p></blockquote><blockquote><p><strong>进度获取：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220412/2.gif" alt="进度条"></p></blockquote><blockquote><p><strong>媒体控制：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220412/3.gif" alt="控制"></p></blockquote><blockquote><p><strong>切换音乐：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220412/4.gif" alt="切歌"></p></blockquote><blockquote><p><strong>音量加减：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220412/5.gif" alt="音量"></p></blockquote><h3 id="AMS-介绍">AMS 介绍</h3><p><strong><code>AMS</code> 全称 <code>Apple Media Service</code>(苹果媒体服务)，是提供给 BLE 设备的一种简单控制媒体应用程序的方式，并且用于获取已连接的 IOS 设备的媒体状态信息。</strong></p><h3 id="AMS-字节序和字节码">AMS 字节序和字节码</h3><p><strong>除非另有规定，否则通过 AMS 传输的所有数值都应是小端格式。</strong><br><strong>除非另有规定，否则通过 AMS 传输的所有字符串值都应是 UTF-8 编码的 unicode 字符所组成的。</strong></p><h3 id="依赖性">依赖性</h3><p><strong>除了标准的通用属性配置文件(GATT)子程序集外，AMS 没有任何依赖性。作为 GATT 客户端的设备在使用 AMS 时，可以自由访问和使用 iOS 设备提供的其他服务。</strong></p><h3 id="术语">术语</h3><ol><li><strong>Apple Media Service 称为 AMS</strong></li><li><strong>AMS 服务的发布者(也就是我们的 <code>iOS 设备</code>)应被称为媒体源(MS)。</strong></li><li><strong>AMS 服务的客户端(也就是我们的<code>蓝牙设备</code>)应被称为媒体控制器(MR)。</strong></li></ol><p><strong>下面统一使用 <code>媒体源</code> 和 <code>媒体控制器</code> 来描述 IOS 设备和蓝牙设备。</strong></p><hr><h2 id="AMS-Service-UUID">AMS Service UUID</h2><blockquote><p><strong>AMS 主服务(Service) UUID 为 89D3502B-0F36-433A-8EF4-C502AD55F8DC</strong></p><blockquote><p><strong>AMS 服务下的三个特征(Characteristic) UUID:</strong></p><p><strong>远程命令(Remote Command)(writeable, notifiable)</strong></p><blockquote><p><strong>9B3C81D8-57B1-4A8A-B8DF-0E56F7CA51C2</strong></p></blockquote><p><strong>实体更新(Entity Update)(writeable with response, notifiable)</strong></p><blockquote><p><strong>2F7CABCE-808D-411F-9A0C-BB92BA96C102</strong></p></blockquote><p><strong>实体属性(Entity Attribute)(readable, writeable)</strong></p><blockquote><p><strong>C6B2F38C-23AB-46D8-A6AB-A3A870BBD5D7</strong></p></blockquote></blockquote></blockquote><p><strong>下图展示了媒体源和媒体控制器间的服务设置：</strong></p><p><img src="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleMediaService_Reference/Art/Figure%202-2_2x.png" alt="服务设置"></p><ol><li>媒体控制器发现媒体源的 AMS 服务和特征</li><li>媒体控制器订阅媒体源实体更新</li><li>媒体控制器向媒体源写入需要监听的实体(EntityID)，例如监听歌曲变化等</li><li>当媒体源监听的实体(EntityID)有变动时，会通知其变动内容</li></ol><h2 id="AMS-Characteristic">AMS Characteristic</h2><h3 id="实体">实体</h3><p><strong>AMS 定义了 3 个不同的实体，每个实体都有一组不同的属性：</strong></p><ul><li><strong>播放器（Player）：当前活跃的媒体应用。该实体属性包括其名称、播放状态和播放音量等。</strong></li><li><strong>队列（Queue）：当前加载的播放队列。该实体的属性包括其队列数及其随机和重复模式等。</strong></li><li><strong>音轨（Track）：当前加载的音轨。该实体的属性包括其艺术家、标题和总的播放时间等。</strong></li></ul><blockquote><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td>EntityIDPlayer</td><td>0</td></tr><tr><td>EntityIDQueue</td><td>1</td></tr><tr><td>EntityIDTrack</td><td>2</td></tr><tr><td>Reserved</td><td>3-255</td></tr></tbody></table></blockquote><h4 id="播放器（Player）属性表">播放器（Player）属性表</h4><blockquote><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td>PlayerAttributeIDName</td><td>0</td></tr><tr><td>PlayerAttributeIDPlaybackInfo</td><td>1</td></tr><tr><td>PlayerAttributeIDVolume</td><td>2</td></tr><tr><td>Reserved</td><td>3-255</td></tr></tbody></table><ul><li><strong>PlayerAttributeIDName</strong>：包含应用的名称的字符串</li><li><strong>PlayerAttributeIDPlaybackInfo</strong>：用三个逗号作为分割，分别有：<ul><li>PlaybackState(播放状态)：表示播放状态的整数值字符串：<ul><li>PlaybackStatePaused(0)：暂停</li><li>PlaybackStatePlaying(1)：播放</li><li>PlaybackStateRewinding(2)：倒带</li><li>PlaybackStateFastForwarding(3)：快进</li></ul></li><li>PlaybackRate(播放速率)：播放速率的浮点值字符串</li><li>ElapsedTime(已用时间)：一个字符串，表示当前已用时间的浮点值（以秒为单位）</li></ul></li><li><strong>PlayerAttributeIDVolume</strong>：一个字符串，表示音量的浮点值，范围从（0-1）</li></ul></blockquote><p><strong>通过播放器属性，我们可以获取 <code>PlayerAttributeIDName</code> 当前音乐播放器的字符串，例如 IOS 手机使用的网易云音乐，那么媒体源推送的字符串转换为 unicode 编码后再转成中文，实际上就是“网易云音乐”，同理其他的音乐 APP，也会显示其相应的名称，非音乐 APP 是不会有推送的。</strong></p><p><strong><code>PlayerAttributeIDPlaybackInfo</code> 可以获取对应的播放状态、播放速率以及歌曲经过的时间，例如接收到推送为 <code>49 44 49 46 48 44 55 49 46 49 52 55 </code> 表示 <code>1,1.0,71.147</code>，当前状态为播放、速率 1.0、已过时间 71.147 秒。</strong></p><p><strong><code>PlayerAttributeIDVolume</code> 用于获取当前的音量浮点值，音量最大时为 <code>1</code>，最小时为 <code>0</code>，IOS 按一次音量按键，每次递进 <code>0.0625</code>。</strong></p><blockquote><p><strong>注：通过上面的信息，我们可以计算出当前经过的时间，公式如下：</strong></p><p>CurrentElapsedTime = ElapsedTime + ((TimeNow–TimePlaybackInfoWasReceived) * PlaybackRate)</p><p><strong>上方展示的音乐进度条，也是依靠该方式和歌曲总长度计算的</strong></p></blockquote><h4 id="队列（Queue）属性表">队列（Queue）属性表</h4><blockquote><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td>QueueAttributeIDIndex</td><td>0</td></tr><tr><td>QueueAttributeIDCount</td><td>1</td></tr><tr><td>QueueAttributeIDShuffleMode</td><td>2</td></tr><tr><td>QueueAttributeIDRepeatMode</td><td>3</td></tr><tr><td>Reserved</td><td>4-255</td></tr></tbody></table><ul><li><strong>QueueAttributeIDIndex</strong>：字符串，包含队列索引的整数值，从零开始</li><li><strong>QueueAttributeIDCount</strong>：字符串，包含队列中项目总数的整数值</li><li><strong>QueueAttributeIDShuffleMode</strong>：字符串，包含随机播放模式的整数值<ul><li>ShuffleModeOff(0)：非随机模式</li><li>ShuffleModeOne(1)：单曲随机(没见过这种模式)</li><li>ShuffleModeAll(2)：随机播放</li></ul></li><li><strong>QueueAttributeIDRepeatMode</strong>：字符串，包含重复模式的整数值<ul><li>RepeatModeOff(0)：非重复模式</li><li>RepeatModeOne(1)：单曲循环</li><li>RepeatModeAll(2)：列表循环</li></ul></li></ul></blockquote><p><strong>这一块好理解，就不过多解释了。切换播放器播放模式时，会通知对应的模式变化。</strong></p><h4 id="音轨（Track）属性表">音轨（Track）属性表</h4><blockquote><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td>TrackAttributeIDArtist</td><td>0</td></tr><tr><td>TrackAttributeIDAlbum</td><td>1</td></tr><tr><td>TrackAttributeIDTitle</td><td>2</td></tr><tr><td>TrackAttributeIDDuration</td><td>3</td></tr><tr><td>Reserved</td><td>4-255</td></tr></tbody></table><ul><li><strong>QueueAttributeIDIndex</strong>：字符串，包含艺术家姓名</li><li><strong>QueueAttributeIDCount</strong>：字符串，包含唱片集名称</li><li><strong>QueueAttributeIDShuffleMode</strong>：字符串，包含曲目标题</li><li><strong>QueueAttributeIDRepeatMode</strong>：字符串，包含轨道总持续时间的浮点值（以秒为单位）</li></ul></blockquote><p><strong>这一块包含了歌曲名、歌手名、专辑名称以及当前音乐总时长。音乐时长假设为 <code>03:02</code>，那么媒体控制器接收到的则是 <code>182.000</code> 秒。</strong></p><p><img src="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleMediaService_Reference/Art/Figure%202-1_2x.png" alt="媒体服务的典型操作"></p><p><strong>若媒体控制器订阅了 <code>Track</code> 属性，那么当媒体源播放音乐时，会将 A 音乐的曲名和歌手名推送给媒体控制器，每次有变动时，都会通知媒体控制器。</strong></p><h3 id="远程命令-Remote-Command">远程命令(Remote Command)</h3><p><strong>远程命令这个特征值是用于 <code>媒体控制器</code> 发送给 <code>媒体源</code> 的播放状态特征，例如播放/暂停、音量加/减、上/下一首、循环播放等。</strong></p><blockquote><p><strong><code>媒体控制器</code> 发送命令格式如下：</strong></p><table><thead><tr><th>Byte</th><th>Value</th></tr></thead><tbody><tr><td>1</td><td>RemoteCommandID</td></tr></tbody></table></blockquote><p><img src="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleMediaService_Reference/Art/Figure%202-3_2x.png" alt="远程命令"></p><p><strong><code>媒体控制器</code> 发现 <code>媒体源</code> AMS 服务后，可以通过发送控制命令，播放/暂停、音量加/减等操作<code>媒体源播放器</code>。</strong></p><p><strong>此特性还用于向 <code>媒体控制器</code> 报告当前 <code>媒体源</code> 支持的命令集，当媒体播放器支持的命令列表发生变化时，<code>媒体源</code> 会使用如下所示的格式，在该特征生产一条通知，通知中包括了支持的命令集：</strong></p><blockquote><p><strong><code>媒体源</code> 返回支持命令集格式如下：</strong></p><table><thead><tr><th>Byte</th><th>Value</th></tr></thead><tbody><tr><td>1</td><td>RemoteCommandID1</td></tr><tr><td>2</td><td>RemoteCommandID2</td></tr><tr><td>…</td><td>RemoteCommandIDx</td></tr></tbody></table></blockquote><blockquote><p><strong>RemoteCommandID</strong> 对应的命令集：</p><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td>RemoteCommandIDPlay</td><td>0</td></tr><tr><td>RemoteCommandIDPause</td><td>1</td></tr><tr><td>RemoteCommandIDTogglePlayPause</td><td>2</td></tr><tr><td>RemoteCommandIDNextTrack</td><td>3</td></tr><tr><td>RemoteCommandIDPreviousTrack</td><td>4</td></tr><tr><td>RemoteCommandIDVolumeUp</td><td>5</td></tr><tr><td>RemoteCommandIDVolumeDown</td><td>6</td></tr><tr><td>RemoteCommandIDAdvanceRepeatMode</td><td>7</td></tr><tr><td>RemoteCommandIDAdvanceShuffleMode</td><td>8</td></tr><tr><td>RemoteCommandIDSkipForward</td><td>9</td></tr><tr><td>RemoteCommandIDSkipBackward</td><td>10</td></tr><tr><td>RemoteCommandIDLikeTrack</td><td>11</td></tr><tr><td>RemoteCommandIDDislikeTrack</td><td>12</td></tr><tr><td>RemoteCommandIDBookmarkTrack</td><td>13</td></tr><tr><td>Reserved</td><td>14-255</td></tr></tbody></table></blockquote><p><strong>通过该命令集，我们的蓝牙设备就可以对 IOS 设备的媒体播放器进行控制，该方式的音乐控制，相比较 HID，我觉得更优，因为 HID 控制只能在媒体播放器界面进行控制，模拟按键的方式去控制播放，并且 HID 的方式不能获取歌曲名、歌曲进度等，所以相较下，如果用于控制 IOS 媒体播放器，那么使用 AMS 是最优的方式。</strong></p><h3 id="实体更新-Entity-Update">实体更新(Entity Update)</h3><p><strong>实体更新特性是 <code>媒体控制器</code> 通知 <code>媒体源</code> 其所需实体/属性对的特征，并在发生更改时告知 <code>媒体控制器</code>，例如 <code>媒体源</code> 媒体播放器变动、当前歌曲变更等。</strong></p><p><strong>默认情况下，<code>媒体控制器</code> 不会接收有关实体属性的任何信息。所以，为了接收此数据，<code>媒体控制器</code> 首先需要订阅有关实体更新特征的 GATT 通知。然后，<code>媒体控制器</code> 将命令写入实体更新特征，以通知 <code>媒体源</code> 它想知道哪个实体/属性对值。</strong></p><blockquote><p><strong><code>媒体控制器</code> 发送的实体更新命令的格式如下所示：</strong></p><ul><li><strong><a href="#%E5%AE%9E%E4%BD%93">EntityID</a>：后续属性所对应的实体</strong></li><li><strong>AttributeID：<code>媒体控制器</code> 所需的属性列表</strong></li></ul><table><thead><tr><th>Byte</th><th>Value</th></tr></thead><tbody><tr><td>1</td><td>EntityID</td></tr><tr><td>2</td><td>AttributeID1</td></tr><tr><td>3</td><td>AttributeID2</td></tr><tr><td>…</td><td>AttributeIDx</td></tr></tbody></table></blockquote><p><strong>写入成功后， <code>媒体控制器</code> 将立即开始获取其监听的实体/属性对的值。</strong></p><blockquote><p><strong>媒体源通知格式如下：</strong></p><ul><li><strong><a href="#%E5%AE%9E%E4%BD%93">EntityID</a>：后续属性所对应的实体。</strong></li><li><strong>AttributeID：在通知中发送其值的属性。</strong></li><li><strong>EntityUpdateFlags：一个位掩码，其设置位为 <code>媒体控制器</code> 提供有关通知的特定信息。</strong></li><li><strong>Value：一个字符串，对应于与给定属性关联的值。</strong></li></ul><table><thead><tr><th>Byte</th><th>Value</th></tr></thead><tbody><tr><td>1</td><td>EntityID</td></tr><tr><td>2</td><td>AttributeID</td></tr><tr><td>3</td><td>EntityUpdateFlags</td></tr><tr><td>4…</td><td>Value</td></tr></tbody></table></blockquote><h3 id="实体属性-Entity-Attribute">实体属性(Entity Attribute)</h3><p><strong>实体属性特征是 <code>媒体控制器</code> 检索属性拓展值的特征。理想情况下，仅当实体/属性对的值在相应的实体更新通知中标记为已截断，并且 <code>媒体控制器</code> 希望显示更多关联值时，才应使用此特征。</strong></p><p><strong>要检索特定实体/属性对的完整值，<code>媒体控制器</code> 必须先通过写入实体属性特征来发送命令。</strong></p><blockquote><p><strong>实体属性命令的格式如下所示：</strong></p><table><thead><tr><th>Byte</th><th>Value</th></tr></thead><tbody><tr><td>1</td><td>EntityID</td></tr><tr><td>2</td><td>AttributeID</td></tr></tbody></table></blockquote><p><img src="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleMediaService_Reference/Art/Figure%202-4_2x.png" alt="检索截断值的完整值"></p><p><strong>媒体源需要通知的字符过长，则会截断发送给媒体控制器，若媒体控制器需要被截断的部分，则需要通过写入实体属性命令，将被截断的部分发送给媒体控制器。</strong></p><hr><h2 id="其他">其他</h2><h3 id="错误代码-Error-Codes">错误代码(Error Codes)</h3><p><strong>写入任何特征或读取实体属性时，<code>媒体控制器</code> 可能会收到以下特定于 AMS 的错误代码：</strong></p><ul><li><strong>无效状态 (0xA0): <code>媒体控制器</code> 未正确设置，例如，写入实体更新或实体属性时，未先订阅实体更新特征通知。</strong></li><li><strong>无效的命令 (0xA1): 该命令的格式不正确。</strong></li><li><strong>缺省属性 (0xA2): 相应属性为空。</strong></li></ul><h3 id="结语">结语</h3><p><strong>关于蓝牙的 IOS AMS 的总结就分享到这里了，如果在文中发现有误，欢迎指出，我会及时修改的，提前感谢🙏！</strong></p><h3 id="参阅">参阅</h3><ul><li><a href="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleMediaService_Reference/Introduction/Introduction.html">Apple Media Service Reference</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 蓝牙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BLE </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> IOS </tag>
            
            <tag> AMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyCharm 2021 安装和破解</title>
      <link href="/4a8a40c466f6/"/>
      <url>/4a8a40c466f6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Thought correctly,life unbeaten.</p></blockquote><h2 id="前言">前言</h2><p><strong>😄本文是 PyCharm 2021 软件安装和破解流程的记录！</strong></p><p><strong>所用到的软件安装包、汉化和激活码可关注我的公众号回复 <code>10005</code> 获取。</strong></p><hr><h2 id="PyCharm-安装及破解">PyCharm 安装及破解</h2><p><strong>将下载的压缩包 PyCharm 2021.rar 解压，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/1.png" alt=""></p><p><strong>右键以管理员身份运行 <code>pycharm-professional-2021.1.3.exe</code></strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/2.png" alt=""></p><p><strong>开始安装该软件，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/3.png" alt=""></p><p><strong>选择安装路径，这里我没有放在 C 盘，放在我自己定义的路径中，嫌麻烦可以直接安装在 C 盘，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/4.png" alt=""></p><p><strong>勾选 <code>Add launchers dir to the PATH</code>，其他选项可以根据自身需求，勾选需要的选项，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/5.png" alt=""></p><p><strong>点击 <code>Install</code> 开始安装，等待进度条走完，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/6.png" alt=""></p><p><strong>勾选 <code>I want to manually reboot later</code> 先不重启，弄完再重启，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/7.png" alt=""></p><p><strong>到这里，软件已经安装完成了，先不着急运行，回到解压的目录，运行 <code>Block Host [ Run Administrator ].cmd</code>，需要以管理员权限运行，因为 hosts 文件在 C 盘内，将 <code>bs.studycoder.com</code> 加入 hosts 文件屏蔽。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/9.png" alt=""></p><p><strong>接着，将 <code>zh.211.295.jar</code> 放入 PyCharm 安装目录的 <code>lib</code> 文件夹中，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/10.png" alt=""></p><p><strong>接下来，我们就可以运行 PyCharm 软件，如果弹窗用户协议告知，就勾选同意即可，没有可以跳过该步骤，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/11.png" alt=""></p><p><strong>如果有要求数据共享，就拒绝发送，没有可以跳过该步骤，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/12.png" alt=""></p><p><strong>打开软件后，选择 <code>Evaluate for free</code>，先选择免费试用 30 天，</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/13.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/14.png" alt=""></p><p><strong>点击使用后进入欢迎界面，先安装激活补丁包和汉化插件，进入 <code>Plugins</code>，点击齿轮，选择 <code>Install Plugin from Disk...</code></strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/15.png" alt=""></p><p><strong>将压缩包的 <code>BetterIntelliJ-1.20.jar</code> 拖入，软件会自动定位到该路径，然后选择 OK 即可。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/16.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/17.png" alt=""></p><p><strong>然后将 <code>BetterIntelliJ-1.20.jar</code> 放入到软件的安装目录(也可以放在其他地方)，选择左下角的齿轮，点击<code>Edit Custom VM Options...</code>，将 <code>-javaagent:D:/xxx/xxx/BetterIntelliJ-1.20.jar</code> 填入，这里要注意的是，路径不要填错了，填入你放置 <code>BetterIntelliJ-1.20.jar</code> 的正确路径，确认没问题就保存即可。</strong><br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/18.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/19.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/20.png" alt=""></p><p><strong>接下来，添加汉化插件，同样的进入 <code>Plugins</code>，点击齿轮，选择 <code>Install Plugin from Disk...</code></strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/21.png" alt=""></p><p><strong>选择汉化插件 <code>zh.211.295.jar</code> 路径，选择压缩包的，或者拖入安装路径中 lib 文件夹的都可以，选好路径后点击 OK，会出现下图的 <code>Chinese(S....</code> 说明安装成功了。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/22.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/23.png" alt=""></p><p><strong>重启软件后，软件为中文环境，点击左下角齿轮，点击<code>管理许可证...</code>，点击添加<code>新的许可证</code></strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/24.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/25.png" alt=""></p><p><strong>将解压文件中的激活码，复制到<code>激活码</code>中，点击激活，激活成功后，显示<code>有效期至 12月 31，2099</code>，说明激活成功，接下来就可以愉快的使用该软件了。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/26.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20220312/27.png" alt=""></p><hr>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字节序-大小端</title>
      <link href="/2e85edb981c3/"/>
      <url>/2e85edb981c3/</url>
      
        <content type="html"><![CDATA[<blockquote><p>“Computers are useless.They can only give you answers.” —— Pablo Picasso</p></blockquote><h2 id="字节序">字节序</h2><h3 id="endian-起源">endian 起源</h3><blockquote><p><em><strong><a href="https://zh.wikipedia.org/wiki/%E5%AD%97%E8%8A%82%E5%BA%8F">摘自维基百科</a></strong></em></p><p><strong>“endian”一词来源于十八世纪爱尔兰作家乔纳森·斯威夫特（Jonathan Swift）的小说《格列佛游记》（Gulliver’s Travels）。小说中，小人国为水煮蛋该从大的一端（Big-End）剥开还是小的一端（Little-End）剥开而争论，争论的双方分别被称为“大端派”和“小端派”。以下是1726年关于大小端之争历史的描述：</strong></p><p><em>“我下面要告诉你的是，Lilliput 和 Blefuscu 这两大强国在过去36个月里一直在苦战。战争开始是由于以下的原因：我们大家都认为，吃鸡蛋前，原始的方法是打破鸡蛋较大的一端，可是当今皇帝的祖父小时候吃鸡蛋，一次按古法打鸡蛋时碰巧将一个手指弄破了。因此他的父亲，当时的皇帝，就下了一道敕令，命令全体臣民吃鸡蛋时打破鸡蛋较小的一端，违令者重罚。老百姓们对这项命令极其反感。历史告诉我们，由此曾经发生过6次叛乱，其中一个皇帝送了命，另一个丢了王位。这些叛乱大多都是由 Blefuscu 的国王大臣们煽动起来的。叛乱平息后，流亡的人总是逃到那个帝国去寻求避难。据估计，先后几次有11000人情愿受死也不肯去打破鸡蛋较小的一端。关于这一争端，曾出版过几百本大部著作，不过大端派的书一直是受禁的，法律也规定该派任何人不得做官。”</em><br>                         ——《格列夫游记》 第一卷第4章 蒋剑锋（译）</p></blockquote><p><strong>1980年，丹尼·科恩（Danny Cohen），一位网络协议的早期开发者，在其著名的论文&quot;On Holy Wars and a Plea for Peace&quot;中，为平息一场关于字节该以什么样的顺序传送的争论，而第一次引用了该词。</strong></p><hr><h3 id="字节序概念">字节序概念</h3><p><strong>字节序(Endianness)是一个术语，它描述了字节序列在计算机内存中的存储顺序。字节的排列方式有两个通用的规则。例如，一个多字节数据的低位存储在低存储地址处，高位放在高存储地址处，则被称为小端(little-endian)，相反，将高位存储在低存储地址处，低位放在高存储地址处，则称为大端(big-endian)。</strong></p><p><strong>在应用中，字节序是一个必须被考虑的因素，因为不同的机器类型可能采用不同标准的字节序，所以在实际应用中，必须知道要采用哪种字节排列方式。</strong></p><hr><h2 id="大端与小端">大端与小端</h2><h3 id="概念">概念</h3><p><strong>大端，是指在多字节数据类型中，将数据的高字节保存在内存的低地址中，而数据的低字节保存在高地址中。</strong><br><strong>小端，是指在多字节数据类型中，将数据的高字节保存在内存的高地址中，而数据的低字节保存在低地址中。</strong></p><p><em>假设一个整数被存储为 4 个字节（32 位），那么一个值为 0x01234567 的变量 y 存储时被分为四个字节 0x01、0x23、0x45、0x67，在不同字节序大端或小端规则中，它将以相反的顺序存储：</em></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20211204/00.png" alt=""></p><p>如上图，地址从低地址 0x100 往 高地址 0x103 递增，大端规则中，多字节数据的高位放在了低地址中，而小端规则中，则顺序相反，将多字节数据的高位放在了高地址中。</p><hr><h3 id="哪个更好">哪个更好</h3><ul><li>小端<ul><li>更易于实现加、减、乘这类常用运算</li><li>在特定场合能减少对数据的读取次数</li><li>对于低位数据的处理更友好，不重要的字节保留在远处，新的字节则添加到更高地址。</li></ul></li><li>大端<ul><li>对从左到右阅读更为友好，以正向的方式存储，对网络通信数据包的处理更友好(网络通信的TCP/IP协议中字节序就是按照大端规定的)</li><li>更易于实现对同等长度变量做比较运算和除法运算</li><li>对符号位的判断更便捷(由于高位字节在前，可以通过查看偏移量零处的字节来查看数字是正数还是负数，不必知道数字有多长，也不必跳过任何字节来查找包含符号信息的字节)</li></ul></li></ul><p><strong>小端和大端哪个更好是无法达成一致的，就像《格列佛游记》中鸡蛋应该在哪一端被打开一样，没有技术理由来规定我们只使用一种字节的排序约定，只要选择并始终如一地遵守其中一种约定，选择就是任意的。</strong></p><hr><h3 id="如何知道当前属于大端还是小端">如何知道当前属于大端还是小端</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">show_mem_rep</span><span class="params">(<span class="type">char</span> *start, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %.2x&quot;</span>, start[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0x01234567</span>;</span><br><span class="line">    show_mem_rep((<span class="type">char</span> *)&amp;i, <span class="keyword">sizeof</span>(i));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>上述程序在小端机器上运行时，输出“67 45 23 01”，而在大端机器上运行时，输出“01 23 45 67”。</strong></p><hr><h3 id="大小端如何相互转化">大小端如何相互转化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//16bit</span><br><span class="line">#define Convert16(A) ((((uint16)(A) &amp; 0xff00) &gt;&gt; 8) | (((uint16)(A) &amp; 0x00ff) &lt;&lt; 8))</span><br><span class="line">//32bit</span><br><span class="line">#define Convert32(A) ((((uint32)(A) &amp; 0xff000000)&gt;&gt;24) | (((uint32)(A) &amp; 0x00ff0000)&gt;&gt;8) | (((uint32)(A) &amp; 0x0000ff00)&lt;&lt;8) | (((uint32)(A) &amp; 0x000000ff)&lt;&lt;24))</span><br></pre></td></tr></table></figure><hr>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 获取已连接wifi密码工具</title>
      <link href="/93bdfa3a6163/"/>
      <url>/93bdfa3a6163/</url>
      
        <content type="html"><![CDATA[<blockquote><p>技术是描述某种尚未发挥作用的东西的词汇. —— Douglas Adams</p></blockquote><h2 id="前言">前言</h2><p><strong>😄鸽王回归，鸽了好久没发文章，难得有空，制作点简单的小工具！</strong></p><hr><h2 id="原理">原理</h2><p><strong>制作工具前，我们先了解下获取已连接过的 WIFI 账号密码的原理。</strong></p><p><strong><code>win+R</code> 打开我们的 cmd 命令行窗口，输入 <code>netsh wlan show network</code>，可以获取当前网络接口下可连接的所有 WIFI 名称，如果想更多的信息，则输入 <code>netsh wlan show networks mode=bssid</code>，来显示当前周边有效无线网络的相关信息（网卡地址、加密类型、信号强度、无线电类型、占用频道、基本速率等信息）。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/00.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/01.png" alt=""></p><p><strong>但是这些信息还不包括我们需要的 WIFI 名称及密码，所以我们再进一步，输入 <code>netsh wlan show profiles</code>，显示当前本机保存的 <code>profiles</code>，随后再单独对某一个配置文件进行查询，如图片中的 <code>nixgnauhcuy</code>，输入 <code>netsh wlan show profiles nixgnauhcuy key=clear</code>，在安全设置中的关键内容，可以看到我已连接的 WIFI <code>nixgnauhcuy</code> 的密码 <code>123456789</code>。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/02.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/03.png" alt=""></p><p><strong>通过上面的方式，我们就查到了单个 WIFI 的信息，那么剩下的就是将其遍历，获取本机下所有已连接设备的账号密码。</strong></p><hr><h2 id="UI-界面">UI 界面</h2><p><strong>原理我们已经琢磨清楚了，那么我们就先来设计我们工具的界面 UI，再来写逻辑。（因为是做工具，所以我才会多此一举，做多一步，需要的可以熟悉熟悉 QT，不需要的可以跳到下一步）</strong></p><p><strong>UI 界面我还是用 Qt Designer 来设计。界面功能比较简单，二个 Button 控件及一个 TabView 控件来实现，点击 Button 后获取本机下已连接账号和密码显示在 TabView 中，然后另一个 Button 将 TabView 的内容输出到表格中。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/04.png" alt=""></p><h2 id="功能实现">功能实现</h2><p><strong>因为原理相同，并且功能简单，所以将 UI 工具代码和不带 UI 的代码一起完成。</strong></p><h3 id="UI-版">UI 版</h3><p><strong>将做好的 UI 文件保存到工程下，这里我将文件命名为 <code>wifi_tool.ui</code>,随后将 <code>.ui</code> 文件转成 <code>Ui_wifi_tool.py</code>.</strong></p><p><strong>Ui_wifi_tool.py</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from PyQt5 import QtCore, QtGui, QtWidgets</span><br><span class="line"></span><br><span class="line">class Ui_MainWindow(object):</span><br><span class="line">    def setupUi(self, MainWindow):</span><br><span class="line">        MainWindow.setObjectName(&quot;MainWindow&quot;)</span><br><span class="line">        MainWindow.resize(432, 270)</span><br><span class="line">        self.centralwidget = QtWidgets.QWidget(MainWindow)</span><br><span class="line">        self.centralwidget.setObjectName(&quot;centralwidget&quot;)</span><br><span class="line">        self.tableView = QtWidgets.QTableView(self.centralwidget)</span><br><span class="line">        self.tableView.setGeometry(QtCore.QRect(20, 60, 391, 192))</span><br><span class="line">        self.tableView.setObjectName(&quot;tableView&quot;)</span><br><span class="line">        self.getButton = QtWidgets.QPushButton(self.centralwidget)</span><br><span class="line">        self.getButton.setGeometry(QtCore.QRect(20, 20, 75, 23))</span><br><span class="line">        self.getButton.setObjectName(&quot;getButton&quot;)</span><br><span class="line">        self.saveButton = QtWidgets.QPushButton(self.centralwidget)</span><br><span class="line">        self.saveButton.setGeometry(QtCore.QRect(340, 20, 75, 23))</span><br><span class="line">        self.saveButton.setObjectName(&quot;saveButton&quot;)</span><br><span class="line">        MainWindow.setCentralWidget(self.centralwidget)</span><br><span class="line"></span><br><span class="line">        self.retranslateUi(MainWindow)</span><br><span class="line">        QtCore.QMetaObject.connectSlotsByName(MainWindow)</span><br><span class="line"></span><br><span class="line">    def retranslateUi(self, MainWindow):</span><br><span class="line">        _translate = QtCore.QCoreApplication.translate</span><br><span class="line">        MainWindow.setWindowTitle(_translate(&quot;MainWindow&quot;, &quot;wifi tool&quot;))</span><br><span class="line">        self.getButton.setText(_translate(&quot;MainWindow&quot;, &quot;获取&quot;))</span><br><span class="line">        self.saveButton.setText(_translate(&quot;MainWindow&quot;, &quot;保存&quot;))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>随后在工程中编写我们的 main_ui.py，运行看看效果，</strong></p><p><strong>main_ui.py 代码如下:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">from Ui_wifi_tool import Ui_MainWindow</span><br><span class="line">from PyQt5.QtWidgets import (QApplication, QMainWindow)</span><br><span class="line"></span><br><span class="line">class MyPyQT_Form(QMainWindow, Ui_MainWindow):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super().__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    my_pyqt_form = MyPyQT_Form()</span><br><span class="line">    my_pyqt_form.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p><strong>运行效果如下：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/05.png" alt=""></p><p><strong>开始编写我们的逻辑：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">self.getButton.clicked.connect(self.get_wifi_info_butt)</span><br><span class="line"></span><br><span class="line">def get_wifi_info_butt(self):</span><br><span class="line">        # 获取本机下存在的 profile</span><br><span class="line">        profiles = subprocess.run([&quot;netsh&quot;, &quot;wlan&quot;, &quot;show&quot;, &quot;profiles&quot;], capture_output=True).stdout.decode(&#x27;gbk&#x27;)</span><br><span class="line"></span><br><span class="line">        # 将 profile 中的 wifi 名取出</span><br><span class="line">        wifi_names = (re.findall(&quot;所有用户配置文件 : (.*)\r&quot;, profiles))</span><br><span class="line">        row = 0</span><br><span class="line">        for wifi_name in wifi_names:</span><br><span class="line">            column = 0</span><br><span class="line">            item=QStandardItem(&#x27;%s&#x27;% wifi_name)</span><br><span class="line">            self.model.setItem(row, column, item)</span><br><span class="line">            self.worksheet.write(row, column, wifi_name)</span><br><span class="line"></span><br><span class="line">            # 获取 profile 中的密码</span><br><span class="line">            profile_info = subprocess.run([&quot;netsh&quot;, &quot;wlan&quot;, &quot;show&quot;, &quot;profiles&quot;, wifi_name, &quot;key=clear&quot;], capture_output=True).stdout.decode(&#x27;gbk&#x27;)</span><br><span class="line"></span><br><span class="line">            # 将 profile 中的 wifi 密码取出</span><br><span class="line">            key = (re.findall(&quot;关键内容            : (.*)\r&quot;, profile_info))</span><br><span class="line">            column += 1</span><br><span class="line">            item=QStandardItem(&#x27;%s&#x27;% str(key[0]))</span><br><span class="line">            self.model.setItem(row, column, item)</span><br><span class="line">            self.worksheet.write(row, column, str(key[0]))</span><br><span class="line">            row += 1</span><br></pre></td></tr></table></figure><p><strong>上面主要运用 subprocess 模块，执行我们上述原理的指令，捕获指令执行后的输出，用正则表达式取出我们需要的内容，也就是账号及其密码，其次，还将账号密码写入 TabView 和表格中。</strong></p><p><strong>最后增加保存控件的逻辑，也就是保存账号密码的内容到表格 <code>wifi_key.xls</code> 中。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">self.saveButton.clicked.connect(self.save_wifi_info_butt)</span><br><span class="line"></span><br><span class="line">def save_wifi_info_butt(self):</span><br><span class="line">        self.workbook.save(&#x27;wifi_key.xls&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/06.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/07.png" alt=""></p><h3 id="非-UI-版">非 UI 版</h3><p><strong>非 UI 版逻辑同上，只是少了界面控件的操作，具体代码如下：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import subprocess</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    # 获取本机下存在的 profile</span><br><span class="line">    profiles = subprocess.run([&quot;netsh&quot;, &quot;wlan&quot;, &quot;show&quot;, &quot;profiles&quot;], shell=False, capture_output=True).stdout.decode(&#x27;gbk&#x27;)</span><br><span class="line"></span><br><span class="line">    # 将 profile 中的 wifi 名取出</span><br><span class="line">    wifi_names = (re.findall(&quot;所有用户配置文件 : (.*)\r&quot;, profiles))</span><br><span class="line">    for wifi_name in wifi_names:</span><br><span class="line"></span><br><span class="line">        # 获取 profile 中的密码</span><br><span class="line">        profile_info = subprocess.run([&quot;netsh&quot;, &quot;wlan&quot;, &quot;show&quot;, &quot;profiles&quot;, wifi_name, &quot;key=clear&quot;], shell=False, capture_output=True).stdout.decode(&#x27;gbk&#x27;)</span><br><span class="line"></span><br><span class="line">        # 将 profile 中的 wifi 密码取出</span><br><span class="line">        key = (re.findall(&quot;关键内容            : (.*)\r&quot;, profile_info))</span><br><span class="line"></span><br><span class="line">        print(&#x27;name = &#x27; + wifi_name + &#x27;, password =&#x27;, key[0])</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210807/08.png" alt=""></p><h2 id="结语">结语</h2><p><strong>关于本篇的相关代码已经上传到 github 上去了，有兴趣的可以访问 <a href="https://github.com/nixgnauhcuy/python_wifi_tool">python_wifi_tool</a> 查看，浏览的同时也可以在该 github 仓库中点个 Star 支持我一下😄。</strong></p><p><strong>与本文相关的内容还有：</strong><br><a href="https://www.nixgnauhcuy.cn/5f9e4d2c65bf/">python 开发环境搭建</a><br><a href="https://www.nixgnauhcuy.cn/20993293a762/">python 制作串口工具（一）</a><br><a href="https://www.nixgnauhcuy.cn/20993293a762/">python 制作串口工具（二）</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言位域</title>
      <link href="/72de75b96592/"/>
      <url>/72de75b96592/</url>
      
        <content type="html"><![CDATA[<h2 id="位域概述">位域概述</h2><p><strong>位域是为了将所需的存储量减少到最小而设计的，有些数据在存储时并不需要占用一个完整的字节，只需占用一个或多个 bit 位。基于这种考虑，将相同的存储位置划分为“位字段”，而不是每个位字段指定专用的位置。</strong></p><blockquote><p><strong>摘自维基百科：</strong></p><p><strong>位段（或称“位域”，Bit field）为一种数据结构，可以把数据以位的形式紧凑的储存，并允许程序员对此结构的位进行操作。这种数据结构的好处：</strong></p><ul><li><strong>可以使数据单元节省储存空间，当程序需要成千上万个数据单元时，这种方法就显得尤为重要。</strong></li><li><strong>位段可以很方便的访问一个整数值的部分内容从而可以简化程序源代码。</strong></li></ul></blockquote><h2 id="位域的运用">位域的运用</h2><p><strong>先来看个 Demo：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">demo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> a:<span class="number">4</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b:<span class="number">3</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> c:<span class="number">1</span>;</span><br><span class="line">&#125; <span class="type">demo_t</span>;</span><br></pre></td></tr></table></figure><p><strong>在结构体中声明位域要使用 <code>:</code> 运算符，后边的数字用于限定结构体成员变量所占用的位数。</strong></p><p><strong>上边的例子将创建三个宽度为 <code>4</code>、<code>3</code> 和 <code>1</code> 位的无符号字符。位字段的作用基本上是屏蔽按位操作以访问其字段的值。它们实际上是具有特定长度（demo 占用 1 字节）的内存地址。</strong></p><p><strong>若结构体 Demo 不声明位域的话，成员 a、b 和 c 应占用 3 个字节，但是实际上我们将其设置为宽度为 <code>4</code>、<code>3</code> 和 <code>1</code> 的位，所以总得到的其占用长度为 1 个字节（4bit + 3bit + 1bit = 8bit = 1byte）。</strong></p><p><strong>我们写个程序验证一下：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">demo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> a:<span class="number">4</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b:<span class="number">3</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> c:<span class="number">1</span>;</span><br><span class="line">&#125; <span class="type">demo_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">demo1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> a;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> c;</span><br><span class="line">&#125; <span class="type">demo1_t</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo = %d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">demo_t</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo1 = %d\n&quot;</span>, <span class="keyword">sizeof</span>(<span class="type">demo1_t</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出结果为：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">demo = 1</span><br><span class="line">demo1 = 3</span><br></pre></td></tr></table></figure><p><strong><code>unsigned char</code> 占用 1 字节，所以将成员变量 <code>a</code> 设置位数超过 8 位时会报错，如：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">demo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> a:<span class="number">9</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b:<span class="number">3</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> c:<span class="number">1</span>;</span><br><span class="line">&#125; <span class="type">demo_t</span>;</span><br></pre></td></tr></table></figure><p><strong>编译时会报错：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error C2034: &#x27;a&#x27; : type of bit field too small for number of bits</span><br></pre></td></tr></table></figure><p><strong>并且，我们改变了成员变量的占用字数，那么会影响到该变量的取值范围，如：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">demo</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> a:<span class="number">4</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b:<span class="number">3</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> c:<span class="number">1</span>;</span><br><span class="line">&#125; <span class="type">demo_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">demo1</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> a;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> b;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> c;</span><br><span class="line">&#125; <span class="type">demo1_t</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">demo_t</span> demo1;</span><br><span class="line">    <span class="type">demo1_t</span> demo2;</span><br><span class="line"></span><br><span class="line">    demo1.a = <span class="number">255</span>;</span><br><span class="line">    demo1.b = <span class="number">255</span>;</span><br><span class="line">    demo1.c = <span class="number">255</span>;</span><br><span class="line">    demo2.a = <span class="number">255</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo1.a = %d\n&quot;</span>, demo1.a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo1.b = %d\n&quot;</span>, demo1.b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo1.c = %d\n&quot;</span>, demo1.c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo2.a = %d\n&quot;</span>, demo2.a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出结果为：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">demo1.a = 15</span><br><span class="line">demo1.b = 7</span><br><span class="line">demo1.c = 1</span><br><span class="line">demo2.a = 255</span><br></pre></td></tr></table></figure><p><strong>因为 <code>demo2.a</code> 占了 8 位二进制，最大能存储 255，而 <code>demo1.a</code> 占了 4 位二进制，最大只能存储 15，多的位都被舍弃了，同理 <code>demo1.b</code> 和 <code>demo1.c</code> 也因为所占位数小了，而只能存储该二进制的最大位值。</strong></p><table><thead><tr><th style="text-align:center">\bit</th><th style="text-align:center">7</th><th style="text-align:center">6</th><th style="text-align:center">5</th><th style="text-align:center">4</th><th style="text-align:center">3</th><th style="text-align:center">2</th><th style="text-align:center">1</th><th style="text-align:center">0</th><th style="text-align:center">value</th></tr></thead><tbody><tr><td style="text-align:center">255</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">255</td></tr><tr><td style="text-align:center">demo2.a</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">255</td></tr><tr><td style="text-align:center">demo1.a</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">15</td></tr><tr><td style="text-align:center">demo1.b</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">1</td><td style="text-align:center">7</td></tr><tr><td style="text-align:center">demo1.c</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">\</td><td style="text-align:center">1</td><td style="text-align:center">1</td></tr></tbody></table><p><strong>所以使用位域时，需注意该情况，避免不必要的排错麻烦。</strong></p><p><strong>当相邻成员使用和不使用位域的情况，我们先看使用位域的两种不同结构：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">demo_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> a:<span class="number">12</span>;</span><br><span class="line">    <span class="type">int</span> b:<span class="number">32</span>;</span><br><span class="line">    <span class="type">int</span> c:<span class="number">4</span>;</span><br><span class="line">&#125;demo;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">demo1_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> a:<span class="number">12</span>;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="type">int</span> c:<span class="number">4</span>;</span><br><span class="line">&#125;demo1;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo = %d\n&quot;</span>, <span class="keyword">sizeof</span>(demo));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo1 = %d\n&quot;</span>, <span class="keyword">sizeof</span>(demo1));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">demo = 12</span><br><span class="line">demo1 = 12</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">demo_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> a:<span class="number">12</span>;</span><br><span class="line">    <span class="type">int</span> b:<span class="number">32</span>;</span><br><span class="line">    <span class="type">int</span> c:<span class="number">4</span>;</span><br><span class="line">&#125;__attribute__((packed)) demo;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">demo1_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> a:<span class="number">12</span>;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="type">int</span> c:<span class="number">4</span>;</span><br><span class="line">&#125;__attribute__((packed)) demo1;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo = %d\n&quot;</span>, <span class="keyword">sizeof</span>(demo));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo1 = %d\n&quot;</span>, <span class="keyword">sizeof</span>(demo1));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">demo = 6</span><br><span class="line">demo1 = 7</span><br></pre></td></tr></table></figure><p><strong>上面两个例子中，当使用 <code>__attribute__((packed))</code> 告诉编译器取消结构在编译过程中的优化对齐，按照实际占用字节数进行对齐时，两种相同的结构，输出的大小却不一样。</strong></p><p><strong>因为结构体 <code>demo</code> 中具有三个连续的位域，而 <code>demo1</code> 中是位域-非位域-位域，连续的位域会合并存储，而位域后紧跟着非位域的位字段时，必须与字节边界对齐，所以编译器无法将非位域的 <code>int b</code> 打包在位域中。若不设置 <code>__attribute__((packed))</code>，则编译器会优化对齐，所以获取实际大小时，输出的大小是相同的。</strong></p><p><strong>下图展示了实际存储的结构：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210406/00.png" alt=""></p><h2 id="无名位域">无名位域</h2><p><strong>如果位域的定义没有给出标识符名字，那么这是无名位域，无法被初始化。无名位域用于填充（padding）内存布局。只有无名位域的比特数可以为 0。这种占 0 比特的无名位域，用于强迫下一个位域在内存分配边界对齐。</strong></p><p><strong>同样拿刚才的 demo 演示：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">demo_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> a:<span class="number">12</span>;</span><br><span class="line">    <span class="type">int</span>  :<span class="number">4</span>;</span><br><span class="line">    <span class="type">int</span> b:<span class="number">32</span>;</span><br><span class="line">    <span class="type">int</span> c:<span class="number">4</span>;</span><br><span class="line">&#125;__attribute__((packed)) demo;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">demo1_t</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> a:<span class="number">12</span>;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    <span class="type">int</span> c:<span class="number">4</span>;</span><br><span class="line">&#125;__attribute__((packed)) demo1;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo = %d\n&quot;</span>, <span class="keyword">sizeof</span>(demo));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;demo1 = %d\n&quot;</span>, <span class="keyword">sizeof</span>(demo1));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">demo = 7</span><br><span class="line">demo1 = 7</span><br></pre></td></tr></table></figure><p><strong>无名位域一般用来作填充或者调整成员位置。因为没有名称，无名位域是不能使用的。我们在结构体 <code>demo</code> 中使用无名来使得成员 <code>a</code> 刚好与字节边界对齐，所以成员 <code>b</code> 可以紧跟着成员 <code>a</code>，这样使得 <code>demo</code> 和 <code>demo1</code> 存储的结构一致，所以他们的大小也就相等了。</strong></p><p><strong>下图展示了实际存储的结构：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210406/01.png" alt=""></p><h2 id="位域的优缺点">位域的优缺点</h2><p><strong>优点</strong></p><ul><li><strong>将由几个 bit 组成的对象打包成一个整数。这使得读/写和其他操作就像它们是 int 一样工作。</strong></li><li><strong>在编写加密/解密的例程时，使用位域会有奇效。</strong></li><li><strong>节省存储空间，而且处理简便。 这样就可以把几个不同的对象用一个字节的二进制位域来表示。</strong></li><li><strong>…</strong></li></ul><p><strong>缺点</strong></p><ul><li><strong>不可移植，因为字节(byte)中的位(bit)和字(word)中的字节(byte)的放置顺序是取决于编译器的。</strong></li><li><strong>机器的大小端，得出的结果可能在高低位地址实际排放的结果会相反。</strong></li><li><strong>不能使用 <code>&amp;</code> 获取位域成员的地址，因为不能保证位域成员在字节(byte)地址上。</strong></li><li><strong>位字段用于将更多的变量打包到更小的数据空间中，会导致编译器产生额外的代码来操作这些变量。这在代码大小和执行时间方面都会付出代价。(编译器必须进行位分割/错误对齐的访问)</strong></li><li><strong>…</strong></li></ul><p><strong>作为程序员，没有太大的区别。但是，与访问单个位相比，访问整个字节的代码要简单/短得多，因此使用位域会增加所生成的代码量。</strong></p><p><strong>访问整个字节：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ldb input1,b         ; get the new value into accumulator b</span><br><span class="line">movb b,value1        ; put it into the variable</span><br><span class="line">rts                  ; return from subroutine</span><br></pre></td></tr></table></figure><p><strong>使用位域：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    ldb input1,b        ; get the new value into accumulator b</span><br><span class="line">    movb bitfields,a    ; get current bitfield values into accumulator a</span><br><span class="line">    cmpb b,#0           ; See what to do.</span><br><span class="line">    brz clearvalue1:    ; If it&#x27;s zero, go to clearing the bit</span><br><span class="line">    orb #$80,a          ; set the bit representing value1.</span><br><span class="line">    bra resume:         ; skip the clearing code.</span><br><span class="line">clearvalue1:</span><br><span class="line">    andb #$7f,a         ; clear the bit representing value1</span><br><span class="line">resume:</span><br><span class="line">    movb a,bitfields    ; put the value back</span><br><span class="line">    rts                 ; return</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 位域 </tag>
            
            <tag> 位字段 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝牙开发之 IOS ANCS</title>
      <link href="/f0b6078aa8de/"/>
      <url>/f0b6078aa8de/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>2022-04-12：更新 <a href="https://www.nixgnauhcuy.cn/e7b57229acd4/">蓝牙开发之 IOS AMS</a>，有兴趣的可以点击链接进入~</strong></p><p><strong>2022-04-08：更新接收推送效果</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/ancs.gif" alt="效果"></p><p><strong>上图演示了，接收微信通知和 QQ 通知的展示，短信来电等我就不一一展示了。</strong></p></blockquote><h2 id="什么是-ANCS">什么是 ANCS</h2><h3 id="ANCS-介绍-Introduction">ANCS 介绍(Introduction)</h3><p><strong>ANCS 全称 Apple Notification Center Service(苹果通知中心服务)，是提供给 BLE 设备的一种获取 IOS 设备通知的方法。ANCS围绕三个原则进行设计：简单，高效和可扩展性。</strong></p><blockquote><p><strong>以下引用自 <a href="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleNotificationCenterServiceSpecification/Introduction/Introduction.html">ANCS 规范</a></strong></p><p><strong>The purpose of the Apple Notification Center Service (ANCS) is to give Bluetooth accessories (that connect to iOS devices through a Bluetooth low-energy link) a simple and convenient way to access many kinds of notifications that are generated on iOS devices.</strong></p><p><strong>The ANCS is designed around three principles: simplicity, efficiency and scalability. As a result, accessories ranging from simple LEDs to powerful “companion” devices with large displays can find the service useful.</strong></p></blockquote><hr><h3 id="ANCS-字节序和字节码-Endianness-and-String-Encoding">ANCS 字节序和字节码(Endianness and String Encoding)</h3><p><strong>除非另有规定，否则通过 ANCS 传输的所有数值都应是小端格式。</strong><br><strong>除非另有规定，否则通过 ANCS 传输的所有字符串值都应是 UTF-8 编码的 unicode 字符所组成的。</strong></p><hr><h3 id="依赖性-Dependencies">依赖性(Dependencies)</h3><p><strong>除了标准的通用属性配置文件(GATT)子程序集外，ANCS 没有任何依赖性。作为 GATT 客户端的设备在使用 ANCS 时，可以自由访问和使用 iOS 设备提供的其他服务。</strong></p><h3 id="术语-Terminology">术语(Terminology)</h3><ol><li><p><strong>苹果通知中心服务应称为 ANCS。</strong></p></li><li><p><strong>ANCS 服务的发布者(也就是我们的 iOS 设备)应被称为通知提供者(NP)。</strong></p></li><li><p><strong>ANCS 服务的任何客户端(也就是我们的蓝牙设备)应被称为通知消费者(NC)。</strong></p></li><li><p><strong>在 iOS 通知中心显示在 iOS 设备上的通知，应称为 iOS 通知。</strong></p></li><li><p><strong>GATT 特性作为异步消息发送的通知，应称为 GATT 通知。</strong></p></li></ol><hr><h2 id="ANCS-理解">ANCS 理解</h2><p><strong>上面的对于什么是 ANCS，基本上都是其 <a href="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleNotificationCenterServiceSpecification/Introduction/Introduction.html">ANCS 规范</a>中所提及的，不过不能在水文水下去了(<s>在水下去怕读者打我😄</s>)，我们来谈谈对它的理解。</strong></p><p><strong>首先 ANCS 最重要的是它的 N 和 S，它告诉了我们，它是一个通知服务，它是基于 GATT 封装的服务，和我们的 nus、hrs 等服务都是一个档次的，只不过它与 IOS 和设备间制定了自己的一套协议，我们要使用它就必须遵守它们之间的规则来办事。</strong></p><p><strong>那为什么我们用 nrf connect、LightBlue 等蓝牙工具没办法看到 ANCS 相关的UUID呢？👉这就和 IOS 的机制有关了，IOS 对安全的考虑比安卓要严格的多，IOS 是沙盒机制，限制了每个应用不得翻越自己的围墙去访问别的存储空间的内容，即使能访问也需要授权才可以，所以接触的 IOS 工程师告诉我，他们没办法通过蓝牙去获取其他应用的通知，所以 IOS 提供了这样一个通知服务，但是它是私有的，并不会主动的广播，所以我们用蓝牙工具是看不到这个服务的，并且如果你也是蓝牙的开发者并且你也在折腾 ANCS，那么要清楚，IOS 工程师并不需要在他们的代码中处理 ANCS 相关的代码，我们在蓝牙中做好对 ANCS 的支持和响应，剩下的就是我们蓝牙设备与 IOS 设备的事了。(IOS 开发的工程师们，如果觉得我理解不到位，请轻点喷我，并麻烦指正我的错误😭，感激不尽🙏！)</strong></p><blockquote><p><strong>ANCS 主服务(Service) UUID 为 7905F431-B5CE-4E99-A40F-4B1E122D00D0</strong></p><blockquote><p><strong>ANCS 服务下的三个特征(Characteristic) UUID:</strong><br><strong>通知源(Notification Source) UUID: 9FBF120D-6301-42D9-8C58-25E699A21DBD(notifiable)</strong><br><strong>控制点(Control Point) UUID: 69D1D8F3-45E1-49A8-9821-9BBDFDAAD9D9(writeable with response)</strong><br><strong>数据源(Data Source) UUID: 22EAC6E9-24D6-4BB5-BE44-B36ACE7C7BFB(notifiable)</strong></p></blockquote></blockquote><p><strong>上述特征都需要授权才能访问，并且通知源特性是必须要有的，而其他两个控制点和数据源是可选的。ANCS中存在的特征可能比上面列出的三个更多。也就是说，NC 可以忽略任何它不识别的特性。一个 NP 上只能存在一个 ANCS 的实例。由于 iOS 的特性，不能保证 ANCS 始终存在。因此，NC 应寻找并订阅 GATT 服务的 Service Changed 特性，以便随时监控 ANCS 可能的发布和未发布的消息。</strong></p><p><strong>这里再扩展一下个人见解，我们实际操作蓝牙服务时都是操作其句柄，这与文件系统类似，打个比方，ANCS 的主服务我们看作文件系统的磁盘，ANCS 的三个特征我们把它看作文件系统的文件例如 a.txt、b.txt、c.txt 三个文件，那么 ANCS 的属性我们把它看作对 a.txt 文件操作时的读和写的属性，是不是极其地相似，我们 open 磁盘后再 open 文件，用获得的句柄对这个文件就有了可读可写的属性，就可以对 txt 文本中写入内容和读出内容。这点是不是和蓝牙服务这一块极其相似。(当然，这只是我个人的观点，方便各位理解，不一定对，如果有误😭，麻烦指正，不胜感激🙏！)</strong></p><hr><h2 id="ANCS-特征-Characteristic">ANCS 特征(Characteristic)</h2><h3 id="通知源-Notification-Source">通知源(Notification Source)</h3><p><strong>Notification Source 这个特征值是用于通知我们的蓝牙设备这一消费者(NC)，下面则是得到通知的场景：</strong></p><ul><li><strong>NP 上有新的 IOS 通知</strong></li><li><strong>NP 上修改了 IOS 通知</strong></li><li><strong>NP 上删除了 IOS 通知</strong></li></ul><p><strong>一旦 NC 监控了通知源特征，那么 GATT 通知就可以立即发送。因此，我们在监控这个特征之前，应该处于可以正确接收和处理这些消息的状态。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/00.png" alt="通知源特性传递的 GATT 通知的格式"></p><p><strong>通过通知源特征传递的 GATT 通知包含以下信息：</strong></p><blockquote><ul><li><strong>EventID：此字段通知设备是否添加、修改或删除了给定的 iOS 通知。此字段的枚举值在EventID Values中定义。</strong></li></ul><blockquote><p>EventID Values:</p><ul><li>EventIDNotificationAdded = 0 - iOS 通知已添加</li><li>EventIDNotificationModified = 1 - iOS通知已修改</li><li>EventIDNotificationRemoved = 2 - iOS通知已删除</li></ul></blockquote><ul><li><strong>EventFlags：一个位掩码，其设置位通过 iOS 通知将其特殊性通知给 NC。例如，如果将 iOS 通知视为“重要”，则 NC 可能希望显示一个更积极的用户界面(UI)，以确保正确警告用户。此字段的枚举位在 EventFlags 中定义。</strong></li></ul><blockquote><p>EventFlags：</p><ul><li>EventFlagSilent = (1 &lt;&lt; 0) - 通知的优先级较低</li><li>EventFlagImportant = (1 &lt;&lt; 1) - 通知具有较高的优先级</li><li>EventFlagPreExisting = (1 &lt;&lt; 2) - 该通知已存在</li><li>EventFlagPositiveAction = (1 &lt;&lt; 3) - 通知具有可以采取的积极行动</li><li>EventFlagNegativeAction = (1 &lt;&lt; 4) - 通知具有可以采取的负面行动</li></ul></blockquote><ul><li><strong>CategoryID：一个数值，提供对 iOS 通知进行分类的类别。NP 将尽最大努力为每个iOS 通知提供准确的类别。此字段的枚举值在 CategoryID 值中定义。</strong></li></ul><blockquote><p>CategoryID:</p><ul><li>CategoryIDOther = 0 - iOS 通知属于“其他”类别</li><li>CategoryIDIncomingCall = 1 - iOS 通知属于“来电”类别</li><li>CategoryIDMissedCall = 2 - iOS 通知属于“未接电话”类别</li><li>CategoryIDVoicemail= 3 - iOS 通知属于“语音邮件”类别</li><li>CategoryIDSocial = 4 - iOS 通知属于“社交”类别</li><li>CategoryIDSchedule = 5 - iOS 通知属于“时间表”类别</li><li>CategoryIDEmail = 6 - iOS 通知属于“电子邮件”类别</li><li>CategoryIDNews = 7 - iOS 通知属于“新闻”类别</li><li>CategoryIDHealthAndFitness = 8 - iOS 通知属于“健康和健身”类别</li><li>CategoryIDBusinessAndFinance = 9 - iOS 通知属于“商务和金融”类别</li><li>CategoryIDLocation = 10 - iOS 通知属于“位置”类别</li><li>CategoryIDEntertainment = 11 - iOS 通知属于“娱乐”类别</li></ul></blockquote><ul><li><strong>CategoryCount：给定类别中当前活动的 iOS 通知数。例如，如果用户的电子邮件收件箱中有两封未读电子邮件，并且有一封新电子邮件被推送到用户的 iOS 设备，则 CategoryCount 的值为3。</strong></li><li><strong>NotificationUID：一个 32 位数值，它是iOS通知的唯一标识符(UID)。该值可用作发送到“控制点”特征以与 iOS 通知进行交互的命令中的句柄。</strong></li></ul></blockquote><p><strong>根据上边对通知源特征的解析，我们可以应用于手环手表，显示当前手机的通知信息，并且过滤我们需要的通知类别等作用。</strong></p><hr><h4 id="iOS-通知的生命周期">iOS 通知的生命周期</h4><p><strong>通过 NP 生成的通知源特性 GATT 通知的格式，我们可以隐式推断出 iOS 通知的生存期，如下图：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/01.png" alt="iOS 通知的生命周期"></p><p><strong>从图里可以看出通知的生命周期，当我们 IOS 手机收到通知后会触发 Notification Added，如果不主动点开，它将一直保留在通知列表中，这个时候如果该通知是可以被修改的，那么当你修改了该通知后，将触发 Notification Modified，但也有一些是不可修改的，那么改事件不一定会被触发，但是删除是必定的，当你点开通知或者通知刚来你就点开了，那么就会触发 Notification Removed，那么这个通知的生命就到了尽头。<s>所以为了爱护通知的生命，你可以一直不关它，让它存活在你的通知列表里，hhhh😄。</s></strong></p><hr><h3 id="控制点-Control-Point-和数据源-Data-Source">控制点(Control Point)和数据源(Data Source)</h3><p><strong>NC 可能要与 iOS 通知进行交互。它可能希望获取和它有关的更多信息，包括其内容，或者可能要对其执行操作。那么这些属性的检索是通过控制点和数据源特征执行的。</strong></p><p><strong>NC 可以通过将特定命令写入控制点特征来发出检索有关 iOS 通知的更多信息的请求。如果对控制点特征写入成功，NP 将通过数据源特征上的 GATT 通知流得到响应。</strong></p><p><strong>NC 可以通过将特定命令写入控制点特征来对 iOS 通知执行预定动作。有关操作和 iOS 通知的更多信息，请参见“<a href="#%E6%89%A7%E8%A1%8C%E9%80%9A%E7%9F%A5%E6%93%8D%E4%BD%9C">执行通知操作</a>”。</strong></p><hr><h4 id="获取通知属性">获取通知属性</h4><p><strong>使用“获取通知属性”命令，NC 可以检索特定 iOS 通知的属性。“获取通知属性”命令的格式如图所示。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/02.png" alt="“获取通知属性”命令的格式"></p><p><strong>获取通知属性命令的格式包含以下信息：</strong></p><blockquote><ul><li><strong>CommandID：应设置为 0(CommandIDGetAppAttributes)。</strong></li><li><strong>NotificationUID： 32 位数值，代表客户端需要其信息的 iOS 通知的 UID。</strong></li><li><strong>AttributeIDs： NC 想要检索的属性列表。某些属性后可能需要一个 16 位长度的参数，该参数指定 NC 希望检索的属性的最大字节数。</strong></li></ul></blockquote><p><strong>使用了获取，那么必然有响应，“获取通知属性”的响应的格式如图所示。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/03.png" alt="“获取通知属性”响应"></p><p><strong>获取通知属性响应的格式包含以下信息：</strong></p><blockquote><ul><li><strong>CommandID：应设置为 0(CommandIDGetAppAttributes)。</strong></li><li><strong>NotificationUID： 32 位数值，是以下属性对应的 iOS 通知的 UID。</strong></li><li><strong>AttributeList： AttributeID / 16 位长度 / Attribute 元组的列表。属性始终是一个字符串，该字符串的长度(以字节为单位)在元组中提供，但不以 NULL 终止。如果 iOS 通知的请求属性为空或缺失，则其长度设置为 0。元组始终与“获取通知属性”命令的 AttributeID 顺序相同。。</strong></li></ul></blockquote><hr><h4 id="获取应用程序属性">获取应用程序属性</h4><p><strong>“获取应用程序属性”命令允许 NC 检索安装在 NP 上的特定应用程序的属性。“获取应用程序属性”命令的格式如图所示。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/04.png" alt="获取应用程序属性"></p><p><strong>获取应用程序属性的格式包含以下信息：</strong></p><blockquote><ul><li><strong>CommandID：应设置为1(CommandIDGetAppAttributes)。</strong></li><li><strong>AppIdentifier：客户端需要有关其信息的应用程序的字符串标识符。该字符串必须以 NULL 终止。</strong></li><li><strong>AttributeIDs： NC 想要检索的属性列表。</strong></li></ul></blockquote><p><strong>同样的，使用了获取，那么必然有响应，“获取应用程序属性”的响应的格式如图所示。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/05.png" alt="获取应用程序属性响应"></p><p><strong>其响应的格式则包含以下信息：</strong></p><blockquote><ul><li><strong>CommandID：应设置为1(CommandIDGetAppAttributes)。</strong></li><li><strong>AppIdentifier：以下属性对应的应用程序的字符串标识符。该字符串以 NULL 终止。</strong></li><li><strong>AttributeList： AttributeID / 16 位长度 / Attribute 元组的列表。属性始终是一个字符串，该字符串的长度(以字节为单位)在元组中提供，但不以 NULL 终止。如果应用程序的请求属性为空或缺失，则其长度设置为 0。元组始终与“获取应用程序属性”命令的 AttributeID 顺序相同。</strong></li></ul></blockquote><blockquote><p><strong>👉注意：上面无论是通知属性还是应用程序属性如果响应大于协商的 GATT 最大传输单位（MTU），则 NP 将其分为多个片段。NC 必须通过拼接每个片段来重组响应。当收到每个请求属性的完整元组时，响应完成。</strong></p></blockquote><p><strong>上面这两个获取通知属性和应用程序属性有什么作用呢？当我们收到通知源特征反馈给我们的信息时，我们只能知道它属于那类别的信息，但是我们不能知道他们具体的内容是什么，但是通过这两个获取接口，我们可以获取相应的通知属性，拿微信💬举例，我们可以获取其发送的通知的用户名和内容，这样我们就可以显示在我们的手环或者手表上。</strong></p><hr><h3 id="执行通知操作">执行通知操作</h3><p><strong>执行通知动作命令允许 NC 对特定的 iOS 通知执行预定的动作。执行通知操作命令包含以下字段：</strong></p><table><thead><tr><th style="text-align:center">字节数</th><th style="text-align:center">名称</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">CommandID</td><td style="text-align:center">设定为2(CommandIDPerformNotificationAction)</td></tr><tr><td style="text-align:center">2-5</td><td style="text-align:center">NotificationUID</td><td style="text-align:center">32位数值，代表客户端要在其上执行操作的 iOS 通知的 UID。</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">ActionID</td><td style="text-align:center">NC 希望对 iOS 通知执行的所需操作。</td></tr></tbody></table><p><strong>发出此命令时，无论成功与否，都不会在数据源特征上生成任何数据。</strong></p><h4 id="通知动作">通知动作</h4><p><strong>从 iOS 8.0 开始，NP 可以将与 iOS 通知关联的潜在操作通知 NC。然后，NC 可以代表用户请求 NP 执行与特定 iOS 通知关联的操作。</strong><br><strong>通过检测 EventFlags 由通知源特征生成的 GATT 通知字段中是否存在设置标志，可以向 NC 通知有关 iOS 通知的可执行操作：</strong></p><blockquote><ul><li><strong>EventFlagPositiveAction: 存在一个积极的动作，并且与此 iOS 通知相关联。</strong></li><li><strong>EventFlagNegativeAction: 存在一个负面的动作，并且与此 iOS 通知相关联。</strong></li></ul></blockquote><p><strong>NP 代表 NC 执行的实际操作由 NP 决定，并且取决于它们执行的 iOS 通知而有所不同。例如，对来电通知执行肯定动作可能会应答，而执行否定动作可能会拒绝。</strong></p><p><strong>NC 既不能假设也不能试图预先猜测在 iOS 通知上执行的确切操作，因为这些操作是基于其无法获得的信息(例如，NP 实现的 ANCS 版本)。NP 保证积极和负面的行动与不会令用户感到意外的结果相关联。</strong></p><p><strong>如果存在于 iOS 通知中，则正面和负面的动作可能会以复选标记，X 标记或通常与确认和关闭相关的颜色（例如绿色和红色）向用户表示。</strong></p><p><strong>NC可以通过检索 iOS 8.0 中引入的新通知属性来检索简要描述与 iOS 通知关联的实际操作的标签：</strong></p><blockquote><ul><li><strong>NotificationAttributeIDPositiveActionLabel：用于描述可以对 iOS 通知执行的积极操作的标签。</strong></li><li><strong>NotificationAttributeIDNegativeActionLabel：用于描述可以对 iOS 通知执行的负面操作的标签。</strong></li></ul></blockquote><p><strong>通知操作，可以用于我们手表手环来接听或者挂断当前 IOS 设备的来电📱。</strong></p><hr><h2 id="其他">其他</h2><h3 id="会话-Session">会话(Session)</h3><p><strong>ANCS 会话在 NC 订阅 NP 上的通知源特性时开始，在 NC 取消订阅同一特性或断开与 NP 的连接时结束。由于 ANCS 不是被设计成一个完整的同步服务，因此它不会跟踪各会话的状态。因此，NC 和 NP 之间交换的所有标识符（如 NotificationUID 和 AppIdentifier）和所有数据仅在特定会话中有效。</strong></p><p><strong>当某一特定会话结束时，NC 应删除其在该会话期间收集和存储的任何标识符和数据。当一个新地会话开始时，NP 会尽力告知 NC 系统上任何现有的 iOS 通知。NC 可以使用这些信息来构建一个模型，用于会话的剩余部分。</strong></p><hr><h3 id="属性获取和缓存-Attribute-Fetching-and-Caching">属性获取和缓存(Attribute Fetching and Caching)</h3><p><strong>强烈建议 NC 只在需要时才获取属性，或者是为了响应用户的操作。例如，如果一个 NC 选择在一个简单的列表中显示活动的 iOS 通知，并且在用户选择时只显示特定 iOS 通知的详细信息，那么这个 iOS 通知的属性的检索可以被延迟的触发。</strong></p><p><strong>在会话过程中，强烈建议 NC 为它遇到的每个应用标识符建立一个 App Attributes 的缓存。建立这个缓存可以让 NC 避免多次检索相同地不可改变的 App 属性，从而节省时间并保护电池。</strong></p><hr><h3 id="错误代码-Error-Codes">错误代码(Error Codes)</h3><p><strong>写入控制点特性时，NC 可能会收到以下特定于 ANCS 的错误代码：</strong></p><blockquote><ul><li><strong>未知命令 (0xA0): NP 无法识别 commandID。</strong></li><li><strong>无效的命令 (0xA1): 该命令的格式不正确。</strong></li><li><strong>无效的参数 (0xA2): 参数之一（例如 NotificationUID）未引用 NP 上的现有对象。</strong></li><li><strong>操作失败 (0xA3): 未执行操作。</strong></li></ul></blockquote><p><strong>如果 NP 响应错误，它将不会在数据源特性上为相应命令生成任何 GATT 通知。</strong></p><hr><h2 id="示例">示例</h2><p><strong>这是 <a href="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleNotificationCenterServiceSpecification/Introduction/Introduction.html">ANCS 规范</a>上的示例，拿来分析下。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/06.png" alt="服务设置示例"></p><p><strong>当设备(NC)连接配对了手机(NP)之后，设备发现 ANCS 服务和特征，我们需要订阅通知源并且可以根据自己的需求来选择是否需要控制点和通知源。当手机上有新的通知时，会通过通知源通知我们的设备。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210315/07.png" alt="通知属性检索示例"></p><p><strong>同样的当设备(NC)连接配对了手机(NP)之后，设备发现 ANCS 服务和特征并且订阅了相应的特征值。当手机接收到来电时，会发送该通知的 UID(图上标识了)和其他信息(如，消息类别等，图上未标识)给设备。我们可以根据自己的需要，当需要获取通知的具体内容时，我们可以通过获取通知属性的指令来获取相应通知的内容。图上获取属性为 Title、Message、AppID，手机收到后，同样地会返回相应的通知属性给设备。我们可以根据反馈的内容，对这些内容进行处理(例如显示等)。</strong></p><hr><h2 id="结语">结语</h2><p><strong>关于蓝牙的 IOS ANCS 的总结就分享到这里了，如果在文中发现有误，欢迎指出，我会及时修改的，提前感谢🙏！<a href="https://developer.apple.com/library/archive/documentation/CoreBluetooth/Reference/AppleNotificationCenterServiceSpecification/Introduction/Introduction.html">ANCS 规范</a>其实已经总结的很清楚了，有兴趣的小伙伴也可以看看！</strong></p><hr>]]></content>
      
      
      <categories>
          
          <category> 蓝牙 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BLE </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> IOS </tag>
            
            <tag> ANCS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RTOS 使用看门狗策略</title>
      <link href="/280ff73bac80/"/>
      <url>/280ff73bac80/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是看门狗">什么是看门狗</h2><p><strong>看门狗是一种防止故障和崩溃的机制，其本质是一种电子计时器，开始计时器后，必须要定期重置计时以防止超时，当程序跑飞或者发生故障时，因为不能定期重置计时导致计时器超时，这时看门狗会重新启动芯片。</strong></p><p><strong>看门狗可以用软件或者硬件来实现。两者都是通过定时器实现，定时时间内没有喂狗，就会复位芯片。软件看门狗优点在于可以通过程序改变时间，并且可以随时禁用看门狗。缺点是如果在初始化看门狗前程序就已经跑飞或者禁用看门狗后程序跑飞，这样看门狗就没有起到系统恢复的作用。硬件看门狗则是一种更强大的解决方案，一旦开启，看门狗计数器就需要由程序定期发送信号重置计时，任何系统崩溃(无论是硬件还是软件)都会导致看门狗计数器超时，这时硬件看门狗会通过向 CPU 发送复位信号来将崩溃或故障的 CPU 重启。</strong></p><p><strong>在裸机系统(没有操作系统)上使用看门狗相对简单，初始化启动看门狗后，实现一个功能即可重置看门狗计数器。在任何系统崩溃的故障中，计数器都不会被重置，所以看门狗也会重置系统。</strong></p><p><strong>上面说了裸机系统，那么在多任务的系统中使用看门狗的有效方法是什么呢？</strong></p><p><strong>多任务系统中的看门狗实现必须能够保证操作系统和每个应用任务的正确执行。要做到这一点，我们必须单独监控应用程序的每个任务（或至少是最重要的任务）的执行情况，并确保所有任务都按计划执行。</strong></p><p><strong>在 RTOS 中看门狗的优先级选择也有区别，如果看门狗任务具有较高的优先级，即使有其他任务崩溃，也可以保证它始终运行，并且也有利于我们记录崩溃的任务名称，保存便于下次排错。但是这也导致了看门狗任务会占用更多的 CPU 时间，而这些时间原本可以供给需要高优先级的任务使用。如果看门狗任务优先级较低，则可以保证它不会占用其他优先级的 CPU 时间，提高利用率，但是我们得确保其他任务阻塞时间不会超过喂狗的时间，不然将有可能导致超时而导致看门狗复位芯片，并导致 CPU 重启。</strong></p><p><strong>出于这些考虑，我更倾向于把看门狗的优先级抬高。</strong></p><p><strong>有几种方法可以实现这种监控，每种方法都有其优点和缺点。在本文中，我将介绍我通常使用的两种策略。第一种策略很简单，但没有那么稳健，也有一些不足之处。第二种策略实施起来比较费劲，但成本效益比很好（复杂性与稳健性）。</strong></p><h2 id="看门狗策略">看门狗策略</h2><p><strong>我接触最多的操作系统就是 FreeRtos，所以本文我使用了 FreeRtos 的 API，但代码可以很容易地移植到其他操作系统上。</strong></p><h3 id="策略一">策略一</h3><p><strong>先看 Demo：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">void wdog_free_task(void *pvParameters)</span><br><span class="line">&#123;</span><br><span class="line">    /* 初始化看门狗 */</span><br><span class="line">    wdog_init();</span><br><span class="line"> </span><br><span class="line">    /* 1 秒喂一次狗 */</span><br><span class="line">    while (true)</span><br><span class="line">    &#123;</span><br><span class="line">        vTaskDelay(1000);</span><br><span class="line">        wdog_free();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>上面的 Demo 使用最低优先级执行周期性任务，定时喂狗。</strong></p><p><strong>这种实现最为简单，保证了对硬件崩溃、程序跑飞的保护，一旦发生故障，该任务得不到执行，看门狗就会因为超时而复位，同样的，它还可以防止 RTOS 任务调度器故障。并且，因为该看门狗任务最低，所以如果有其他任务在执行的过程中跑飞、崩溃等，看门狗就会因为没有喂狗而复位。</strong></p><p><strong>不过这个策略也有它的不足之处，它没办法保证所有的任务都按照你所理想的执行，假设我们有个定时任务从传感器获取数据，我们不能监控到这个任务是否按我们的逻辑在运行或者因为硬件或软件的 BUG 卡住了。所以，这种策略实现起来非常简单，但它不具备大多数嵌入式系统设计所需要的鲁棒性。</strong></p><h3 id="策略二">策略二</h3><p><strong>同样的，我们先看 Demo：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">void task_1(void *pvParameters)</span><br><span class="line">&#123;</span><br><span class="line">    struct wdog_counter *wdt;</span><br><span class="line"> </span><br><span class="line">    task_1_init();</span><br><span class="line"> </span><br><span class="line">    wdt = wdog_count_allocate(pcTaskGetName(NULL));</span><br><span class="line"> </span><br><span class="line">    while (true) </span><br><span class="line">    &#123;</span><br><span class="line">        // 做一些事情</span><br><span class="line"></span><br><span class="line">        // 完成后任务计数值递增</span><br><span class="line">        wdog_count_increment(wdt);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void wdog_free_task(void *pvParameters)</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t err;</span><br><span class="line"></span><br><span class="line">    /* 初始化看门狗 */</span><br><span class="line">    wdog_init();</span><br><span class="line"> </span><br><span class="line">    while (true)</span><br><span class="line">    &#123;</span><br><span class="line">        vTaskDelay(1000);</span><br><span class="line">        err = wdog_counter_check();</span><br><span class="line">        if (err == 0)</span><br><span class="line">        &#123;</span><br><span class="line">            /* 所有任务正常运行，则正常喂狗并且清除任务计数 */</span><br><span class="line">            wdog_free();</span><br><span class="line">            wdog_counter_restart();</span><br><span class="line">        &#125;</span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            /* 有一个或多个任务发生错误，记录错误并且调用复位 */</span><br><span class="line">            wdog_error_log(err);</span><br><span class="line">            wdog_reset_system();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>策略一因为没法监控到每个任务的运行情况，所以策略二则为了解决策略一的不足，单独监控每个任务，只有当所有被监控的任务都按我们的逻辑执行时，才会喂狗，为了监控每一个任务，我们需要给它关联一个计数器，这个计数器由任务本身定期递增，以表明它的执行一切正常。上面的 Demo 使用了一个结构体来存储任务的计数器，FreeRtos 提供了 <code>pcTaskGetName</code> 用以获取任务句柄所对应的任务名，当传入参数为 NULL 时表示查询自身任务的任务名，我们可以将任务名传入 <code>wdog_count_allocate</code> 使之与分配的计数器相关联，并且在每个任务正常运行时，调用 <code>wdog_count_increment</code> 来递增我们的计数值。</strong></p><p><strong>而看门狗任务，则定期的调用 <code>wdog_counter_check</code> 对每个任务的计数值是否递增来判断当下所有的任务是否在正常运行，是的话则正常喂狗并且调用 <code>wdog_counter_restart</code> 将任务的计数器清零。当有任务没有正常递增时，说明发生了错误，则相应的调用 <code>wdog_error_log</code> 将发生错误的任务进行记录，随后调用 <code>wdog_reset_system</code> 进行重启。</strong></p><p><strong>上面的看门狗相关的接口都可以封装到看门狗模块中，而任务的错误记录，则可以保存到 flash 等地方，方便下次读取，对该任务进行排错。</strong></p><p><strong>当然也不一定要用我上述的方法，RTOS 提供了通知的 API，同样可以使用通知的方式，周期性的通知看门狗，如果看门狗收到所有任务的通知则说明正常，正常喂狗清除计数，若某个任务发生故障，则用同样的方式进行排错处理。</strong></p><h2 id="结尾">结尾</h2><p><strong>上一篇文章推荐的软件被某苏州公司举报软件侵权了，所以没得，微信把文章给删了，后面多半不写这种文章了。</strong></p><p><strong>本文如果哪里有误，欢迎在下方留言指正，我会及时修改的！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 开发环境搭建</title>
      <link href="/5f9e4d2c65bf/"/>
      <url>/5f9e4d2c65bf/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一个好的程序员应该是那种过单行线都要往两边看的人。</p></blockquote><h2 id="前言">前言</h2><p>Hello，距上次更新居然过了一个多星期。😂可不能怪我懒，我家里工作的笔记本要拿去给家人用，所以最近一直在找替换机，最后在狗东买了联想的拯救者 R7000，工作原因还是笔记本方便，不然组装台台式机也是个不错的选择，下单后隔天傍晚就收到了<s>速度好评👍</s>，验完机后要把我过时的旧笔记本的资料迁移到新机上，平时上班也没空<s>临近过年反而更忙了😩</s>，只有晚上回去才有空折腾。又要装软件，搭建一些开发环境，所以一直没有时间更新。</p><p>再坚挺到 6 号我就放假了！~~多半更加没时间更新了。~~公司放假 14 天，😏不知道各位是不是早早就放假舒舒服服过年去了。</p><p>回到正题，因为换了电脑，所以需要重新安装一些开发环境，刚好整理一下一些开发环境的安装流程！</p><hr><h2 id="下载-python">下载 python</h2><p>首先，进入 <a href="https://www.python.org/">python 官网</a>，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/00.png" alt=""></p><p>找到 <code>Downloads</code> 选择要安装的平台，我的系统是 <code>win10</code> 的，所以选择 <code>Windows</code> 平台，点击进入下载页，这里我选择稳定版 <code>python 3.8.7</code>，然后根据自己操作系统的位数选择 32 位或 64 位来下载，这里我是 64 位的，所以选择 <code>Download Windows installer (64-bit)</code> 点击下载即可，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/01.png" alt=""></p><blockquote><p>操作系统位数的查看方法：右键我的电脑，打开属性，计算机的基本信息就显示出来了，下图演示电脑是我公司的台式机<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/02.png" alt=""></p></blockquote><h2 id="安装-python">安装 python</h2><p>下载完成后，双击运行，勾选上 <code>Add Python 3.8 to PATH</code>，让安装程序帮你写入环境变量，省得自己还得跑去设置，增加错误几率。默认安装的地址我不太喜欢，所以这里选择 <code>Customize installation</code> 来自定义安装，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/03.png" alt=""></p><p>可选功能 <code>Optional Features</code> 这里默认就可以了，进入下一步</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/04.png" alt=""></p><p>高级选项 <code>Advanced Options</code>，勾选上 <code>Install for all users</code>，然后选择要安装的路径，装在其他盘也是可以的，确认无误后，点击 <code>Install</code> 开始安装，并等待安装完成</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/05.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/06.png" alt=""></p><p>安装完成后，点击 <code>Disable path length limit</code> 来禁用系统的 PATH 长度限制，不点击也是 OK 的，随后点击 <code>close</code> 关闭安装程序即可。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/07.png" alt=""></p><p>然后我们验证一下是否完成无误，<code>win + R</code> 打开运行框，输入 <code>cmd</code> 后回车，输入 <code>python</code> 即可，</p><p>安装成功会显示：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/08.png" alt=""></p><p>失败或安装错误则没有显示信息：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210203/09.png" alt=""></p><p>输入 <code>python</code> 后没有打印版本信息的话，则需要检查安装流程和环境变量设置是否有问题！</p><p><strong>与本文相关的内容还有：</strong><br><a href="https://www.nixgnauhcuy.cn/20993293a762/">python 制作串口工具（一）</a><br><a href="https://www.nixgnauhcuy.cn/20993293a762/">python 制作串口工具（二）</a><br><a href="https://www.nixgnauhcuy.cn/93bdfa3a6163/">python 获取已连接wifi密码工具</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 制作串口工具（二）</title>
      <link href="/70458b910afa/"/>
      <url>/70458b910afa/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Beautiful is better than ugly.</p></blockquote><h2 id="前言">前言</h2><p>继续上一篇<a href="https://www.nixgnauhcuy.cn/20993293a762/">使用 python 制作串口工具（一）</a>，完成要实现的串口工具代码逻辑！</p><hr><h2 id="实现">实现</h2><p>最终效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210126/ok.gif" alt=""></p><h3 id="获取接入的-com-口">获取接入的 com 口</h3><p>首先，我们先实现获取电脑当前所接入的串口，<strong>实现效果为：每次点击 Combo Box，就把当前电脑接入的串口号信息读取出来</strong>。所以我们需要对 Combo Box 这个控件进行重写，这里新建个 my_combobox.py，代码如下：</p><p>my_combobox.py</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">import serial</span><br><span class="line">import serial.tools.list_ports</span><br><span class="line"></span><br><span class="line">from PyQt5.QtWidgets import QComboBox</span><br><span class="line"></span><br><span class="line">class My_ComBoBox(QComboBox):</span><br><span class="line"></span><br><span class="line">    def __init__(self, parent = None):</span><br><span class="line">        super(My_ComBoBox,self).__init__(parent)</span><br><span class="line"></span><br><span class="line">    # 重写showPopup函数</span><br><span class="line">    def showPopup(self):</span><br><span class="line">        # 先清空原有的选项</span><br><span class="line">        self.clear()</span><br><span class="line">        index = 1</span><br><span class="line"></span><br><span class="line">        # 获取接入的所有串口信息，插入combobox的选项中</span><br><span class="line">        port_list = self.get_port_list(self)</span><br><span class="line">        if port_list is not None:</span><br><span class="line">            for i in port_list:</span><br><span class="line">                self.insertItem(index, i)</span><br><span class="line">                index += 1</span><br><span class="line">        QComboBox.showPopup(self)# 弹出选项框</span><br><span class="line"></span><br><span class="line">    @staticmethod</span><br><span class="line">    # 获取接入的COM</span><br><span class="line">    def get_port_list(self):</span><br><span class="line">        try:</span><br><span class="line">            port_list = list(serial.tools.list_ports.comports())</span><br><span class="line">            for port in port_list:</span><br><span class="line">                yield str(port)</span><br><span class="line">        except Exception as err:</span><br><span class="line">            print(&quot;获取接入的串口设备出错！错误信息为：&quot; + str(err))</span><br></pre></td></tr></table></figure><p>上面实现了每次点击 Combo Box 后获取所有接入串口的信息。文件创建好并且写入代码后，我们需要引用它，回到 UI 文件 Ui_uart_tool_ui.py，引入刚才所写的内容，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210126/00.png" alt=""></p><p>搞定后，我们重新运行下代码，看看效果吧，这里我调试的时候刚好旁边没有串口，所以直接拿了两个 Jlink 演示一下。(<s>我现在是有空的时候写一点，所以偶尔所处的地方，装备有可能不齐全，请谅解！</s>)，效果如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210126/01.gif" alt=""></p><p>可以看到，每次点击，都会刷新获取一次当前接入的串口，无论是新接入还是刚断开的串口，在每次点击后都会刷新。</p><h3 id="实现串口底层接口">实现串口底层接口</h3><p>上面完成后，我们先来实现串口底层的接口，后面在应用逻辑交互上，需要对串口底层操作，串口底层单独新建个文件来写， 这里我命名为 <a href="http://uart.py">uart.py</a>，部分代码如下：</p><p><a href="http://uart.py">uart.py</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line">class Uart_Recv_Data_Thread(threading.Thread):</span><br><span class="line">    def __init__(self, cur_self, main_self):</span><br><span class="line">        super(Uart_Recv_Data_Thread, self).__init__()</span><br><span class="line">        self.cur_self = cur_self</span><br><span class="line">        self.thread = threading.Event()</span><br><span class="line">        self.main_self = main_self</span><br><span class="line"></span><br><span class="line">    def stop(self):</span><br><span class="line">        self.thread.set()</span><br><span class="line"></span><br><span class="line">    def stopped(self):</span><br><span class="line">        return self.thread.is_set()</span><br><span class="line"></span><br><span class="line">    def run(self):</span><br><span class="line">        while True:</span><br><span class="line">            time = &#x27;&#x27;</span><br><span class="line">            if self.stopped():</span><br><span class="line">                break</span><br><span class="line">            try:</span><br><span class="line">                if False == self.cur_self.recv_queue.empty():</span><br><span class="line">                    show_data = &#x27;&#x27;</span><br><span class="line">                    data = self.cur_self.recv_queue.get()</span><br><span class="line">                    data_num = len(data)</span><br><span class="line">                    if self.cur_self.uart_time_stamp_flag == 1:# 时间戳开关打开</span><br><span class="line">                        time = datetime.datetime.now().strftime(&#x27;[%Y-%m-%d %H:%M:%S:%f]\r\n&#x27;)</span><br><span class="line">                    </span><br><span class="line">                    if self.cur_self.uart_rec_hex_lock == 1:</span><br><span class="line">                        data_list = []</span><br><span class="line">                        data_bytes = bytes(data, encoding=&#x27;utf-8&#x27;)</span><br><span class="line">                        for i in range(len(data_bytes)):</span><br><span class="line">                            data_list.append(hex(data_bytes[i])[2:].zfill(2))</span><br><span class="line">                        send_text_to_hex = &#x27; &#x27;.join(data_list)</span><br><span class="line">                        show_data += send_text_to_hex</span><br><span class="line">                    else:</span><br><span class="line">                        show_data = data</span><br><span class="line">                    </span><br><span class="line">                    self.main_self.uart_recv_updata_show_data_signal.emit(time + show_data + &#x27;\r\n&#x27;)</span><br><span class="line"></span><br><span class="line">                    # 统计接收字符的数量</span><br><span class="line">                    self.main_self.uart_updata_recv_num_signal.emit(data_num)</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">                nums = self.cur_self.serial.inWaiting()</span><br><span class="line">                if (nums &gt; 0):</span><br><span class="line">                    recv_msg = self.cur_self.serial.read(nums)</span><br><span class="line">                else:</span><br><span class="line">                    continue</span><br><span class="line">                if self.cur_self.recv_queue.full():</span><br><span class="line">                    self.cur_self.recv_queue.get()</span><br><span class="line">                self.cur_self.recv_queue.put(recv_msg.decode())</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line">            except Exception as e:</span><br><span class="line">                print(e)</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line">class Uart_Send_Data_Thread(threading.Thread):</span><br><span class="line">    def __init__(self, cur_self, main_self):</span><br><span class="line">        super(Uart_Send_Data_Thread, self).__init__()</span><br><span class="line">        self.cur_self = cur_self</span><br><span class="line">        self.main_self = main_self</span><br><span class="line">        self.thread = threading.Event()</span><br><span class="line"></span><br><span class="line">    def stop(self):</span><br><span class="line">        self.thread.set()</span><br><span class="line"></span><br><span class="line">    def stopped(self):</span><br><span class="line">        return self.thread.is_set()</span><br><span class="line"></span><br><span class="line">    def run(self):</span><br><span class="line">        while True:</span><br><span class="line">            if self.stopped():</span><br><span class="line">                break</span><br><span class="line">            try:</span><br><span class="line">                if not self.cur_self.send_queue.empty():</span><br><span class="line">                    send_data = self.cur_self.send_queue.get(False)</span><br><span class="line">                    data_num = len(send_data)</span><br><span class="line">                    # 统计发送字符的数量</span><br><span class="line">                    self.main_self.uart_updata_send_num_signal.emit(data_num)</span><br><span class="line">                    #ascii 发送</span><br><span class="line">                    self.cur_self.serial.write(send_data)</span><br><span class="line">                else:</span><br><span class="line">                    continue</span><br><span class="line">            except queue.Empty:</span><br><span class="line">                continue</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Uart(object):</span><br><span class="line">    def __init__(self, parent):</span><br><span class="line">        self.err = 0</span><br><span class="line">        self.parent = parent</span><br><span class="line"></span><br><span class="line">        self.recv_queue = queue.Queue(1000)</span><br><span class="line">        self.send_queue = queue.Queue(1000)</span><br><span class="line">        self.uart_time_stamp_flag = 0</span><br><span class="line">        self.uart_rec_hex_lock = 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def uart_init(self, port, baud, stopbit, databit, checkbit):</span><br><span class="line">        try:</span><br><span class="line">            checkbitlist = &#123;&#x27;None&#x27;: &#x27;N&#x27;, &#x27;Odd&#x27;: &#x27;O&#x27;, &#x27;Even&#x27;: &#x27;E&#x27;&#125;</span><br><span class="line">            stopbitlist = &#123;&#x27;1&#x27;: &#x27;serial.STOPBITS_ONE&#x27;, &#x27;1.5&#x27;: &#x27;serial.STOPBITS_ONE&#x27;, &#x27;2&#x27;: &#x27;serial.STOPBITS_ONE&#x27;&#125;</span><br><span class="line">            self.serial = serial.Serial(port.split()[0], baud, int(databit), checkbitlist[checkbit], serial.STOPBITS_ONE)</span><br><span class="line">            # 创建线程</span><br><span class="line">            self.recv_thread = Uart_Recv_Data_Thread(self, self.parent)</span><br><span class="line">            self.send_thread = Uart_Send_Data_Thread(self, self.parent)</span><br><span class="line">            self.err = 0</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(e)</span><br><span class="line">            self.err = -1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def open_uart_thread(self):</span><br><span class="line">        self.recv_thread.start()</span><br><span class="line">        self.send_thread.start()</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    def close_uart_thread(self):</span><br><span class="line">        self.recv_thread.stop()</span><br><span class="line">        self.send_thread.stop()</span><br><span class="line">        self.serial.close()</span><br><span class="line">    </span><br><span class="line">    def uart_send_func(self, data):</span><br><span class="line">        self.send_queue.put(data)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上面实现了对串口的配置初始化，并且设置了两个线程，一个线程用于接收，一个线程用于发送，为了保证数据不会丢失，这里还用到了队列，保证即使快速发送时，也不会丢失数据。</p><h3 id="界面逻辑">界面逻辑</h3><p>底层接口完成后，接下来要做界面的逻辑，先从基础的发送和接收的显示开始，要实现这两点，首先要完成的就有<code>串口的打开和关闭</code>、<code>发送处理</code>和<code>接收显示</code>。</p><h4 id="串口的打开和关闭">串口的打开和关闭</h4><p>回到 <a href="http://main.py">main.py</a>，先来实现串口打开和关闭，设置一个标志，作为判断串口是否运行的标志，这里我将标志命名为 <code>self.uart_com_run_statu</code>，然后我们要绑定该按纽的触发回调事件， <code>self.uart_en_push_button.clicked.connect(self.uart_en_push_button_cb)</code>，在每次按下打开串口按钮后，我们获取 combo_box 当前内容的波特率、停止位、数据位等串口相关的信息，调用底层串口初始化 <code>self.uart.uart_init(port, baud, stopbit, databit, checkbit)</code> 传入这些内容，判断初始化是否成功，成功的话，将上面的运行标志置为 1，然后将打开串口按钮的文本设置为关闭串口，并且开启串口的线程，错误的话，说明有可能是串口已经被其他软件或应该打开，这里我们只要提示警告，不做任何处理就可以了。部分代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def uart_en_push_button_cb(self):</span><br><span class="line">        if self.uart_com_run_status == 0:</span><br><span class="line">            port = self.com_combo_box.currentText()</span><br><span class="line">            if port == &#x27;&#x27;:</span><br><span class="line">                win32api.MessageBox(0, &quot;请选择串口&quot;, &quot;警告&quot;,win32con.MB_ICONWARNING)</span><br><span class="line">                return</span><br><span class="line">            baud = self.baud_combo_box.currentText()</span><br><span class="line">            stopbit = self.stopbit_combo_box.currentText()</span><br><span class="line">            databit = self.databit_combo_box.currentText()</span><br><span class="line">            checkbit = self.checkbit_combo_box.currentText()</span><br><span class="line">            self.uart.uart_init(port, baud, stopbit, databit, checkbit)</span><br><span class="line">            if self.uart.err == -1:</span><br><span class="line">                self.uart_com_run_status = 0</span><br><span class="line">                win32api.MessageBox(0, port+&quot;已被使用&quot;, &quot;警告&quot;,win32con.MB_ICONWARNING)</span><br><span class="line">            else:</span><br><span class="line">                self.uart_com_run_status = 1</span><br><span class="line">                self.uart.open_uart_thread()</span><br><span class="line">                self.uart_en_push_button.setText(&#x27;关闭串口&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            self.uart_com_run_status = 0</span><br><span class="line">            self.uart.close_uart_thread()</span><br><span class="line">            self.uart_en_push_button.setText(&#x27;打开串口&#x27;)</span><br></pre></td></tr></table></figure><p>串口开启成功，在此点击时关闭串口，这个时候将标志置为 0，并且关闭串口和串口线程，设置按钮文本为打开串口即可。</p><p>附上成功开启串口和失败开启串口的演示：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210126/02.gif" alt=""></p><h4 id="串口的发送">串口的发送</h4><p>接下来实现串口的发送，发送这里，我们要知道发送的是 ascii 还是 hex 格式，所以我们要先判断当前勾选的发送格式，将之前 UI 的两个 radio button 分别分配一个点击回调事件，分别为 <code>self.send_ascii_radio_button.toggled.connect(self.uart_ascii_to_hex_send_radio_button_cb)</code> 和 <code>self.send_hex_radio_button.toggled.connect(self.uart_hex_to_ascii_send_radio_button_cb)</code>，这两个回调事件实现了将发送编辑框的两种格式的相互转换，并且用 <code>self.uart_send_hex_lock</code> 作为当前格式的标志，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">def uart_ascii_to_hex_send_radio_button_cb(self):</span><br><span class="line">        if self.send_ascii_radio_button.isChecked() == True:</span><br><span class="line">                self.uart_send_hex_lock = 0</span><br><span class="line">                send_text = self.uart_send_show.toPlainText().replace(&#x27; &#x27;, &#x27;&#x27;)</span><br><span class="line">                self.uart_send_show.clear()</span><br><span class="line">                hex_send_text = self.hex2bin(send_text)</span><br><span class="line">                self.uart_send_show.setText(hex_send_text)</span><br><span class="line">        else:</span><br><span class="line">            return</span><br><span class="line"></span><br><span class="line">def uart_hex_to_ascii_send_radio_button_cb(self):</span><br><span class="line">    if self.send_hex_radio_button.isChecked() == True:</span><br><span class="line">        self.uart_send_hex_lock = 1</span><br><span class="line">        text_list = []</span><br><span class="line">        send_text = bytes(self.uart_send_show.toPlainText(), encoding=&#x27;utf-8&#x27;)</span><br><span class="line">        for i in range(len(send_text)):</span><br><span class="line">            text_list.append(hex(send_text[i])[2:])</span><br><span class="line">        send_text_to_hex = &#x27; &#x27;.join(text_list)</span><br><span class="line">        self.uart_send_show.clear()</span><br><span class="line">        self.uart_send_show.setText(send_text_to_hex)</span><br><span class="line">    else:</span><br><span class="line">        return</span><br></pre></td></tr></table></figure><p>随后，设置一下发送按键的回调事件 <code>self.uart_send_push_button.clicked.connect(self.uart_send_push_button_cb)</code>，这里判断当前的格式，将编辑框的内容获取后，相应的处理后，调用底层接口发送出去，代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">def uart_send_push_button_cb(self):</span><br><span class="line">        if self.uart_com_run_status == 0:</span><br><span class="line">            return</span><br><span class="line">        send_data = &#x27;&#x27;</span><br><span class="line">        send_text = self.uart_send_show.toPlainText()</span><br><span class="line">        if send_text == &#x27;&#x27;:</span><br><span class="line">            return</span><br><span class="line">        if self.send_hex_radio_button.isChecked() == True:  # 十六进制发送</span><br><span class="line">            hex_send_text = self.hex2bin(send_text.replace(&#x27; &#x27;, &#x27;&#x27;))</span><br><span class="line">            send_data = bytes(hex_send_text,encoding=&#x27;utf-8&#x27;)</span><br><span class="line">        else:</span><br><span class="line">            send_data = send_text.encode()</span><br><span class="line">        self.uart.uart_send_func(send_data)</span><br></pre></td></tr></table></figure><p>附上，具体效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210126/03.gif" alt=""></p><h4 id="串口的接收">串口的接收</h4><p>发送也成功后，开始实现接收，接收的话，同样需要将接收分为 ascii 和 hex 格式，所以同样要将接收 UI 的两个 radio button 分别分配一个点击回调事件，分别为 <code>self.rec_ascii_radio_button.toggled.connect(self.uart_ascii_to_hex_rec_radio_button_cb)</code> 和 <code>self.rec_hex_radio_button.toggled.connect(self.uart_hex_to_ascii_rec_radio_button_cb)</code>，这两个回调事件实现了将接收编辑框接收的的两种格式的相互转换。具体代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def uart_ascii_to_hex_rec_radio_button_cb(self):</span><br><span class="line">        if self.rec_ascii_radio_button.isChecked() == True:</span><br><span class="line">            self.uart.uart_set_rec_hex_lock(0)</span><br><span class="line">        else:</span><br><span class="line">            return</span><br><span class="line">    </span><br><span class="line">    def uart_hex_to_ascii_rec_radio_button_cb(self):</span><br><span class="line">        if self.rec_hex_radio_button.isChecked() == True:</span><br><span class="line">            self.uart.uart_set_rec_hex_lock(1)</span><br><span class="line">        else:</span><br><span class="line">            return</span><br></pre></td></tr></table></figure><p>上面代码可以看到，这里单纯只是设定标志，因为处理是在底层串口接收线程中对这个标志做了处理，具体可以看上面串口底层的代码，这里就不再赘述了，显示接口通过信号的方式进行更新，设置回调事件 <code>self.uart_recv_updata_show_data_signal.connect(self.update_uart_recv_show_cb)</code>，在里面获取接收的数据，数据是由接收线程处理好后发送过来的，所以这边的回调处理同样很简单，具体如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def update_uart_recv_show_cb(self, data):</span><br><span class="line">        self.uart_rec_show.insertPlainText(data)</span><br><span class="line">        cursor = self.uart_rec_show.textCursor()</span><br><span class="line">        self.uart_rec_show.moveCursor(cursor.End)</span><br></pre></td></tr></table></figure><p>具体效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210126/04.gif" alt=""></p><h4 id="定时发送">定时发送</h4><p>接收搞定后，我们增加定时发送功能，定时发送功能需要用到定时器，同时要获取定时功能的开启和定时时间，相关的代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 定时器</span><br><span class="line">self.uart_timer_num = 1000</span><br><span class="line">self.uart_timer_line_edit.setText(&#x27;1000&#x27;)</span><br><span class="line">self.uart_timer_send = QTimer()</span><br><span class="line">self.uart_timer_send.timeout.connect(self.uart_timer_send_cb)</span><br><span class="line"></span><br><span class="line">def uart_timer_send_cb(self):</span><br><span class="line">    self.uart_send_push_button_cb()</span><br></pre></td></tr></table></figure><p>上面代码可以看出，创建了个定时器，并且将事件回调绑定在了 <code>uart_timer_send_cb</code> 中，回调里实现的就是不断的调用发送事件的回调，定时器的打开则通过 check box 控件，具体代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">def uart_time_en_check_box_cb(self):</span><br><span class="line">    if self.uart_com_run_status == 0:</span><br><span class="line">        self.uart_timer_check_box.setChecked(False)</span><br><span class="line">        return None</span><br><span class="line"></span><br><span class="line">    if self.uart_timer_check_box.isChecked() == True:</span><br><span class="line">        self.uart_timer_send.start(int(self.uart_timer_num))</span><br><span class="line">    else:</span><br><span class="line">        self.uart_timer_send.stop()</span><br></pre></td></tr></table></figure><p>上述代码实现了，如果串口未运行，则不使用定时器，判断用户是否勾选该功能来开启和停止定时器。</p><p>串口关闭后也需要相应的关闭定时器，防止无用的调用发送。</p><p>具体效果如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210126/05.gif" alt=""></p><h1>其他</h1><p>定时功能做好后，还有个时间戳的功能，时间戳则是获取当前时间，根据标志判断时间戳是否开启，开启的话，则添加到显示数据中，相关的代码在串口底层的接收线程中，并且功能也比较简单，就不再详细的说了。同样的，还有发送清除和接收清除等简单的小功能，也不浪费太多篇幅。具体实现可以访问我的 github 中的 <a href="https://github.com/nixgnauhcuy/python_uart_tool">python_uart_tool</a> 库中，详细的代码都会提交在上边。</p><h2 id="结语">结语</h2><p><strong>python 串口逻辑代码的编写，就到这里结束了，这是一个简单的 demo，很多例如：限制输入内容、回显、快速发送时显示问题等功能我没有添加上去。</strong></p><p><strong>发现自己对写这种代码加解释的博文不是很熟悉，总感觉会有些地方不清楚该怎样描述，而且我本身不是主学 python 的，所以难免会有出错或者你认为代码不合理的地方，这些也希望多多谅解和指教，我会及时修改的！</strong></p><p><strong>关于本篇的相关代码我也上传到 github 上去了，有兴趣的可以访问 <a href="https://github.com/nixgnauhcuy/QtComMate">QtComMate</a> 和 <a href="https://github.com/nixgnauhcuy/python_uart_tool">python_uart_tool</a> 查看，浏览的同时也可以在该 github 仓库中点个 Star 支持我一下😄。</strong></p><p><strong>与本文相关的内容还有：</strong><br><a href="https://www.nixgnauhcuy.cn/5f9e4d2c65bf/">python 开发环境搭建</a><br><a href="https://www.nixgnauhcuy.cn/93bdfa3a6163/">python 获取已连接wifi密码工具</a><br><a href="https://www.nixgnauhcuy.cn/20993293a762/">python 制作串口工具（一）</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> python </tag>
            
            <tag> 工具 </tag>
            
            <tag> 串口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python 制作串口工具（一）</title>
      <link href="/20993293a762/"/>
      <url>/20993293a762/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Life is short, you need Python. —— Bruce Eckel</p></blockquote><h2 id="前言">前言</h2><p>工作中偶尔会用到 python 来制作一些小工具，所以针对这些小工具，做了些简化，移除了一些比较复杂的功能，拿来分享。</p><hr><h2 id="UI-界面">UI 界面</h2><p>在实现具体逻辑之前，我们要先设计好串口工具的 UI 界面，这里我直接使用的 Qt Designer 来设计串口界面的布局。</p><p>最终效果布置好布局后是这样的：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/00.png" alt=""></p><p>实际预览效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/01.png" alt=""></p><h3 id="实现">实现</h3><p>打开 Qt Designer，点击新建 Main Window 窗体，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/02.png" alt=""></p><p>进入项目界面后，我们需要往里面拖入我们需要的控件，先添加两个 QGroupBox 控件并且设置文本为串口接收设置和串口发送设置， 一个作为我们的接收区，一个作为我们的发送区。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/03.png" alt=""></p><p>上面操作完成后，我们先来布置我们的接收区，先添加 Label 控件，分别设置文本为<code>串口选择、波特率、停止位、数据位、校验位</code>的五个 Label 控件。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/04.png" alt=""></p><p>然后，我们要增加组合框，方便后面选择串口的参数，同样从左边拖出五个 Combo Box 控件，然后双击控件，这里我只拿波特率的组合框来描述，其他的例如停止位数据位还有校验位的操作是一样的，除了串口选择的组合框不用设置外，其他的都要设置。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/05.png" alt=""></p><p>双击波特率的组合框控件后，点击左下的 + 号，增加我们可选的波特率就可以了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/06.png" alt=""></p><blockquote><p>其他的 Combo Box 控件设置如下：</p><p>停止位分别设置 1、1.5、2 三个选项</p><p>数据位分别设置 8、7、6、5 四个选项</p><p>校验位分别设置 None、Odd、Even 三个选项</p></blockquote><p><strong>这样就把常用的波特率、停止位、数据位和校验位的选项框设置好了。</strong></p><p>接下来，我们增加两个 RadioButton 和一个 Check Box 控件，分别设置两个 RadioButton 文本为 <code>ASCII</code> 和 <code>HEX</code>，设置 Check Box 文本为<code>时间戳</code>。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/07.png" alt=""></p><p>最后，增加两个 Push Button 控件还有一个 TextEdit 控件，Push Button 分别将文本命名为<code>清除接收</code>和<code>打开串口</code>。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/08.png" alt=""></p><p>这样基本上接收区就设置完毕了。</p><hr><p>接下来是发送区，发送区中 Label、TextEdit、RadioButton、 Push Button 还有 Check Box 上面已经说过了，同样设置一下就可以了，这里就不占用太多篇幅了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/09.png" alt=""></p><p>随后，我们要添加一个 LineEdit 控件，后面可以作为定时发送的时间。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/10.png" alt=""></p><p>这样，发送区也设置完毕了。</p><hr><p>上面的接收区和发送区做完后，我们要将控件摆放整齐，并且设置控件的 objectName，方便后面编写程序调用控件时，一眼就知道编辑的是哪个控件。</p><p>控件的摆放我就不过多赘述了，无非就是调整位置和宽高，这里我标注一下我设置的控件 objectName，不然后面看代码的时候就不知道我是对哪个控件操作。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/11.png" alt=""></p><h3 id="生成对应的-py-文件">生成对应的 .py 文件</h3><p>完成后，我们保存我们做好的 UI 到工程下，这里我将文件命名为 uart_tool_ui.ui 然后保存到后面要编写串口工具的工程目录下。保存的 .ui 文件还不能直接使用，要将它转为 .py 文件，方便后续调用，这里我使用的编译器是 vscode，使用 vscode 将 .ui 转为 .py 输出，vscode 要安装 pyqt 的扩展，这里我就不多说了，网上搜一下就可以了，我就直接贴上转化好的 .py 代码。</p><p><strong>uart_tool_ui.py</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"></span><br><span class="line"># Form implementation generated from reading ui file &#x27;d:\test\my\python_uart_tool\uart_tool_ui.ui&#x27;</span><br><span class="line">#</span><br><span class="line"># Created by: PyQt5 UI code generator 5.13.0</span><br><span class="line">#</span><br><span class="line"># WARNING! All changes made in this file will be lost!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from PyQt5 import QtCore, QtGui, QtWidgets</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Ui_MainWindow(object):</span><br><span class="line">    def setupUi(self, MainWindow):</span><br><span class="line">        MainWindow.setObjectName(&quot;MainWindow&quot;)</span><br><span class="line">        MainWindow.resize(800, 506)</span><br><span class="line">        self.centralwidget = QtWidgets.QWidget(MainWindow)</span><br><span class="line">        self.centralwidget.setObjectName(&quot;centralwidget&quot;)</span><br><span class="line">        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)</span><br><span class="line">        self.groupBox.setGeometry(QtCore.QRect(10, 10, 781, 291))</span><br><span class="line">        self.groupBox.setObjectName(&quot;groupBox&quot;)</span><br><span class="line">        self.timestamp_check_box = QtWidgets.QCheckBox(self.groupBox)</span><br><span class="line">        self.timestamp_check_box.setGeometry(QtCore.QRect(10, 225, 61, 16))</span><br><span class="line">        self.timestamp_check_box.setObjectName(&quot;timestamp_check_box&quot;)</span><br><span class="line">        self.label_7 = QtWidgets.QLabel(self.groupBox)</span><br><span class="line">        self.label_7.setGeometry(QtCore.QRect(10, 175, 54, 12))</span><br><span class="line">        self.label_7.setObjectName(&quot;label_7&quot;)</span><br><span class="line">        self.rec_hex_radio_button = QtWidgets.QRadioButton(self.groupBox)</span><br><span class="line">        self.rec_hex_radio_button.setGeometry(QtCore.QRect(70, 200, 41, 16))</span><br><span class="line">        self.rec_hex_radio_button.setObjectName(&quot;rec_hex_radio_button&quot;)</span><br><span class="line">        self.com_combo_box = QtWidgets.QComboBox(self.groupBox)</span><br><span class="line">        self.com_combo_box.setGeometry(QtCore.QRect(10, 50, 141, 22))</span><br><span class="line">        self.com_combo_box.setObjectName(&quot;com_combo_box&quot;)</span><br><span class="line">        self.stopbit_combo_box = QtWidgets.QComboBox(self.groupBox)</span><br><span class="line">        self.stopbit_combo_box.setGeometry(QtCore.QRect(58, 110, 91, 22))</span><br><span class="line">        self.stopbit_combo_box.setObjectName(&quot;stopbit_combo_box&quot;)</span><br><span class="line">        self.stopbit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.stopbit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.stopbit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.label_6 = QtWidgets.QLabel(self.groupBox)</span><br><span class="line">        self.label_6.setGeometry(QtCore.QRect(10, 145, 54, 12))</span><br><span class="line">        self.label_6.setObjectName(&quot;label_6&quot;)</span><br><span class="line">        self.baud_combo_box = QtWidgets.QComboBox(self.groupBox)</span><br><span class="line">        self.baud_combo_box.setGeometry(QtCore.QRect(58, 80, 91, 22))</span><br><span class="line">        self.baud_combo_box.setObjectName(&quot;baud_combo_box&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.baud_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.label_5 = QtWidgets.QLabel(self.groupBox)</span><br><span class="line">        self.label_5.setGeometry(QtCore.QRect(10, 115, 54, 12))</span><br><span class="line">        self.label_5.setObjectName(&quot;label_5&quot;)</span><br><span class="line">        self.label_4 = QtWidgets.QLabel(self.groupBox)</span><br><span class="line">        self.label_4.setGeometry(QtCore.QRect(10, 85, 54, 12))</span><br><span class="line">        self.label_4.setObjectName(&quot;label_4&quot;)</span><br><span class="line">        self.checkbit_combo_box = QtWidgets.QComboBox(self.groupBox)</span><br><span class="line">        self.checkbit_combo_box.setGeometry(QtCore.QRect(58, 170, 91, 22))</span><br><span class="line">        self.checkbit_combo_box.setObjectName(&quot;checkbit_combo_box&quot;)</span><br><span class="line">        self.checkbit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.checkbit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.checkbit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.label_3 = QtWidgets.QLabel(self.groupBox)</span><br><span class="line">        self.label_3.setGeometry(QtCore.QRect(10, 22, 54, 20))</span><br><span class="line">        self.label_3.setObjectName(&quot;label_3&quot;)</span><br><span class="line">        self.databit_combo_box = QtWidgets.QComboBox(self.groupBox)</span><br><span class="line">        self.databit_combo_box.setGeometry(QtCore.QRect(58, 140, 91, 22))</span><br><span class="line">        self.databit_combo_box.setObjectName(&quot;databit_combo_box&quot;)</span><br><span class="line">        self.databit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.databit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.databit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.databit_combo_box.addItem(&quot;&quot;)</span><br><span class="line">        self.uart_en_push_button = QtWidgets.QPushButton(self.groupBox)</span><br><span class="line">        self.uart_en_push_button.setGeometry(QtCore.QRect(10, 250, 141, 23))</span><br><span class="line">        self.uart_en_push_button.setObjectName(&quot;uart_en_push_button&quot;)</span><br><span class="line">        self.rec_ascii_radio_button = QtWidgets.QRadioButton(self.groupBox)</span><br><span class="line">        self.rec_ascii_radio_button.setGeometry(QtCore.QRect(10, 200, 51, 16))</span><br><span class="line">        self.rec_ascii_radio_button.setObjectName(&quot;rec_ascii_radio_button&quot;)</span><br><span class="line">        self.uart_rec_show = QtWidgets.QTextEdit(self.groupBox)</span><br><span class="line">        self.uart_rec_show.setGeometry(QtCore.QRect(170, 10, 601, 271))</span><br><span class="line">        self.uart_rec_show.setFocusPolicy(QtCore.Qt.NoFocus)</span><br><span class="line">        self.uart_rec_show.setObjectName(&quot;uart_rec_show&quot;)</span><br><span class="line">        self.uart_clear_rec_push_button = QtWidgets.QPushButton(self.groupBox)</span><br><span class="line">        self.uart_clear_rec_push_button.setGeometry(QtCore.QRect(70, 220, 71, 23))</span><br><span class="line">        self.uart_clear_rec_push_button.setObjectName(&quot;uart_clear_rec_push_button&quot;)</span><br><span class="line">        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)</span><br><span class="line">        self.groupBox_2.setGeometry(QtCore.QRect(10, 300, 781, 151))</span><br><span class="line">        self.groupBox_2.setObjectName(&quot;groupBox_2&quot;)</span><br><span class="line">        self.send_ascii_radio_button = QtWidgets.QRadioButton(self.groupBox_2)</span><br><span class="line">        self.send_ascii_radio_button.setGeometry(QtCore.QRect(10, 20, 51, 16))</span><br><span class="line">        self.send_ascii_radio_button.setObjectName(&quot;send_ascii_radio_button&quot;)</span><br><span class="line">        self.send_hex_radio_button = QtWidgets.QRadioButton(self.groupBox_2)</span><br><span class="line">        self.send_hex_radio_button.setGeometry(QtCore.QRect(70, 20, 41, 16))</span><br><span class="line">        self.send_hex_radio_button.setObjectName(&quot;send_hex_radio_button&quot;)</span><br><span class="line">        self.uart_timer_check_box = QtWidgets.QCheckBox(self.groupBox_2)</span><br><span class="line">        self.uart_timer_check_box.setGeometry(QtCore.QRect(10, 47, 47, 16))</span><br><span class="line">        self.uart_timer_check_box.setObjectName(&quot;uart_timer_check_box&quot;)</span><br><span class="line">        self.uart1_ms_label = QtWidgets.QLabel(self.groupBox_2)</span><br><span class="line">        self.uart1_ms_label.setGeometry(QtCore.QRect(140, 45, 20, 20))</span><br><span class="line">        self.uart1_ms_label.setObjectName(&quot;uart1_ms_label&quot;)</span><br><span class="line">        self.uart_timer_line_edit = QtWidgets.QLineEdit(self.groupBox_2)</span><br><span class="line">        self.uart_timer_line_edit.setGeometry(QtCore.QRect(70, 45, 61, 20))</span><br><span class="line">        self.uart_timer_line_edit.setObjectName(&quot;uart_timer_line_edit&quot;)</span><br><span class="line">        self.uart_send_push_button = QtWidgets.QPushButton(self.groupBox_2)</span><br><span class="line">        self.uart_send_push_button.setGeometry(QtCore.QRect(80, 70, 75, 23))</span><br><span class="line">        self.uart_send_push_button.setObjectName(&quot;uart_send_push_button&quot;)</span><br><span class="line">        self.uart_send_clear_push_button = QtWidgets.QPushButton(self.groupBox_2)</span><br><span class="line">        self.uart_send_clear_push_button.setGeometry(QtCore.QRect(0, 70, 75, 23))</span><br><span class="line">        self.uart_send_clear_push_button.setObjectName(&quot;uart_send_clear_push_button&quot;)</span><br><span class="line">        self.uart_send_show = QtWidgets.QTextEdit(self.groupBox_2)</span><br><span class="line">        self.uart_send_show.setGeometry(QtCore.QRect(170, 10, 601, 131))</span><br><span class="line">        self.uart_send_show.setFocusPolicy(QtCore.Qt.NoFocus)</span><br><span class="line">        self.uart_send_show.setObjectName(&quot;uart_send_show&quot;)</span><br><span class="line">        self.label = QtWidgets.QLabel(self.groupBox_2)</span><br><span class="line">        self.label.setGeometry(QtCore.QRect(10, 100, 18, 12))</span><br><span class="line">        self.label.setObjectName(&quot;label&quot;)</span><br><span class="line">        self.uart_tx_data_count_label = QtWidgets.QLabel(self.groupBox_2)</span><br><span class="line">        self.uart_tx_data_count_label.setGeometry(QtCore.QRect(30, 120, 100, 12))</span><br><span class="line">        self.uart_tx_data_count_label.setObjectName(&quot;uart_tx_data_count_label&quot;)</span><br><span class="line">        self.uart_rx_data_count_label = QtWidgets.QLabel(self.groupBox_2)</span><br><span class="line">        self.uart_rx_data_count_label.setGeometry(QtCore.QRect(30, 100, 100, 12))</span><br><span class="line">        self.uart_rx_data_count_label.setObjectName(&quot;uart_rx_data_count_label&quot;)</span><br><span class="line">        self.label_2 = QtWidgets.QLabel(self.groupBox_2)</span><br><span class="line">        self.label_2.setGeometry(QtCore.QRect(10, 120, 18, 12))</span><br><span class="line">        self.label_2.setObjectName(&quot;label_2&quot;)</span><br><span class="line">        MainWindow.setCentralWidget(self.centralwidget)</span><br><span class="line">        self.statusbar = QtWidgets.QStatusBar(MainWindow)</span><br><span class="line">        self.statusbar.setObjectName(&quot;statusbar&quot;)</span><br><span class="line">        MainWindow.setStatusBar(self.statusbar)</span><br><span class="line">        self.menuBar = QtWidgets.QMenuBar(MainWindow)</span><br><span class="line">        self.menuBar.setGeometry(QtCore.QRect(0, 0, 800, 23))</span><br><span class="line">        self.menuBar.setObjectName(&quot;menuBar&quot;)</span><br><span class="line">        self.menu = QtWidgets.QMenu(self.menuBar)</span><br><span class="line">        self.menu.setObjectName(&quot;menu&quot;)</span><br><span class="line">        MainWindow.setMenuBar(self.menuBar)</span><br><span class="line">        self.actionguanyu = QtWidgets.QAction(MainWindow)</span><br><span class="line">        self.actionguanyu.setObjectName(&quot;actionguanyu&quot;)</span><br><span class="line">        self.menu.addAction(self.actionguanyu)</span><br><span class="line">        self.menuBar.addAction(self.menu.menuAction())</span><br><span class="line"></span><br><span class="line">        self.retranslateUi(MainWindow)</span><br><span class="line">        QtCore.QMetaObject.connectSlotsByName(MainWindow)</span><br><span class="line"></span><br><span class="line">    def retranslateUi(self, MainWindow):</span><br><span class="line">        _translate = QtCore.QCoreApplication.translate</span><br><span class="line">        MainWindow.setWindowTitle(_translate(&quot;MainWindow&quot;, &quot;MainWindow&quot;))</span><br><span class="line">        self.groupBox.setTitle(_translate(&quot;MainWindow&quot;, &quot;串口接收设置&quot;))</span><br><span class="line">        self.timestamp_check_box.setText(_translate(&quot;MainWindow&quot;, &quot;时间戳&quot;))</span><br><span class="line">        self.label_7.setText(_translate(&quot;MainWindow&quot;, &quot;校验位&quot;))</span><br><span class="line">        self.rec_hex_radio_button.setText(_translate(&quot;MainWindow&quot;, &quot;HEX&quot;))</span><br><span class="line">        self.stopbit_combo_box.setItemText(0, _translate(&quot;MainWindow&quot;, &quot;1&quot;))</span><br><span class="line">        self.stopbit_combo_box.setItemText(1, _translate(&quot;MainWindow&quot;, &quot;1.5&quot;))</span><br><span class="line">        self.stopbit_combo_box.setItemText(2, _translate(&quot;MainWindow&quot;, &quot;2&quot;))</span><br><span class="line">        self.label_6.setText(_translate(&quot;MainWindow&quot;, &quot;数据位&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(0, _translate(&quot;MainWindow&quot;, &quot;110&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(1, _translate(&quot;MainWindow&quot;, &quot;300&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(2, _translate(&quot;MainWindow&quot;, &quot;600&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(3, _translate(&quot;MainWindow&quot;, &quot;1200&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(4, _translate(&quot;MainWindow&quot;, &quot;2400&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(5, _translate(&quot;MainWindow&quot;, &quot;4800&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(6, _translate(&quot;MainWindow&quot;, &quot;9600&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(7, _translate(&quot;MainWindow&quot;, &quot;14400&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(8, _translate(&quot;MainWindow&quot;, &quot;19200&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(9, _translate(&quot;MainWindow&quot;, &quot;38400&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(10, _translate(&quot;MainWindow&quot;, &quot;43000&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(11, _translate(&quot;MainWindow&quot;, &quot;57600&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(12, _translate(&quot;MainWindow&quot;, &quot;76800&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(13, _translate(&quot;MainWindow&quot;, &quot;115200&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(14, _translate(&quot;MainWindow&quot;, &quot;128000&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(15, _translate(&quot;MainWindow&quot;, &quot;230400&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(16, _translate(&quot;MainWindow&quot;, &quot;256000&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(17, _translate(&quot;MainWindow&quot;, &quot;460800&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(18, _translate(&quot;MainWindow&quot;, &quot;921600&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(19, _translate(&quot;MainWindow&quot;, &quot;1000000&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(20, _translate(&quot;MainWindow&quot;, &quot;2000000&quot;))</span><br><span class="line">        self.baud_combo_box.setItemText(21, _translate(&quot;MainWindow&quot;, &quot;3000000&quot;))</span><br><span class="line">        self.label_5.setText(_translate(&quot;MainWindow&quot;, &quot;停止位&quot;))</span><br><span class="line">        self.label_4.setText(_translate(&quot;MainWindow&quot;, &quot;波特率&quot;))</span><br><span class="line">        self.checkbit_combo_box.setItemText(0, _translate(&quot;MainWindow&quot;, &quot;None&quot;))</span><br><span class="line">        self.checkbit_combo_box.setItemText(1, _translate(&quot;MainWindow&quot;, &quot;Odd&quot;))</span><br><span class="line">        self.checkbit_combo_box.setItemText(2, _translate(&quot;MainWindow&quot;, &quot;Even&quot;))</span><br><span class="line">        self.label_3.setText(_translate(&quot;MainWindow&quot;, &quot;串口选择&quot;))</span><br><span class="line">        self.databit_combo_box.setItemText(0, _translate(&quot;MainWindow&quot;, &quot;8&quot;))</span><br><span class="line">        self.databit_combo_box.setItemText(1, _translate(&quot;MainWindow&quot;, &quot;7&quot;))</span><br><span class="line">        self.databit_combo_box.setItemText(2, _translate(&quot;MainWindow&quot;, &quot;6&quot;))</span><br><span class="line">        self.databit_combo_box.setItemText(3, _translate(&quot;MainWindow&quot;, &quot;5&quot;))</span><br><span class="line">        self.uart_en_push_button.setText(_translate(&quot;MainWindow&quot;, &quot;打开串口&quot;))</span><br><span class="line">        self.rec_ascii_radio_button.setText(_translate(&quot;MainWindow&quot;, &quot;ASCII&quot;))</span><br><span class="line">        self.uart_clear_rec_push_button.setText(_translate(&quot;MainWindow&quot;, &quot;清除接收&quot;))</span><br><span class="line">        self.groupBox_2.setTitle(_translate(&quot;MainWindow&quot;, &quot;串口发送设置&quot;))</span><br><span class="line">        self.send_ascii_radio_button.setText(_translate(&quot;MainWindow&quot;, &quot;ASCII&quot;))</span><br><span class="line">        self.send_hex_radio_button.setText(_translate(&quot;MainWindow&quot;, &quot;HEX&quot;))</span><br><span class="line">        self.uart_timer_check_box.setText(_translate(&quot;MainWindow&quot;, &quot;定时&quot;))</span><br><span class="line">        self.uart1_ms_label.setText(_translate(&quot;MainWindow&quot;, &quot;ms&quot;))</span><br><span class="line">        self.uart_send_push_button.setText(_translate(&quot;MainWindow&quot;, &quot;发送数据&quot;))</span><br><span class="line">        self.uart_send_clear_push_button.setText(_translate(&quot;MainWindow&quot;, &quot;清除发送&quot;))</span><br><span class="line">        self.label.setText(_translate(&quot;MainWindow&quot;, &quot;R：&quot;))</span><br><span class="line">        self.uart_tx_data_count_label.setText(_translate(&quot;MainWindow&quot;, &quot;0&quot;))</span><br><span class="line">        self.uart_rx_data_count_label.setText(_translate(&quot;MainWindow&quot;, &quot;0&quot;))</span><br><span class="line">        self.label_2.setText(_translate(&quot;MainWindow&quot;, &quot;T：&quot;))</span><br><span class="line">        self.menu.setTitle(_translate(&quot;MainWindow&quot;, &quot;帮助&quot;))</span><br><span class="line">        self.actionguanyu.setText(_translate(&quot;MainWindow&quot;, &quot;关于&quot;))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="查看效果">查看效果</h3><p>在工程中编写我们的 <a href="http://main.py">main.py</a>，运行看看效果，</p><p><a href="http://main.py">main.py</a> 代码如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">from Ui_uart_tool_ui import Ui_MainWindow</span><br><span class="line">from PyQt5.QtWidgets import (QApplication, QMainWindow)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyPyQT_Form(QMainWindow, Ui_MainWindow):</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super().__init__()</span><br><span class="line">        self.setupUi(self)</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    </span><br><span class="line">    app = QApplication(sys.argv)</span><br><span class="line">    my_pyqt_form = MyPyQT_Form()</span><br><span class="line">    my_pyqt_form.show()</span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p>然后运行效果如下：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210119/12.gif" alt=""></p><h2 id="结语">结语</h2><p><strong>python 串口逻辑代码的编写，得留到下一篇了，平时工作忙不是特别有空，等我空闲的时候再补上！我本身不是学 python 的，所以难免会有出错或者你认为代码不合理的地方，这些也希望多多谅解和指教，我会及时修改的！</strong></p><p><strong>关于本篇的相关代码我也上传到 github 上去了，有兴趣的可以访问 <a href="https://github.com/nixgnauhcuy/QtComMate">QtComMate</a> 和 <a href="https://github.com/nixgnauhcuy/python_uart_tool">python_uart_tool</a> 查看，浏览的同时也可以在该 github 仓库中点个 Star 支持我一下😄。</strong></p><p><strong>与本文相关的内容还有：</strong><br><a href="https://www.nixgnauhcuy.cn/5f9e4d2c65bf/">python 开发环境搭建</a><br><a href="https://www.nixgnauhcuy.cn/93bdfa3a6163/">python 获取已连接wifi密码工具</a><br><a href="https://www.nixgnauhcuy.cn/20993293a762/">python 制作串口工具（二）</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> python </tag>
            
            <tag> 工具 </tag>
            
            <tag> 串口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取结构体成员偏移量的方法</title>
      <link href="/e39ae38ff688/"/>
      <url>/e39ae38ff688/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>不要站着调试程序，那会使得你的耐心减半，你需要的是全神贯注。—— Dave Storer</strong></p></blockquote><h2 id="前言"><em><strong>前言</strong></em></h2><p><strong>记录工作中学习到的知识，在这里做些笔记，方便自己后面经常温习。</strong></p><hr><h2 id="正文"><em><strong>正文</strong></em></h2><h3 id="为什么要获取结构体成员变量的偏移"><em><strong>为什么要获取结构体成员变量的偏移</strong></em></h3><p><strong>我在做嵌入式工作时，在已知要获取信息的 flash 地址时，需要取出相对应的信息元素，这个时候时常需要知道结构体相对于已知地址的偏移，方便快捷的从 flash 中取出信息元素，所以时常使用这个方式。</strong></p><hr><h3 id="方法"><em><strong>方法</strong></em></h3><p><strong>我们先用普通的方法获取结构体偏移，代码如下：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">typedef struct &#123;</span><br><span class="line">    int a;</span><br><span class="line">    int b;</span><br><span class="line">    int c;</span><br><span class="line">&#125;x_t;</span><br><span class="line"></span><br><span class="line">void test(void)</span><br><span class="line">&#123;</span><br><span class="line">    x_t p;</span><br><span class="line">    printf(&quot;p_addr=%d\r\n&quot;, (int)&amp;p);</span><br><span class="line">    printf(&quot;p.a_addr=%d\r\n&quot;, (int)&amp;p.a);</span><br><span class="line">    printf(&quot;p.b_addr=%d\r\n&quot;, (int)&amp;p.b);</span><br><span class="line">    printf(&quot;p.c_addr=%d\r\n&quot;, (int)&amp;p.c);</span><br><span class="line"></span><br><span class="line">    printf(&quot;a_offset=%d\r\n&quot;, (int)&amp;(p.a)-(int)&amp;p);</span><br><span class="line">    printf(&quot;b_offset=%d\r\n&quot;, (int)&amp;(p.b)-(int)&amp;p);</span><br><span class="line">    printf(&quot;c_offset=%d\r\n&quot;, (int)&amp;(p.c)-(int)&amp;p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    test();    </span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出结果：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210112/00.jpg" alt=""></p><p><strong>可以看出，如果要获取结构体成员变量相对于结构体的偏移，则需要先获取结构体地址，再获取成员变量地址，成员变量地址减去结构体地址，才能获取相应的偏移。</strong></p><p><strong>我们再用另一种方式获取结构体偏移，代码如下：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">typedef struct &#123;</span><br><span class="line">int a;</span><br><span class="line">int b;</span><br><span class="line">int c;</span><br><span class="line">&#125;x_t;</span><br><span class="line"></span><br><span class="line">void test1(void)</span><br><span class="line">&#123;</span><br><span class="line">x_t * p = 0;</span><br><span class="line">printf(&quot;a_offset = %d\n&quot;, (int)(&amp;(p-&gt;a)));</span><br><span class="line">printf(&quot;b_offset = %d\n&quot;, (int)(&amp;(p-&gt;b)));</span><br><span class="line">printf(&quot;c_offset = %d\n&quot;, (int)(&amp;(p-&gt;c)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">test1();</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出结果：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210112/01.jpg" alt=""></p><p><strong>这里先把结构体地址指向地址 0x00000000，这时候获取成员变量相对于结构体的偏移就轻松多了，减少了一步操作，减少了计算量。</strong></p><hr><h3 id="linux内核代码求结构体成员变量偏移的方法"><em><strong>linux内核代码求结构体成员变量偏移的方法</strong></em></h3><p><strong>在内核代码 ./include/linux/stddef.h 文件中有如下定义：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210112/02.jpg" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#ifndef __CHECKER__</span><br><span class="line">#undef offsetof</span><br><span class="line">#define offsetof(TYPE, MEMBER) ((size_t) &amp;((TYPE *)0)-&gt;MEMBER)</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure><p><strong>我们参考代码编写后：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"></span><br><span class="line">typedef struct</span><br><span class="line">&#123;</span><br><span class="line">int a;</span><br><span class="line">int b;</span><br><span class="line">int c;</span><br><span class="line">&#125;x_t;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#define offsetof(TYPE, MEMBER) ((size_t) &amp;(((TYPE*)0)-&gt;MEMBER))</span><br><span class="line"></span><br><span class="line">void test2()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;a_offset = %d\n&quot;, (int)&amp;((x_t*)0)-&gt;a);</span><br><span class="line">printf(&quot;b_offset = %d\n&quot;, (int)&amp;((x_t*)0)-&gt;b);</span><br><span class="line">printf(&quot;c_offset = %d\n&quot;, (int)&amp;((x_t*)0)-&gt;c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void test3()</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;a_offset = %d\n&quot;, offsetof(x_t, a));</span><br><span class="line">printf(&quot;b_offset = %d\n&quot;, offsetof(x_t, b));</span><br><span class="line">printf(&quot;c_offset = %d\n&quot;, offsetof(x_t, c));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;test2():\r\n&quot;);</span><br><span class="line">test2();</span><br><span class="line">printf(&quot;test3():\r\n&quot;);</span><br><span class="line">test3();</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出结果：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210112/03.jpg" alt=""></p><p>test2 和 test3 与上边的 test1 方法其实是一样的，宏定义中的(TYPE*)0是一个空指针，如果使用空指针访问成员肯定造成段错误，但是前面的 “&amp;” 这个符号，表示我们仅仅取 MEMBER 字段的地址，而不是引用该字段内容，因此不会造成段错误。通过将结构体地址指向 0x0 来获得结构体成员变量相对结构体地址，即方便我们使用，也方便理解。</p><hr><h2 id="结尾"><em><strong>结尾</strong></em></h2><p><strong>正如前言说的，记录工作中积累的点滴经验，怕自己因为少用忘了，在这里做个记录，方便回顾。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nand Flash 和 Nor Flash 详解</title>
      <link href="/c12055e6ecf6/"/>
      <url>/c12055e6ecf6/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>代码写的越急，程序跑得越慢。—— Roy Carlson</strong></p></blockquote><h2 id="前言"><em><strong>前言</strong></em></h2><p>Nor Flash 和 Nand Flash 在各种嵌入式系统中都扮演着不可或缺的角色，所以在这里整理下。</p><hr><h2 id="历史"><em><strong>历史</strong></em></h2><blockquote><p>以下摘自<a href="https://zh.wikipedia.org/wiki/%E9%97%AA%E5%AD%98">维基百科</a></p><p>闪存（无论是 NOR 型或 NAND 型）是舛冈富士雄博士 1980 年申请了一个叫做 simultaneously erasable EEPROM 的专利。然而，东芝公司的论资排辈却让这项划时代的发明石沉大海，直到4年之后。“我终于被提拔了，可以不用批准就去工厂，让工人们帮忙做出样品了”，富士雄说。 据东芝表示闪存之所以命名为 “Flash” 是由舛冈博士的同事有泉正二建议，因为这种存储器的抹除流程让他想起了相机的闪光灯。舛冈博士在 1984 年的加州旧金山 IEEE 国际电子组件会议 （International Electron Devices Meeting, IEDM） 上发表了这项发明。Intel 看到了这项发明的巨大潜力，并于 1988 年推出第一款商业性的 NOR Flash 芯片。</p><p>NOR Flash 需要很长的时间进行抹写，但是它提供完整的寻址与资料总线，并允许随机存取存储器上的任何区域，这使的它非常适合取代老式的 ROM 芯片。当时 ROM 芯片主要用来存储几乎不需更新的代码，例如电脑的 BIOS 或机顶盒（Set-top Box）的固件。NOR Flash 可以承受一万到一百万次抹写循环，它同时也是早期的可移除式快闪存储媒体的基础。CompactFlash 本来便是以 NOR Flash 为基础的，虽然它之后跳槽到成本较低的 NAND Flash。</p><p>舛冈富士雄没有停止追求，在 1986 年发明了 NAND Flash，大大降低了制造成本。由于他的贡献，东芝奖励了他一笔几百美金的奖金和一个位置很高却悠闲的职位。做为一个工程师，他忍受不了这种待遇，不得不辞职进入大学继续科研。东芝在 1989 年的国际固态电路会议（ISSCC）上发表了 NAND Flash。NAND Flash 具有较快的抹写时间，而且每个存储单元的面积也较小，这让 NAND Flash 相较于 NOR Flash 具有较高的存储密度与较低的每比特成本。同时它的可抹除次数也高出 NOR Flash 十倍。然而 NAND Flash 的I/O接口并没有随机存取外部地址总线，它必须以区块性的方式进行读取，NAND Flash 典型的区块大小是数百至数千比特。</p><p>因为多数微处理器与微控制器要求字节等级的随机存取，所以 NAND Flash 不适合取代那些用以装载程序的 ROM。从这样的角度看来，NAND Flash 比较像光盘、硬盘这类的次级存储设备。NAND Flash 非常适合用于储存卡之类的大量存储设备。第一款创建在 NAND Flash 基础上的可移除式存储媒体是 SmartMedia，此后许多存储媒体也跟着采用 NAND Flash，包括 MultiMediaCard、Secure Digital、Memory Stick 与 xD 卡。</p><p>在很长一段时间，东芝公司甚至不承认 NOR flash 是舛冈富士雄发明的，宣称是 Intel 发明的。直到 IEEE 在 1997 年颁给舛冈富士雄特殊贡献奖后才改口。舛冈富士雄觉得自己的贡献被东芝公司抹杀了，于 2006 年起诉了东芝公司，并索要 10 亿日元的补偿，最后和东芝公司达成和解，得到 8700 万日元（合 758,000 美元）。</p></blockquote><hr><h2 id="Nor-Flash-和-Nand-Flash"><em><strong>Nor Flash 和 Nand Flash</strong></em></h2><h3 id="什么是-Nor-Flash-？"><em><strong>什么是 Nor Flash ？</strong></em></h3><p>Nor Flash 最常用于需要写入和读取单个字节数据的应用程序，并且最常用于需要随机访问和就地执行访问技术的应用程序。由于每个读取访问都花费相同的时间，因此顺序读取访问不会比随机访问快。擦除/编程周期通常可能很长。</p><p>当今的 Nor Flash 设备具有几兆比特和几千兆字节的容量。根据设备的不同，在写入数据之前必须擦除单个字节或扇区，擦除/编程速度通常低于 1MB/s。</p><p>Nor Flash 具有很高的可靠性，通常可将其数据完整性保持20年或更长时间。</p><p>Nor Flash 的特点是芯片内执行（XIP, eXecute In Place），这样应用程序可以直接在 flash 闪存内运行，不必再把代码读到系统 RAM 中。Nor Flash 的优点是传输效率很高，但是工艺复杂，价格较贵。在 1~4MB 的小容量时具有很高的成本效益，但是很低的写入和擦除速度大大影响了它的性能。Nor Flash 在开发板中应用的非常广泛，通过 JTAG/JLINK 把 boot 烧到 Nor Flash 中，通电后自动运行。</p><p>Nor Flash 非常适合低密度、高速读取应用，这些应用大多是只读的，通常被称为代码存储应用。</p><hr><h3 id="什么是-Nand-Flash-？"><em><strong>什么是 Nand Flash ？</strong></em></h3><p>Nand Flash 按块排列，可以在其中写入，读取或擦除数据。在顺序读取期间，接收第一个数据字节的等待时间比使用 Nor Flash 要长得多，但是随后读取数据的顺序字节要比使用NOR闪存快得多。写入数据时，可以将完整的数据块快速传输到 Nand Flash 设备，然后在单个操作中写入该数据块。有效的读取和写入速度以及块擦除时间比 Nor Flash 快得多。</p><p>Nand Flash 最适合执行大型顺序数据访问的系统，这与当今用作计算系统和带有面向块的存储子系统的操作系统的主要存储设备的映射非常吻合。</p><p>由于闪存单元的物理硅设计，对于类似的处理技术，Nand Flash 单元比 Nor Flash 单元占用的硅面积大约少 40%。</p><p>Nand Flash 其内部采用非线性宏单元模式，为固态大容量内存的实现提供了廉价有效的解决方案。Nand Flash 的优点是容量大、便宜、改写速度快，缺点是无法寻址直接运行程序，只能存储数据。另外Nand Flash 非常容易出现坏区，所以需要有校验的算法。应用 Nand Flash 的困难在于 Flash 的管理和需要特殊的系统接口。Nand Flash 适用于大量数据的存储，因而在业界得到了越来越广泛的应用，如嵌入式产品中包括数码相机、MP3 随身听记忆卡、体积小巧的U盘等。</p><p>Nand Flash 非常适合低成本、高密度、高速编程/擦除应用，通常被称为数据存储应用。</p><hr><h3 id="Nor-Flash-和-Nand-Flash-的共性"><em><strong>Nor Flash 和 Nand Flash 的共性</strong></em></h3><ul><li>都是非易失存储介质。即掉电都不会丢失内容。</li><li>在写入前都需要擦除。实际上 Nor Flash 的一个 bit 可以从 1 变成 0，而要从 0 变 1 就要擦除整块。NAND flash 都需要擦除。</li></ul><hr><h3 id="Nor-Flash-和-Nand-Flash-的差异"><em><strong>Nor Flash 和 Nand Flash 的差异</strong></em></h3><h4 id="结构差异"><em><strong>结构差异</strong></em></h4><ul><li><p>Nor Flash 体系结构提供了足够的地址线以映射整个存储器范围。这具有随机访问和读取时间短的优点，非常适合代码执行。采用内存的随机读取技术，各个存储单元并联连接，对存储单元进行统一编址，使器件能够实现随机访问。既然是统一编址，Nor Flash 就可以在芯片内执行，即应用程序可直接在 Flash 内运行，而无需先拷贝到 RAM。这种配置能够缩短随机存取微处理器指令所需的读取时间。</p></li><li><p>Nand Flash 是作为一种针对高密度数据存储进行优化的替代方案开发的，它放弃了随机访问能力，以实现更小的单元大小为代价，这意味着芯片大小会更小和单位成本会更低。数据线和地址线共用 I/O 线，需额外联接一些控制的输入输出。Nand Flash 通过对数据块进行编程来实现更快的写入和擦除。</p></li></ul><hr><h4 id="可靠性差异"><em><strong>可靠性差异</strong></em></h4><ul><li>寿命（耐用性）：Flash 写入和擦除数据时会导致介质的氧化降解。 Nor Flash 的擦写次数是 10 万次，Nand Flash 的擦写次数是 100 万次。</li><li>坏块处理：Nand Flash 器件的坏块是随机分布的，在使用过程中，难免会产生坏块。所以在使用时要进行坏块管理，以保障数据可靠。在 Flash 的位翻转(一个 bit 位发生翻转)现象上，Nand Flash 的出现几率要比 Nor Flash 大得多.这个问题在 Flash 存储关键文件时是致命的，所以在使用 Nand Flash 时建议同时使用EDC/ECC等校验算法.</li></ul><hr><h4 id="成本和容量差异"><em><strong>成本和容量差异</strong></em></h4><ul><li><p>Nand Flash 的单元尺寸几乎是 Nor Flash 器件的一半，由于生产过程更为简单，Nand Flash 结构可以在给定的模具尺寸内提供更高的容量，也就相应地降低了价格。</p></li><li><p>与 Nor Flash 相比，Nand Flash 的密度要高得多，主要是因为其每比特成本较低。Nand Flash 通常具有 1Gb 至 16Gb 的容量。Nor Flash 的密度范围从 64Mb 到 2Gb。由于 Nand Flash 具有更高的密度，因此主要用于数据存储应用。</p></li></ul><hr><h4 id="读写速度的差异"><em><strong>读写速度的差异</strong></em></h4><ul><li>Nor Flash 有更快的读取速度，Nand Flash 有更快的写、擦除速度。</li><li>Flash 是非易失存储器，可以存储器单元块进行擦写和再编程。任何 Flash 器件的写入操作只能在空或已擦除的单元内进行，所以大多数情况下，在进行写入操作之前必须先执行擦除。Nand Flash 器件执行擦除操作是十分简单的，而 Nor Flash 则要求在进行擦除前先要将目标块内所有的位都写为 0。由于擦除 Nor Flash 器件时是以 64-128KB 的块进行的，执行一个写入/擦除操作的时间为 5s，与此相反，擦除 Nand Flash 器件是以 8-32KB 的块进行的，执行相同的操作最多只需要 4ms。执行擦除时块尺寸的不同进一步拉大了 Nor Flash 和 Nand Flash 之间的性能差距。</li></ul><hr><h4 id="易用性的差异"><em><strong>易用性的差异</strong></em></h4><ul><li>Nor Flash 有专用的地址引脚来寻址，较容易和其他芯片联接，还支持本地执行。Nand Flash 的 IO 端口采用复用的数据线和地址线，必须先通过寄存器串行地进行数据存取。各厂商对信号的定义会有差异，增加了应用的难度。</li></ul><hr><h4 id="编程角度的差异"><em><strong>编程角度的差异</strong></em></h4><ul><li>Nor Flash 采用统一编址（有独立地址线），可随机读取每个“字”，但 Nor Flash 不能像 RAM 以字节改写数据，只能按“页”写，故 Nor Flash 不能代替 RAM。擦除既可整页擦除，也可整块擦除。Nand Flash 共用地址线和数据线，页是读写数据的最小单元，块是擦除数据的最小单元。另外，Flash 进行写操作时，只能将相应的位由 1 变 0，而擦除才能把块内所有位由 0 变 1。所有写入数据时，如果该页已经存在数据，必须先擦除再写。</li></ul><hr><h4 id="功耗的差异"><em><strong>功耗的差异</strong></em></h4><ul><li>在功耗方面，Nor Flash 闪存首次通电时需要比 Nand Flash 高的电流。但是，一旦上电，Nor Flash 的待机功耗就比 Nand Flash 低得多。因此，Nor Flash 通常更适合于从内存中进行随机读取，而 Nand Flash 在写入，擦除和顺序读取方面效率更高。</li></ul><hr><h4 id="整理为表格"><em><strong>整理为表格</strong></em></h4><table><thead><tr><th style="text-align:center">bin</th><th style="text-align:center">Nand Flash</th><th style="text-align:center">Nor Flash</th></tr></thead><tbody><tr><td style="text-align:center">容量</td><td style="text-align:center">很大</td><td style="text-align:center">较小</td></tr><tr><td style="text-align:center">xip(可执行代码)</td><td style="text-align:center">不行</td><td style="text-align:center">可以</td></tr><tr><td style="text-align:center">读写性能</td><td style="text-align:center">读取块(顺序读)、写入块、擦除块(可按块擦除)</td><td style="text-align:center">读取块(RAM 方式)、写入慢、擦除慢</td></tr><tr><td style="text-align:center">寿命</td><td style="text-align:center">约百万次</td><td style="text-align:center">约十万次</td></tr><tr><td style="text-align:center">访问方式</td><td style="text-align:center">顺序读写</td><td style="text-align:center">随机读写</td></tr><tr><td style="text-align:center">接口方式</td><td style="text-align:center">任意 I/O</td><td style="text-align:center">特定完整存储器接口</td></tr><tr><td style="text-align:center">价格</td><td style="text-align:center">低</td><td style="text-align:center">高</td></tr></tbody></table><ul><li>Nand Flash 读取速度与 Nor Flash 相近，根据接口的不同有所差异；</li><li>Nand Flash 的写入速度比 Nor Flash 快很多；</li><li>Nand Flash 的擦除速度比 Nor Flash 快很多；</li><li>Nand Flash 最大擦次数比 Nor Flash 多；</li><li>Nor Flash 支持片上执行，可以在上面直接运行代码；</li><li>Nor Flash 软件驱动比 Nand Flash 简单；</li><li>Nor Flash 可以随机按字节读取数据，Nand Flash 需要按块进行读取。</li><li>大容量下 Nand Flash 比 Nor Flash 成本要低很多，体积也更小；</li></ul><h3 id="结语"><em><strong>结语</strong></em></h3><p>本来是想要学习 Nor Flash 以及 Nand Flash 的知识，结果网上有非常多相似的文章，这方面的信息实在是太多了，所以基本就&quot;写&quot; 一点，&quot;搬运&quot;一点了。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> Nand Flash </tag>
            
            <tag> Nor Flash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PADS9.5 安装及破解</title>
      <link href="/df5996b70de7/"/>
      <url>/df5996b70de7/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>针对 PADS9.5 软件的安装和破解。</p><hr><h2 id="下载">下载</h2><blockquote><p><strong>安装软件之前，先把相应的安装包和补丁下载了。</strong></p><p><a href="https://pan.baidu.com/s/1Zn1YoeztXdGzVv-6Ou8AYg">PADS9.5 安装包和补丁</a> <strong>密码: <code>uc55</code></strong></p></blockquote><hr><h2 id="安装">安装</h2><p><strong>打开下载好的安装包路径，将 “PADS_9-5.part1.rar” 和 “PADS Logic PADS9.5Win10补丁.zip” 解压到当前目录。</strong></p><blockquote><p>注：<br>PADS_9-5.part1.rar 和 PADS_9-5.part2.rar 是分卷压缩包，我们只要解压 part1 就可以了。</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/00.png" alt=""></p><p><strong>解压完毕后，进入PADS_9-5文件夹,找到 ‘PADS9.5_mib’，右键属性，在兼容性中勾选以管理员身份运行此程序.</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/01.png" alt=""></p><p>设置好后，双击运行 ‘PADS9.5_mib’，进行安装，点击 ‘next’，然后点击 ‘skip’，再点击 ‘Agree’</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/02.png" alt=""></p><p>接下来,我们先配置下需要安装的东西，点击 ‘Modify’,然后选择 ‘Product Selection’,全部勾选，除了最后的 ‘Server Services’ 不勾选,</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/03.png" alt=""></p><p>然后,我们选择 ‘Target Path’,选择要安装的目录,这里我按默认的安装在 C 盘，最后的一个选项 ‘PADS Projects Path’ 选择PADS工程路径，这里我也按默认的来,选择好了安装路径后,我们点击 ‘Done’ 完成安装配置</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/04.png" alt=""></p><p>确认无误后,我们点击 ‘Install’ 开始安装,</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/05.png" alt=""></p><p>等到进度条走完后,我们选择 ‘at a later time’，先不打开软件，等到破解后,我们在打开</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/06.png" alt=""></p><p>这个时候,桌面就有了安装好的软件.</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/07.png" alt=""></p><hr><h2 id="破解">破解</h2><blockquote><p>前往 <a href="http://mentor.mr-wu.cn/">吴川斌的博客</a> 下载馒头破戒大师。</p></blockquote><p>将下载好的软件压缩包解压，找到 ‘MentorCrackMaster.exe’ 并双击运行它</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/08.png" alt=""></p><p>点击浏览，选择安装 PADS 的根目录,这里我刚才安装在 C 盘,所以在 C 盘里直接选中该路径就可以了,如果你安装在其他盘,一样找到 ‘MentorGraphics’ PADS 的根目录,选中该路径即可</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/09.png" alt=""></p><p>路径设置好后点击破戒,会弹出窗口,等待即可,</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/10.png" alt=""></p><p>破解成功会显示成功界面.</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/11.png" alt=""></p><h2 id="使用补丁">使用补丁</h2><p>破解完成后，随便打开 Logic 或者 Layout，然后打开选项后，会看到选项框显示重叠。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/12.png" alt=""></p><p>我们要解决这个选项框重叠的问题。</p><p>将软件关闭，定位到 .\MentorGraphics\9.5PADS\SDD_HOME\Programs\chs 和 .\MentorGraphics\9.5PADS\SDD_HOME\Programs\enu 两个文件夹，将下载的补丁中的 chs 和 enu 下的文件分别对应复制到上面两个文件夹中，替换即可(不放心的话，请先把两个文件夹同名的文件备份一份)，替换后打开软件即可。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/13.png" alt=""></p><p>重新打开软件的选项，问题解决。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20210104/14.png" alt=""></p><hr><h1>结语</h1><p>到这里，软件的基本使用都没有问题了。过程中有什么不能理解的，可以留言告知我！有什么错误，也可以指出来告诉我~</p><hr>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于嵌入式的bin、hex、axf、map</title>
      <link href="/05d8ba34e313/"/>
      <url>/05d8ba34e313/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>别在注释里陷得太深——注释很可能会误导你，你要调试的只是代码。</strong></p></blockquote><h2 id="前言"><em><strong>前言</strong></em></h2><p>记录工作中学习到的知识，在这里做些笔记，方便自己后面温习。</p><hr><h2 id="bin、hex、axf"><em><strong>bin、hex、axf</strong></em></h2><h3 id="bin、hex、axf-之间的关系"><em><strong>bin、hex、axf 之间的关系</strong></em></h3><table><thead><tr><th style="text-align:center">bin</th><th style="text-align:center">hex</th><th style="text-align:center">axf</th></tr></thead><tbody><tr><td style="text-align:center">数据</td><td style="text-align:center">数据</td><td style="text-align:center">数据</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">地址</td><td style="text-align:center">地址</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">调试信息</td></tr></tbody></table><p><strong>所以同一工程中 bin、hex、axf 的文件大小为 <code> .bin &lt; .hex &lt; .axf</code></strong></p><p><strong>假设 bin 文件是一个三无产品，那么hex就是一个带有信息的产品，而 axf 文件则是带有信息并且附了一张使用说明的产品。(<s>我也不知道这样举例合不合理，意思到位就行</s>)</strong></p><p><strong>因为 bin 文件没有地址信息，而 hex 文件带了地址信息，所以实际上我们使用烧录软件 (J-Flash.exe) 是这样的:</strong></p><blockquote><p>导入 .bin 时，因为没有地址信息，所以我们需要为它指定烧写的起始地址</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/00.jpg" alt=""></p></blockquote><blockquote><p>导入 .hex 时，因为包含了地址信息，所以我们不需要指定起始地址，烧录工具会自动读取要烧录的地址</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/01.jpg" alt=""></p></blockquote><hr><h3 id="bin-文件"><em><strong>bin 文件</strong></em></h3><p>上面已经说了 bin 文件起始不包含地址信息，所以 bin 文件只是单纯的二进制文件，是没有格式的程序文件，只是包含了程序数据。我们看到烧录到单片机的是 .hex 文件，但是实际上，烧录软件会帮我们将 hex 文件的地址解析提取，最后还是烧录的 .bin 文件</p><p><strong>下面这张图可以看出，J-Flash 解析 test.hex 地址信息后，实际上要烧录的还是 test.bin 的内容：</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/02.jpg" alt=""></p><hr><h3 id="hex-文件"><em><strong>hex 文件</strong></em></h3><blockquote><p>Hex 是由 Intel 制定的一种十六进制标准文件格式，是由编译器转换而成的一种用于下载到处理器里面的文件。</p><p>Hex 文件格式是由一行一行的十六进制数据组成，每行包含：开始、长度、数据、类型、校验和等重要信息。</p></blockquote><p><strong>一般 Hex 文件的记录格式如下:</strong></p><table><thead><tr><th style="text-align:center">Record mark</th><th style="text-align:center">Length</th><th style="text-align:center">Load offset</th><th style="text-align:center">Record type</th><th style="text-align:center">Info or Data</th><th style="text-align:center">Chksum</th></tr></thead><tbody><tr><td style="text-align:center">冒号</td><td style="text-align:center">byte(1)</td><td style="text-align:center">byte(2~3)</td><td style="text-align:center">byte(4)</td><td style="text-align:center">byte(5~n)</td><td style="text-align:center">byte(n+1)</td></tr><tr><td style="text-align:center">:</td><td style="text-align:center">数据长度</td><td style="text-align:center">起始地址</td><td style="text-align:center">数据类型</td><td style="text-align:center">数据</td><td style="text-align:center">校验和</td></tr></tbody></table><blockquote><ul><li><strong>Record mark：标记头(数据头)</strong></li><li><strong>Length：表示本行的数据长度(Info or Data)</strong></li><li><strong>Load offset：表示本行数据的起始地址</strong></li><li><strong>Record type：数据类型，共分：</strong></li></ul><blockquote><p>0x00 - Data Rrecord，数据记录<br>0x01 - End of FileRecord，用来标识文件结束，放在文件的最后，标识HEX文件的结尾<br>0x02 - Extended Segment Address Record，用来标识扩展段地址的记录，扩展段地址记录(HEX86)，它包含4~19位数据地址段。由于普通的 Intel 的 HEX 记录文件只能记录 64K 的地址范围，所以大于 64K 的地址数据要靠扩展段地址记录<br>0x03 - Start Segment Address Record，开始段地址记录<br>0x04 - Extended Linear Address Record，用来标识扩展线性地址的记录，扩展线性地址记录也叫 32 位地址记录或者 HEX386 记录，这些记录包含了数据在存储器里真实地址的高 16 位。 当一个扩展线性地址记录被读取后，将一直保持有效，直到它被另一个扩展地址记录改变。因为它记录的是后面数据在存储器里存放的真实起始地址，所以它的起始地址偏移量 (Load offset) 总是 0000<br>0x05 - Start Linear Address Record，开始线性地址记录</p></blockquote><ul><li><strong>Info or Data：数据代表一个字节的数据，一个记录可以有许多数据字节，数据字节数量应等于 Length</strong></li><li><strong>Chksum：一个字节，先将此字节前所有字节相加得到 sum，校验和=(0x100-sum &amp; 0xFF) &amp; 0xFF</strong></li></ul></blockquote><p>说了这么多，还是来实际验证一下，这里我贴出了test.hex的前3行和后3行，中间的其他内容省略：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">:020000040002F8</span><br><span class="line">:1060000070F60320A1640200A96402008D640200FE</span><br><span class="line">:10601000AD640200AF640200B16402000000000041</span><br><span class="line">...(略n行)</span><br><span class="line">:0CA2F000FFBF915A010401789495F0051D</span><br><span class="line">:040000050002620192</span><br><span class="line">:00000001FF</span><br></pre></td></tr></table></figure><p><code>:02|0000|04|0002|F8(头):</code></p><ul><li>02 - 本行数据长度为 2</li><li>0000 - 本行数据起始地址偏移为 0x0000</li><li>04 - 数据类型是标识扩展线性地址的记录</li><li>0002 - 本行 2 个数据为0x00和0x02，(这里 0x0002&lt;&lt;16=0x00020000，为基地址)</li><li>F8 - 校验和=0x100-(0x02+0x00+0x00+0x04+0x00+0x02)&amp;0xFF=0xF8</li></ul><p><code>:10|6000|00|70F60320A1640200A96402008D640200|FE</code></p><ul><li>10 - 本行数据长度为16</li><li>6000 - 本行数据起始地址偏移为0x6000，所以这里记录的地址是0x000020000+0x6000=0x00026000(这个可以看上面J-Flash，test.hex的起始地址刚好是0x26000)</li><li>00 - 数据类型是标识扩展线性地址的记录</li><li>70F60320A1640200A96402008D640200 - 本行16个数据为0x70,0xF6…0x02,0x00</li><li>FE - 校验和=0x100-(0x10+0x60+0x00…+0x02+0x00)&amp;0xFF=0xFE</li></ul><p><code>:00|0000|01|FF(尾)</code>:</p><ul><li>00 - 本行数据长度为0</li><li>0000 - 本行数据起始地址偏移为0x0000</li><li>01 - 数据类型是标识文件结束</li><li>FF - 校验和=0x100-(0x00+0x00+0x00+0x01)&amp;0xFF=0xFF</li></ul><p><strong>从上面这些可以验证出，hex 文件确实保存了 bin 文件的地址信息</strong></p><p>实际上 hex 文件会大于 2 倍的 bin 文件大小的，bin 文件一个 byte 在 hex 文件中用 Ascill 编码则需要用两个字符来表示一个字节，而且 hex 又包括了其他信息，所以一般 <strong>hex &gt; 2bin</strong>。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/03.jpg" alt=""></p><hr><h3 id="axf-文件"><em><strong>axf 文件</strong></em></h3><p><strong>axf,全称 ARM Executable File，它是由 ARM 编译器产生，除了包含 bin 的内容之外，还附加其他调试信息，这些调试信息加在可执行的二进制数据之前。调试时这些调试信息不会下载到 RAM 中，真正下载到 RAM 中的信息仅仅是可执行代码。</strong></p><blockquote><p>调试信息作用：</p><blockquote><ol><li>可将源代码包括注释夹在反汇编代码中，这样我们可随时切换到源代码中进行调试</li><li>我们还可以对程序中的函数调用情况进行跟踪(Keil可以通过Watch &amp; Call Stack Window查看)</li><li>对变量进行跟踪(Keil可以通过Watch &amp; Call Stack Window查看)</li></ol></blockquote></blockquote><h3 id="axf-文件转-bin-文件"><em><strong>axf 文件转 bin 文件</strong></em></h3><h4 id="fromelf-格式"><em><strong>fromelf 格式</strong></em></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">fromelf [options] input_file  (命令的格式)</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">       --help         display this help screen (显示帮助信息)</span><br><span class="line">       --vsn          display version information (显示版本信息)</span><br><span class="line">       --output file  the output file. (defaults to stdout for -text format) (输出文件(默认的输出为文本格式))</span><br><span class="line">       --nodebug      do not put debug areas in the output image (在生成的映象中不包含调试信息)</span><br><span class="line">       --nolinkview   do not put sections in the output image (在生成的映象中不包含段的信息)</span><br><span class="line"></span><br><span class="line">Binary Output Formats:</span><br><span class="line">       --bin          Plain Binary (生成Plain Binary格式的文件)</span><br><span class="line">       --m32          Motorola 32 bit Hex (生成Motorola 32位十六进制格式的文件)</span><br><span class="line">       --i32          Intel 32 bit Hex (生成Intel 32位十六进制格式的文件)</span><br><span class="line">       --vhx          Byte Oriented Hex format (面向字节的位十六进制格式的文件t)</span><br><span class="line"></span><br><span class="line">       --base addr    Optionally set base address for m32,i32 (设置m32，i32格式文件的基地址)</span><br><span class="line"></span><br><span class="line">Output Formats Requiring Debug Information (需要调试信息的格式)</span><br><span class="line">       --fieldoffsets Assembly Language Description of Structures/Classes (结构/类的汇编语言描述)</span><br><span class="line">       --expandarrays Arrays inside and outside structures are expanded (扩展数组内部和外部结构被扩展)</span><br><span class="line"></span><br><span class="line">Other Output Formats:</span><br><span class="line">       --elf         ELF</span><br><span class="line">       --text        Text Information (显示文本信息)</span><br><span class="line"></span><br><span class="line">                Flags for Text Information</span><br><span class="line">                -v          verbose (打印详细信息)</span><br><span class="line">                -a          print data addresses (For images built with debug) (打印数据地址(针对带调试信息的映象))</span><br><span class="line">                -c          disassemble code (打印反汇编代码)</span><br><span class="line">                -d          print contents of data section (打印数据段的内容)</span><br><span class="line">                -e          print exception tables (打印表达式表)</span><br><span class="line">                -g          print debug tables (打印调试表)</span><br><span class="line">                -r          print relocation information (打印重定位信息)</span><br><span class="line">                -s          print symbol table (打印字符表)</span><br><span class="line">                -t          print string table (打印字符串表)</span><br><span class="line">                -y          print dynamic segment contents (打印动态段的内容)</span><br><span class="line">                -z          print code and data size information (打印代码和数据大小的信息)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="将-axf-文件转-bin-文件"><em><strong>将 axf 文件转 bin 文件</strong></em></h4><p>在 Keil 的安装目录下，我的装在了 C 盘，在 <code>C:\Keil_v5\ARM\ARMCC\bin</code> 中，可以找到 <code>fromelf.exe</code> 这个可执行文件</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/04.jpg" alt=""></p><p>使用命令行工具，例如 win10 自带的或者 git 等，这里考虑大家不一定有其他命令行工具，所以直接用 win10 自带的命令行。</p><p><code>win+R</code> 打开运行，输入 <code>cmd</code> 打开运行,进入 <code>fromelf.exe</code> 路径</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/05.png" alt=""></p><p>这里我将要转化的文件放在 <code> F 盘 test 文件夹中</code>，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/06.jpg" alt=""></p><p>命令格式为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[fromelf.exe文件路径] --bin -o [BIN路径] [AXF文件路径]</span><br></pre></td></tr></table></figure><p>命令行输入:</p><blockquote><p>fromelf.exe --bin -o F:\test\test_bin_out.bin F:\test\test.axf</p></blockquote><p>可以看到在输出目录 F:\test 中，将 axf 文件转化生成为了 bin 文件，并且输出的 bin 文件和 keil 生成 bin 文件大小一致，说明是相同的文件</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/07.jpg" alt=""></p><h3 id="hex-文件和bin文件相互转换"><em><strong>hex 文件和bin文件相互转换</strong></em></h3><h4 id="srecord-软件"><em><strong>srecord 软件</strong></em></h4><p>在找软件时，在Keil官网看到 <a href="http://www.keil.com/download/docs/4.asp">BINARY to Motorola S-Record Converter Utility</a></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/08.jpg" alt=""></p><blockquote><p>翻译一下： srec_cat.exe 应用程序是 HEX2BIN，BIN2HEX，BIN2MOT 和 MOT2BIN 的绝佳替代品，用途更广泛。该工具是在 <a href="http://sourceforge.net">sourceforge.net</a> 上托管的 SRecord 项目的一部分。您可以从 <a href="https://sourceforge.net/projects/srecord/files/srecord-win32">https://sourceforge.net/projects/srecord/files/srecord-win32</a> 下载。</p></blockquote><p>后面我就下载下来研究了一下，发现可以替代 hex2bin 和 bin2hex，所以直接拿来使用。</p><h4 id="hex-转-bin"><em><strong>hex 转 bin</strong></em></h4><p>命令：</p><blockquote><p>srec_cat.exe *.hex -intel -offset -0x00000 -o *.bin -binary</p><blockquote><p>*.hex指定要转换的hex文件<br>*.bin指定要输出的文件名<br>-offset -0x00000这个指定偏移要根据工程指定来</p></blockquote></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/09.jpg" alt=""></p><p>这里我的偏移是0x26000，所以我输入的命令是：</p><blockquote><p>srec_cat.exe test.hex -intel -offset -0x26000 -o test_out.bin -binary</p></blockquote><p>上面转 axf 时，已经有了 test 文件，这里我把 srec_cat.exe 放在了 F:/test1/srecord 中，并且把要转换的 test.hex 文件放在了 srecord 文件夹中</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/10.jpg" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/11.jpg" alt=""></p><p><code>可以看到生成的 test_out.bin 和 keil 生成的 test.bin 文件大小一致。</code></p><h4 id="bin-转-hex"><em><strong>bin 转 hex</strong></em></h4><p>参考<a href="http://www.keil.com/support/docs/2217.htm">Sorting Intel HEX Files</a>，这里我的命令是：</p><blockquote><p>srec_cat.exe test_out.bin -Binary -o test_hex_out.hex -intel -Output-Block-Size=16 -Disable_Sequence_Warnings</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/12.jpg" alt=""></p><p>这里实际上和 keil 生的 hex 文件有稍稍区别，因为我试了多种方式，都没有办法和 Keil 生成文件一样，虽然 binw 文件存储的数据一样，但是 crc 及偏移还是稍微有区别，</p><p><code>图左边是生成的hex文件，图右边是原先的hex文件</code></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/13.jpg" alt=""></p><h2 id="map"><em><strong>map</strong></em></h2><h3 id="map-文件"><em><strong>map 文件</strong></em></h3><p><strong>map文件是我们通过编译器编译生成的映射文件，map文件包含了五个部分：</strong></p><blockquote><p>A. Section Cross References(模块、段的交叉引用关系)<br>B. Removing Unused input sections from the image(移除未使用的段)<br>C. Image Symbol Table(映射符号表，列出了各个段所存储的对应地址)<br>D. Memory Map of the image(内存(映射)分布)<br>E. Image component sizes(映像组成大小)</p></blockquote><p><strong>这里也提一下关于map的基本概念</strong></p><blockquote><p>section(段)：描述映像文件的代码和数据块<br>RO：Read-Only的缩写，包括RO-data(只读数据)和RO-code(代码)<br>RW：Read-Write的缩写，主要是RW-data，Rw-data由程序初始化初始值<br>ZI：Zero-initialized的缩写，主要是ZI-data，由编程器初始化为0<br>.text：与RO-code同义<br>.constdata：与RO-data同义<br>.bss：与ZI-data同义，通常是指存放未初始化的全局变量的区域<br>.data：与RW-data同义</p></blockquote><p>在Keil中，我们在 <code>Project -&gt; Options for Target -&gt; Listing</code> 中可以看到我们生成的map中链接的内容，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/14.jpg" alt=""></p><p>它包含了:</p><blockquote><ul><li>Memory Map：内存映射</li><li>Callgraph：图像映射</li><li>Symbols：符号</li><li>Cross Reference：交叉引用</li><li>Size Info：大小信息</li><li>Totals Info：统计信息</li><li>Unused Section Info：未调用模块(段)信息</li><li>Veneers Info：装饰信息</li></ul></blockquote><h3 id="Section-Cross-References"><em><strong>Section Cross References</strong></em></h3><p><strong>模块、段的交叉引用关系:这里主要是各个源文件之间生成的模块、段之间相互引用的关系。</strong></p><p>这里我随便找了个简单的LED延时闪灯程序，编译后打开生成的 map 文件</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/15.jpg" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/16.jpg" alt=""></p><p>这里指出了 test.c 中模块调用其他模块之间的关系：</p><blockquote><p>test.o(i.main) refers to sys.o(i.Stm32_Clock_Init) for Stm32_Clock_Init<br>test.o(i.main) refers to delay.o(i.delay_init) for delay_init<br>test.o(i.main) refers to led.o(i.LED_Init) for LED_Init<br>test.o(i.main) refers to delay.o(i.delay_ms) for delay_ms</p></blockquote><p><strong>因为我的 main 写在 test.c 中，所以 test.c 中因为 main 函数调用了 sys.c 中的 Stm32_Clock_Init 函数、调用了 delay.c 中的 delay_init 函数和 delay_ms 函数、调用了 led.c 的 LED_Init 函数，所以， 生成的 map 中 Section Cross References 指出了之前的相互引用关系。</strong></p><h3 id="Removing-Unused-input-sections-from-the-image"><em><strong>Removing Unused input sections from the image</strong></em></h3><p><strong>移除未使用的段：这个是我们工程中没有被调用的模块，会被编译器移除并标识出来。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/17.jpg" alt=""></p><p>图里列出了被移除的模块信息，例如</p><blockquote><p>Removing delay.o(i.delay_us), (60 bytes).<br>Removing usart.o(i.uart_init), (220 bytes).<br>13 unused section(s) (total 786 bytes) removed from the image.</p></blockquote><p><strong>从上面 main 函数的执行中，可以看出我没有调用 delay_us 和 uart_init 串口的初始化函数，所以编译器把他们找出来并移除，共 13 个段没有被调用，大小为 786 字节。</strong></p><h3 id="Image-Symbol-Table"><em><strong>Image Symbol Table</strong></em></h3><p><strong>映射符号表，列出了各个段所存储的对应地址</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Image Symbol Table</span><br><span class="line"></span><br><span class="line">    Local Symbols</span><br><span class="line"></span><br><span class="line">    Symbol Name                              Value     Ov Type        Size  Object(Section)</span><br><span class="line"></span><br><span class="line">    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE</span><br><span class="line">    ....</span><br><span class="line">    ..\Project\LED\led.c                     0x00000000   Number         0  led.o ABSOLUTE</span><br><span class="line">    ..\SYSTEM\delay\delay.c                  0x00000000   Number         0  delay.o ABSOLUTE</span><br><span class="line">    ..\SYSTEM\sys\sys.c                      0x00000000   Number         0  sys.o ABSOLUTE</span><br><span class="line">    ..\SYSTEM\usart\usart.c                  0x00000000   Number         0  usart.o ABSOLUTE</span><br><span class="line">    ..\\SYSTEM\\sys\\sys.c                   0x00000000   Number         0  sys.o ABSOLUTE</span><br><span class="line">    ....</span><br><span class="line">    RESET                                    0x08000000   Section      304  startup_stm32f10x_hd.o(RESET)</span><br><span class="line">    !!!main                                  0x08000130   Section        8  __main.o(!!!main)</span><br><span class="line">    ....</span><br><span class="line">    fac_us                                   0x20000000   Data           1  delay.o(.data)</span><br><span class="line">    fac_ms                                   0x20000002   Data           2  delay.o(.data)</span><br><span class="line"></span><br><span class="line">    Global Symbols</span><br><span class="line"></span><br><span class="line">    Symbol Name                              Value     Ov Type        Size  Object(Section)</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">    delay_init                               0x08000455   Thumb Code    56  delay.o(i.delay_init)</span><br><span class="line">    delay_ms                                 0x08000495   Thumb Code    56  delay.o(i.delay_ms)</span><br><span class="line">    main                                     0x080004d1   Thumb Code   114  test.o(i.main)</span><br><span class="line">    LED_Init                                 0x08000269   Thumb Code    74  led.o(i.LED_Init)</span><br><span class="line">    USART_RX_STA                             0x20000008   Data           2  usart.o(.data)</span><br><span class="line">    USART_RX_BUF                             0x2000000c   Data         200  usart.o(.bss)</span><br></pre></td></tr></table></figure><p>这里我截取了一些 map 文件中 Image Symbol Table 的内容出来分析</p><h3 id="Symbol-分为两类"><em><strong>Symbol 分为两类</strong></em></h3><blockquote><p>Local Symbols(局部)<br>局部就是在函数内部用 static 声明的变量，还有用 static 声明的函数，基本上都是属于局部，汇编文件里面的变量如果作用域是本文件的就是局部。</p></blockquote><blockquote><p>Global Symbols(全局)<br>全局就是不是用 static 声明的变量和函数，是 auto 声明的全局变量和 C 文件函数就属于全局。汇编文件里面作用域是全工程的就是全局。</p></blockquote><h3 id="Symbol-符号名称"><em><strong>Symbol 符号名称</strong></em></h3><blockquote><p>Symbol Name:符号名</p><p>Value:存储对应的地址</p><blockquote><p>0x0800xxxx：指存储在 flash 中的代码和变量等<br>0x2000xxxx：指存储在 RAM 中的变量 Data 等</p></blockquote><p>Ov Type:符号类型</p><blockquote><p>Number、Section、Thumb Code、Data等</p></blockquote><p>Size:大小,指当前Symbol占用的大小</p><p>Object(Section):段目标,指当前段所在的模块及源文件</p></blockquote><h3 id="Memory-Map-of-the-image"><em><strong>Memory Map of the image</strong></em></h3><p><strong>内存(映射)分布：映像文件可以分为加载域（Load Region）和运行域（Execution Region）：加载域反映了ARM可执行映像文件的各个段存放在存储器中的位置关系</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Memory Map of the image</span><br><span class="line"></span><br><span class="line">  Image Entry point : 0x08000131</span><br><span class="line"></span><br><span class="line">  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00000578, Max: 0x00080000, ABSOLUTE)</span><br><span class="line"></span><br><span class="line">    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x0000056c, Max: 0x00080000, ABSOLUTE)</span><br><span class="line"></span><br><span class="line">    Base Addr    Size         Type   Attr      Idx    E Section Name        Object</span><br><span class="line"></span><br><span class="line">    0x08000000   0x00000130   Data   RO            3    RESET               startup_stm32f10x_hd.o</span><br><span class="line">    0x08000130   0x00000008   Code   RO          213  * !!!main             c_w.l(__main.o)</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">    </span><br><span class="line">    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000538, Max: 0x00010000, ABSOLUTE)</span><br><span class="line"></span><br><span class="line">    Base Addr    Size         Type   Attr      Idx    E Section Name        Object</span><br><span class="line"></span><br><span class="line">    0x20000000   0x00000004   Data   RW           49    .data               delay.o</span><br><span class="line">    0x20000004   0x00000006   Data   RW          159    .data               usart.o</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br></pre></td></tr></table></figure><blockquote><p>Image Entry point : 0x08000131:指映射入口地址。</p><p>Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00000578, Max: 0x00080000, ABSOLUTE):指加载域 LR_IROM1 起始地址为 0x08000000，大小是 0x00000578,加载域最大大小为 0x00080000</p><p>Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x0000056c, Max: 0x00080000, ABSOLUTE)</p><p>Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000538, Max: 0x00010000, ABSOLUTE)</p><p>运行域 ER_IROM1 起始地址 0x08000000，大小是 0x0000056c,加载域最大大小为 0x00080000</p><p>运行域 RW_IRAM1 起始地址 0x20000000，大小是 0x00000538,加载域最大大小为 0x00010000</p></blockquote><p>对应Keil中设定的IROM1和IRAM1：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201230/18.jpg" alt=""></p><h3 id="Image-component-sizes"><em><strong>Image component sizes</strong></em></h3><p><strong>映像组成大小：各个映像模块在各个文件中的代码大小，主要就是对模块进行汇总存储大小信息</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Image component sizes</span><br><span class="line"></span><br><span class="line">      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name</span><br><span class="line"></span><br><span class="line">       124         12          0          4          0       1196   delay.o</span><br><span class="line">        84         10          0          0          0        435   led.o</span><br><span class="line">    ....</span><br><span class="line">    ....</span><br><span class="line">==============================================================================</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   </span><br><span class="line"></span><br><span class="line">      1052        108        336         12       1324     215049   Grand Totals</span><br><span class="line">      1052        108        336         12       1324     215049   ELF Image Totals</span><br><span class="line">      1052        108        336         12          0          0   ROM Totals</span><br><span class="line"></span><br><span class="line">==============================================================================</span><br><span class="line"></span><br><span class="line">    Total RO  Size (Code + RO Data)                 1388 (   1.36kB)</span><br><span class="line">    Total RW  Size (RW Data + ZI Data)              1336 (   1.30kB)</span><br><span class="line">    Total ROM Size (Code + RO Data + RW Data)       1400 (   1.37kB)</span><br><span class="line"></span><br><span class="line">==============================================================================</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">Code</th><th style="text-align:center">RO Data</th><th style="text-align:center">RW Data</th><th style="text-align:center">ZI Data</th><th style="text-align:center">Debug</th><th style="text-align:center">Object Name</th></tr></thead><tbody><tr><td style="text-align:center">指代码的大小</td><td style="text-align:center">指除了内联数据之外的常量数据</td><td style="text-align:center">指可读写、已初始化的变量数据</td><td style="text-align:center">指未初始化的变量数据</td><td style="text-align:center">显示调试数据占用了多少字节</td><td style="text-align:center">目标名</td></tr></tbody></table><p><strong>Total RW  Size (RW Data + ZI Data)              1336 (   1.30kB)：是我们程序RAM所占的字节总数，</strong></p><p><strong>Total ROM Size (Code + RO Data + RW Data)       1400 (   1.37kB):是我们程序ROM所占的字节总数，也就是我们程序所下载到ROM Flash中的大小。</strong></p><h2 id="结">结</h2><p><strong>写的可能有点乱，因为我晚上才有空整理这些，上面这些是花了好几个晚上才整理出来，所以有点乱也希望大家理解。有什么错误也希望能在留言处指出，我会及时修改的！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【踩坑】修改头文件 stdint.h</title>
      <link href="/db7aa6742c0a/"/>
      <url>/db7aa6742c0a/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><strong>这里说踩坑似乎不合适，应该是自己坑自己，不过还是应当记录下来，时时刻刻提醒自己！</strong></p><hr><h2 id="踩坑描述">踩坑描述</h2><p><strong>不同项目对 int、unsigned int等数据类型会使用 typedef 为这些数据类型定义一个新的名字，这样在移植项目的过程中，如果不想大规模的改动源码，则需要自己在头文件中依据修改的名字自己用 typedef 声明一下。</strong></p><p><strong>我在移植一个开源项目时，这个项目的数据类型我自己的工程是没有的，所以没多想，动手就在 Keil 中右键跳转到已经存在的数据类型的头文件，当时没注意这个头文件的名字是 stdint.h，在声明完开源项目的数据类型后，编译也不会报错。结果就是这样一个小改动，自己埋下了深坑😭，每次想起都觉得十分不应该！</strong></p><p><strong>最关键的 unsigned long long 类型居然被我写错，写成 __INT64 直接就变成了 long long 类型，后面运行的时候总是挂掉，单步调试的时候总是在将数据转换的时候挂掉，要么指针跑飞要么栈溢出的，调了整整快一个星期，后面还以为是电脑的大小端和 cortexM3 的大小端不一致导致的，调整了数据转换后，虽然不会运行的时候挂掉，但是总是会返回出错。</strong></p><p><strong>最后还是大佬在旁边帮我单步调试发现的数据类型声明的问题，<s>被无情的打脸和嘲讽</s>后，修正了问题，最后运行的时候一遍就通过了。😭</strong></p><p><strong>这里主要是两点错误：</strong></p><ul><li><strong>1. 是修改了非本工程的文件，修改了标准 C 库的文件 stdint.h，这些标准 C 库的文件可能在很多地方都有用到，一般不能随意更改的。</strong></li><li><strong>2. 是使用 typedef 为数据类型另起名字的时候，居然将数据类型写错了！</strong></li></ul><hr><h2 id="解决问题">解决问题</h2><p><strong>最后 copy 别人电脑下的stdint.h 文件，将自己修改的替换后，在自己工程的数据类型声明头文件中，添加开源代码中的数据类型后，问题解决！这是一个粗心大意给自己制造的 BUG，付出了<s>血的教训</s>，故此记录下，提醒自己！</strong></p><hr><h2 id="扩展">扩展</h2><p><a href="https://www.nixgnauhcuy.cn/6febc592d3fe/">【踩坑】notepad++ Hex-Editor</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nrf52840 内部 flash 结构</title>
      <link href="/721a3f9ff3ad/"/>
      <url>/721a3f9ff3ad/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote><p>不同的 SDK 版本 flash 结构可能不同，以实际 SDK 版本提供的为准。</p></blockquote><p><strong>最近开发用的芯片正好是 Nodic 的 52840，学习过程中，正好对相关的知识做个总结，方便自己后面回顾。</strong></p><p>先贴出一张 52840 和 52832 的 flash 结构图，这个是在网上翻阅资料找到的图片，当时保存到电脑里，正好拿出来用。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201227/00.png" alt=""></p><p>图片以 nRF52840 S140 v6 为例，52840 有 1MB 的 flash 和 256Kb RAM， 从上图可以看出 flash 最下边是 SoftDevice(蓝牙协议栈)，中间是 Application(应用层)， 再往上是 UserData 和 Bootloader。SoftDevice 下边还有 MBR(Master Boot Record,主引导记录)下边我们在详细分析它们。</p><hr><h2 id="52840-flash-结构解析">52840 flash 结构解析</h2><h3 id="SoftDevice-蓝牙协议栈">SoftDevice(蓝牙协议栈)</h3><p>上边图中可以知道 SoftDevice 在 Flash 中的映射地址是 0x00000000-0x00026000，总共是 152Kb，但是其中要拆分成 4Kb 的 MBR 和 148Kb 的 Softdevice。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201227/01.png" alt=""></p><blockquote><p>MBR(Master Boot Record,主引导记录), <strong>The main functionality of the MBR is to provide an interface to allow in-system updates of the application, the SoftDevice, and bootloader firmware</strong><a href="#refer-1"><sup>1</sup></a>，MBR 的主要功能是提供一个接口，以允许对应用程序，SoftDevice 和引导加载程序固件进行系统内更新。</p></blockquote><hr><h3 id="Application">Application</h3><p>Application 存放了我们应用程序代码，在 Flash 中的映射地址是 0x00026000-0x000ED000，共 796Kb。</p><hr><h3 id="UserData">UserData</h3><blockquote><p>UserData 存放了配置信息，资料中是这样解释的：<strong>This 28KB section of flash memory is reserved for config settings. It uses an open source file system called Little File System, which is a part of ARM Mbed OpenSource to store bonding data. For example, when you bond the nRF52 with another Central device</strong>，用于存储绑定数据，它在 Flash 中的映射地址是 0x000ED000-0x000F4000，共 28Kb。</p></blockquote><hr><h3 id="Bootloader">Bootloader</h3><p>Bootloader，总共 48Kb，但是要拆分成三部分，分别是<a href="#refer-2"><sup>2</sup></a></p><ul><li>Bootloader(40Kb，引导程序，0x000F4000-0x000FE000)</li><li>Master Boot Record Params(4Kb，主引导记录参数，0x000FE000-0x000FF000)</li><li>Bootloader Settings(4Kb，引导程序设置，0x000FF000-0x00100000)</li></ul><hr><h4 id="Bootloader-sup-3-sup">Bootloader<a href="#refer-3"><sup>3</sup></a></h4><blockquote><p><code>A bootloader may be used to handle in-system update procedures.</code></p><p><code>The bootloader has full access to the SoftDevice Application Programming Interface (API) and can be implemented like any application that uses the SoftDevice. In particular, the bootloader can make use of the SoftDevice API for Bluetooth® Low Energy communication.</code></p></blockquote><p>上边是官方文档的原文，bootloader主要用于处理系统内更新程序，主要用途有：</p><ul><li>booting into an application</li><li>activating new firmware</li><li>optionally, entering DFU mode where DFU transports are activated and new firmware can be delivered</li><li>feeding the watchdog timer</li></ul><hr><h4 id="Master-Boot-Record-Params">Master Boot Record Params</h4><p>官方文档中没有找出相关的信息，但是应该和 MBR 相似，存放了程序引导信息。</p><hr><h4 id="Bootloader-Settings-sup-4-sup">Bootloader Settings<a href="#refer-4"><sup>4</sup></a></h4><p>Bootloader Settings 保存了 bootloader 和 DFU 信息，如：</p><ul><li>current firmware - size, CRC-32，当前固件 - 大小，CRC-32。</li><li>pending firmware - size, CRC-32，待定的固件–大小，CRC-32。</li><li>progress of the firmware update，固件更新的进度。</li><li>progress of the firmware activation，激活固件的进度。</li><li>current firmware versions (application and bootloader)，当前的固件版本（应用程序和引导程序）。</li><li>transport-specific data，传输特定数据。</li></ul><hr><h2 id="其他">其他</h2><p>除了 flash 中的结构地址映射外，还需要关注 FICR(信息配置寄存器，0x10001000) 和 UICR(用户信息配置寄存器，0x10000000),</p><ul><li>FICR, 存储了工厂信息配置，是在出厂时预先编程的，用户不能擦除。这些寄存器包含了芯片特有的信息和配置。</li><li>UICR， 可以用于配置用户特定设置的非易失性存储器(NVM)寄存器，用于管理 FLASH 区域(0x0-0x80000)中的 NVM 存储器存储，一般不建议在这里面存储信息，除非不使用 softdevice 则可以通过 fstorage 将数据写入 UICR (即只能在禁用 softdevice 时使用)。</li></ul><hr><h2 id="52840-上电运行流程">52840 上电运行流程</h2><p>上电后，系统先执行 softdevice，softdevice 通过读取 UICR 一个寄存器的值，来判断目前系统是否有 BootLoader ，如果没有 BootLoader ，系统直接跳到 application；如果有 BootLoader，系统先跳到 BootLoader，BootLoader 再根据目前的情况来决定是进入升级模式还是跳往 application。</p><hr><h2 id="结尾">结尾</h2><p><strong>本人水平有限，错误、疏漏之处在所难免，如有问题，欢迎留言指导我修正错误，也希望本文能给你带来一些对 52840 flash 映射理解上的帮助！</strong></p><h2 id="参考">参考</h2><div id="refer-1"></div><ul><li>[1] <a href="https://infocenter.nordicsemi.com/index.jsp?topic=%2Fsds_s140%2FSDS%2Fs1xx%2Fmbr_bootloader%2Fmbr.html">Master boot record</a></li></ul><div id="refer-2"></div><ul><li>[2] <a href="https://learn.sparkfun.com/tutorials/nrf52840-advanced-development-with-the-nrf5-sdk/building-blinky-for-the-sparkfun-nrf52840-mini-breakout">Bootloader</a></li></ul><div id="refer-3"></div><ul><li>[3] <a href="https://infocenter.nordicsemi.com/topic/sds_s140/SDS/s1xx/mbr_bootloader/bootloader.html">Bootloader</a></li></ul><div id="refer-4"></div><ul><li>[4] <a href="https://infocenter.nordicsemi.com/index.jsp?topic=%2Fcom.nordic.infocenter.sdk5.v15.0.0%2Flib_bootloader.html">Bootloader Settings</a></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 蓝牙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>圣诞节快乐</title>
      <link href="/56b661ecbc2b/"/>
      <url>/56b661ecbc2b/</url>
      
        <content type="html"><![CDATA[<h2 id="圣诞节快乐鸭">圣诞节快乐鸭</h2><blockquote><p><strong>先祝各位圣诞节快乐哈~</strong></p></blockquote><p><strong>不知不觉平安夜都到了，明天就是圣诞节，这也代表今年要也结束了，然鹅我这个苦逼的上班党平安夜还得在公司加班！往常平安夜和圣诞节我都是不应节的，顶多收到几个小苹果。<s>可能我是个莫的感情的程序员</s></strong></p><p><strong>最难受的是圣诞节隔天星期六还要上班，想在家里划水都没机会了。熬到下午后发现平安夜的下午茶还有圣诞节的下午茶比往常丰富了一丢丢。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201224/00.jpg" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201224/01.jpg" alt=""></p><p><strong>感动的是，加班回到家还有我大佬精心准备的夜宵！<s>抚慰我疲惫的心灵</s></strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201224/02.jpg" alt=""></p><p><strong>最后附上我的两个爱宠圣诞照</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201224/03.jpg" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201224/04.jpg" alt=""></p><hr>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keil 软件配置</title>
      <link href="/693bccaf2128/"/>
      <url>/693bccaf2128/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><blockquote><p><strong>软件配置的操作都是在 Keil 上进行，keil 不同版本可能会有所差异，不过基本都是大同小异的。</strong></p></blockquote><hr><h2 id="Keil-的安装">Keil 的安装</h2><blockquote><p><strong>Keil 的安装可以参考我的这篇文章 -&gt; <a href="https://www.nixgnauhcuy.cn/d01acd7e5674/">keil5 的安装及破解</a></strong></p></blockquote><hr><h2 id="Keil-的代码格式化工具">Keil 的代码格式化工具</h2><blockquote><p><strong>Keil 的代码格式化工具可以参考我的这篇文章 -&gt; <a href="https://www.nixgnauhcuy.cn/9af76ba34d89/">【规范代码】keil 代码格式化工具</a></strong></p></blockquote><h2 id="正文">正文</h2><h3 id="代码自动补全">代码自动补全</h3><blockquote><p>在工具栏中找到<strong>小扳手图标</strong>或者在菜单栏中打开 <strong>Edit-Configuration</strong> ，打开后点击 <strong>Text Completion</strong> 找到 <strong>Symbols after x Characters</strong> ，勾选并填入你需要在输入第几个字符后开启补全提示。</p></blockquote><blockquote><p>这里我设置了输入三个字符后补全<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/00.png" alt=""></p></blockquote><blockquote><p>实际效果:<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/01.png" alt=""></p></blockquote><hr><h3 id="添加注释模板">添加注释模板</h3><blockquote><p>同样在工具栏中找到<strong>小扳手图标</strong>或者在菜单栏中打开<strong>Edit-Configuration</strong> ，同样的打开后点击 <strong>Text Completion</strong> 找到 <strong>Templates</strong> ，这里拿 <strong>if</strong> 来举例，在 <strong>Templates</strong> 窗口中，新增一个 <strong>if</strong> ，名字可以根据需要来取，怎么方便怎么来，这里为了方便演示，给它设定为 <strong>if</strong> ，然后我们在下方 <strong>Text</strong> 框中对应的给 <strong>if</strong> 增加对应文本。</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (|)</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/02.png" alt=""></p><blockquote><p>这里需要注意的是，我在 <strong>if</strong> 判断框中加了 <strong>|</strong> ，代表着我们使用 <strong>if</strong> 这个注释模板时，光标会对应的跳到判断框中就不需要在点一次判断框来书写你的判断条件。</p></blockquote><p>设置好后，我们点 <strong>OK</strong> 保存，然后我们要怎么使用呢？<br>我们在 <strong>Keil</strong> 的菜单栏中找到 <strong>View-Templates Window</strong> ，将它勾选，就会有相应的 <strong>Templates</strong> 窗口，根据自己方便拖到一个适合的地方，这里我拖到了我右下角来使用它。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/03.png" alt=""><br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/04.png" alt=""></p><p>在 <strong>Templates</strong> 窗口双击刚才设置的 <strong>if</strong>， 我们设置好的关于 <strong>if</strong> 文本就会对应的出现在当前光标指向的位置，并且新的光标也会出现在判断框中。<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/05.png" alt=""></p><p>如果不想要通过窗口点击的方式，我们也可以记住自己设定的名字，例如 <strong>if</strong> 在没有其他 <strong>i</strong> 开头的影响下，按快捷键 <strong>ctrl+shift+space(空格)</strong> 来使用注释模板。</p><blockquote><p>快捷键的使用可以参考官网给出的<a href="http://www.keil.com/support/man/docs/uv4/uv4_ui_templatestab.htm">说明</a></p></blockquote><hr><h3 id="Editor-编辑设置">Editor 编辑设置</h3><blockquote><p>在工具栏中找到<strong>小扳手图标</strong>或者在菜单栏中打开 <strong>Edit-Configuration-Editor</strong> ，将这一块分为五部分来设置，分为 <strong>General Editor Settings</strong>、<strong>Function Display</strong>、<strong>Look &amp; Feel</strong>、<strong>File &amp; Project Handing</strong>、<strong>C/C++ &amp; ASM Files &amp; Other Files</strong> 五个部分。</p></blockquote><h4 id="General-Editor-Settings">General Editor Settings</h4><blockquote><p><strong>Encoding</strong>: 这里是设置我们的 Keil 的编码，一般我们选择默认的 <strong>Dncode in ANSI</strong> 就可以了，但是如果你打开别人的工程，看到注释乱码，很大情况都是编码问题，这个时候修改你的编码为 <strong>Chinese GB2312(Simplified)</strong> 可以解决乱码的问题，当然不一定所有乱码都是编码的问题。</p><p><strong>Auto Indent</strong>: 这里是我们换行时自动缩进对齐的功能。推荐使用 <strong>Smart</strong> 灵活对齐。</p><blockquote><p><strong>None</strong>: 不对齐，光标每次都在换行的最前面<br><strong>Smart</strong>: 灵活对齐。包含大括号自动对齐。<br><strong>Block</strong>: 光标对齐与前一行</p></blockquote><p><strong>Virtual Spaces</strong>、<strong>View White Space</strong>、<strong>View End of Line</strong>,分别是光标可以指在任意位置、用·显示空格、在行尾显示换行符，这三种都不推荐勾选。</p></blockquote><hr><h4 id="Function-Display">Function Display</h4><p>这边的设置主要对应的是 <strong>View-Functions Window</strong>。</p><blockquote><p><strong>Display Modules</strong>:勾选表示以模块的方式显示函数，不勾选则以函数名的方式显示，这个选项主要对应另外两个选项。</p><blockquote><p><strong>Scan function names in project files</strong>:浏览工程项目中所有的函数。<br><strong>Scan function names in current editor files</strong>:浏览当前项目打开的文件的函数。</p></blockquote></blockquote><p>这边我推荐都勾选上，以模块的方式显示工程中所有的函数，方便在各个项目文件中的.c中快速定位到你的函数的位置，当然如果你没有看 <strong>Functions Window</strong> 的习惯也可以不勾选。</p><hr><h4 id="Look-Fell">Look &amp; Fell</h4><blockquote><p><strong>Show Message Dialog during Find</strong>:在查找时显示消息对话框，勾选后，使用 <strong>Ctrl + F</strong> 查找工程中的内容时，如果搜索不到，会相应的提示消息框告知你当前文件或工程中没有你搜索的东西。</p><blockquote><p><strong>Highlight Current Line</strong>:勾选上后光标选中的那一行会高亮。<br><strong>Highlight matching and mismatched braces</strong>:高亮显示匹配和不匹配括号。<br><strong>Print with syntax coloring</strong>:打印语法颜色。<br><strong>Colored Editor Tabs</strong>:启用或禁用文件名称标签的颜色。这个勾选上后你打开的文件的标签会有颜色，如果不勾选则默认白色。</p></blockquote></blockquote><p>这边我推荐也是全部勾选，都是对整体编程效果有很好的帮助。</p><hr><h4 id="File-Project-Handling">File &amp; Project Handling</h4><blockquote><p><strong>Create Backup files(*.BAK)</strong>:创建备份文件，后缀.BAK。<br><strong>Automatic reload of extemally modified files</strong>:自动加载(不提示)修改过的文件。<br><strong>Save Project before entering Debug</strong>:进入调试之前保存工程项目。<br><strong>Save Files before entering Debug</strong>:进入调试之前保存所有文件。<br><strong>Auto save modified File every x Minutes</strong>:每x分钟自动保存文件。</p></blockquote><p>这里我自己是全部都不勾选的，创建备份文件有点鸡肋，自动加载修改过的文件则十分的不安全，而每x分钟自动保存文件对我这种稍微改动一点代码都要经常编译的人来说，就没什么特别需求。</p><hr><h4 id="C-C-Files-ASM-Files-Other-Files">C/C++ Files &amp; ASM Files &amp; Other Files</h4><blockquote><p><strong>Use syntax coloring</strong>:使用语法颜色，这个最好勾选，如果不勾选，就不会高亮关键词等。<br><strong>Insert spaces for tabs</strong>:Tab键插入空格<br><strong>Tab size x</strong>:Tab缩进x格<br><strong>Show Line Numbers</strong>:显示行数<br><strong>Use monospaced Font</strong>:使用等宽字体<br><strong>Open with Outlining</strong>:打开概述</p></blockquote><p>推荐勾选<code>Use syntax coloring</code>、设置<code>Tab size 4</code>、<code>Show Line Numbers</code>、<code>Use monospaced Font</code>、<code>Open with Outlining</code></p><hr><h3 id="Colors-Fonts-设置">Colors &amp; Fonts 设置</h3><p>这个是关于 Keil 字体大小、颜色，背景色等字体和颜色的配置。</p><h4 id="输入光标闪烁和当前行颜色">输入光标闪烁和当前行颜色</h4><blockquote><p><strong>All Editors - Caret Line - Font</strong> 中修改 <strong>Foreground</strong> 可以修改在输入时光标闪烁的颜色， 而修改 <strong>Backgroud</strong> 可以修改在选中的输入行的颜色。</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/06.png" alt=""></p><p>举个例子，我这边修改前景色 <strong>Foreground</strong> 为浅蓝色，修改背景色 <strong>Backgroud</strong> 为浅灰色，实际效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/07.png" alt=""></p><hr><h4 id="选中后光标闪烁和选中行时的颜色">选中后光标闪烁和选中行时的颜色</h4><blockquote><p><strong>All Editors - Text Selection - Font</strong> 中修改 <strong>Foreground</strong> 可以修改在选中代码时光标闪烁的颜色， 而修改 <strong>Backgroud</strong> 可以修改被选中的代码的颜色。</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/08.png" alt=""></p><p>同样的举个例子，我这边修改前景色 <code>Foreground</code> 为浅蓝色，修改背景色 <code>Backgroud</code> 为浅灰色，实际效果(灰色效果可能看不清楚)：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/09.png" alt=""></p><hr><h4 id="背景色">背景色</h4><blockquote><p><strong>C/C++ Editor files - Text - Font</strong> 中修改 <strong>Backgroud</strong> 可以修改背景的颜色</p></blockquote><hr><h4 id="字体大小、字体颜色、字体风格">字体大小、字体颜色、字体风格</h4><blockquote><p><strong>C/C++ Editor files - Element</strong> 中可以设置个元素的字体大小颜色等，具体的设置都是根据不同元素的需求来设置。例如:</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/10.png" alt=""></p><p>我们可以根据需求来修改适合自己的编程环境。</p><hr><h3 id="User-Keywords-设置">User Keywords 设置</h3><blockquote><p><strong>User keywords</strong> 是给用户自定义设置关键字的接口，在 <strong>Text File Types:</strong> 中 <strong>C/C++Editor files</strong> 添加关键词 <strong>FALSE</strong> 和 <strong>TRUE</strong> 实现的效果:</p></blockquote><p>设置：<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/11.png" alt=""></p><p>不设置：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/12.png" alt=""></p><p>关键字显示的颜色则是在前面设置的。</p><hr><h3 id="Shortcut-Keys-设置">Shortcut Keys 设置</h3><p><strong>Shortcut Keys</strong> 可以用来修改快捷键，这里其实默认设置就可以了，绝大多数的快捷键符合我们的使用。我这里稍微修改了一些快捷键，如：</p><p>选中行注释，我修改为了 <strong>ctrl + `</strong><br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/13.png" alt=""></p><p>取消选中行注释我修改为了 <strong>alt + `</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/14.png" alt=""></p><p>F7，用来编译。 F8，用来下载：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/15.png" alt=""><br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/16.png" alt=""></p><hr><h3 id="Text-Completion-设置">Text Completion 设置</h3><p>这一块主要是添加注释模板和代码补全的，上面注释模板已经说过了，这里说说代码补全的：<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/17.png" alt=""></p><p><strong>代码补全的重要性很高，推荐勾选。</strong></p><hr><h3 id="Other-设置">Other 设置</h3><p><strong>other</strong> 这边可以设置是否开启软件启动界面等，根据需求来设置你想要的功能，具体看图吧</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/18.png" alt=""></p><p>勾选 <strong>Show splash screen</strong> 效果：</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201222/19.png" alt=""></p><hr><h2 id="结语">结语</h2><p><strong>Keil 相关的软件配置差不多就这些了，如果发现本文中有什么问题，欢迎留言指正，谢谢。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> keil </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【踩坑】notepad++ Hex-Editor</title>
      <link href="/6febc592d3fe/"/>
      <url>/6febc592d3fe/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><strong>在使用 notepad++ 时，使用插件 Hex-Editor 踩到的深坑，故此记录一下！</strong></p><hr><h2 id="问题描述">问题描述</h2><p><strong>移植一个开源项目时，调用写接口连续向 txt 文本写入数据类型 uint32_t(unsigned int)的数值，本应该写入 4 个字节，但是通过 notepad++ 的插件 Hex-Editor 查看时一直只有 2 个字节，实际的文件大小是 4 个字节，与自己写入的不符，于是开启调试单步调试代码，但是又找不到问题的所在。</strong></p><blockquote><p><strong>使用 notepad++ 查看如下图：</strong><br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201218/00.png" alt=""></p></blockquote><p><strong>我实际以小端形式写入的数值应该是 01000000 共 4 个字节，但是实际从图中可以看到使用notepad++ 的插件 Hex-Editor 查看时，只显示了 0100共 2 个字节，然后一直以为写入的 uin32_t 数据类型在哪个地方被强制类型转换或者更改了，故一直在代码中找问题。</strong></p><h2 id="解决问题">解决问题</h2><p><strong>最后，部门大佬给我提了个建议，换了个思路，怀疑是使用的工具的问题，所以我随后改使用 UltraEdit 查看，并且通过读取接口读取写入的数据，发现根本不是代码的问题，而是 notepad++ 的插件 Hex-Editor 的问题。</strong></p><blockquote><p><strong>使用 UltraEdit 查看如下图：</strong><br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201218/01.png" alt=""></p></blockquote><p><strong>最后，问题解决，非代码 BUG ，而是插件的小坑，故此记录下，提醒自己</strong></p><h2 id="扩展">扩展</h2><hr><p><a href="https://www.nixgnauhcuy.cn/db7aa6742c0a/">【踩坑】修改头文件 stdint.h</a></p>]]></content>
      
      
      <categories>
          
          <category> 踩坑 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> 踩坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【规范代码】keil 代码格式化工具</title>
      <link href="/9af76ba34d89/"/>
      <url>/9af76ba34d89/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><strong>在用 Keil5 编写程序的时候，很多情况要参考别人写的程序来完成开发，在这过程中，看到了很多代码编写风格不一、代码编写不规范的情况。有时候看的头都大了，在一次偶然的情况下，认识了 Astyle 这一代码格式工具，就根据帖子上的教程配置在了 Keil 上，后面在使用的过程中，发现这款插件的高效性，所以特意拿出来分享。</strong></p><hr><h2 id="Astyle">Astyle</h2><h3 id="Astyle-网站">Astyle 网站</h3><p><a href="http://astyle.sourceforge.net/">Astyle：http://astyle.sourceforge.net/</a></p><hr><h3 id="Astyle-介绍">Astyle 介绍</h3><p>我直接搬 Astyle 网站两句话来介绍，网站的介绍已经十分详细了，文档等信息都可以在网站上获取到。</p><blockquote><p>Artistic Style is a source code indenter, formatter, and beautifier for the C, C++, C++/CLI, Objective-C, C# and Java programming languages.</p><p>Artistic Style 是 C, C++, C++/CLI, Objective-C, C# 和 Java 等编程语言的代码缩进器、格式化器和美化器。</p><p>Artistic Style 是适用 C, C++, C++/CLI, Objective-C, C# 和 Java 等编程语言的免费、快速和小型自动格式化软件。</p></blockquote><hr><h3 id="Astyle-下载">Astyle 下载</h3><p>进入官网,在官网下方点击 Download 进入下载页面.</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/00.png" alt=""></p><p>下载页面直接下载最新版本即可.</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/01.png" alt=""></p><hr><h3 id="Astyle-保存">Astyle 保存</h3><p>Astyle 下载完后，根据自己的需求和方便，解压并保存好就可以了。这里我是直接丢在了 keil 的根目录下。</p><hr><h2 id="Keil-增加-Astyle-插件">Keil 增加 Astyle 插件</h2><h3 id="Keil-使用-Astyle-效果">Keil 使用 Astyle 效果</h3><blockquote><p>使用前:<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/02.png" alt=""></p></blockquote><blockquote><p>使用后:<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/03.png" alt=""></p></blockquote><hr><h3 id="Keil-配置-Astyle">Keil 配置 Astyle</h3><p>打开 Keil ,然后在菜单栏中找到 <strong>Tools-Customize Tools Menu…</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/04.png" alt=""></p><p>打开后,增加两个内容,分别命名为:</p><blockquote><ul><li><code> Astyle All Files</code></li><li><code>Astyle Current File</code></li></ul><p>命名可以自己需求，不一定和我一样。</p></blockquote><p>然后位置都选择你解压 <strong>Astyle</strong> 文件中 <strong>bin</strong> 文件夹下的 <strong>Astyle.exe</strong> ，在 <strong>Arguments</strong> 参数中对应填入:</p><blockquote><p>Astyle All Files</p><ul><li><code>-n &quot;$E*.c&quot; &quot;$E*.h&quot;</code></li></ul><p>Astyle Current File</p><ul><li><code>-n !E</code></li></ul></blockquote><p>如图:</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/05.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/06.png" alt=""></p><p>设置好后我们点 OK 应用。</p><hr><h3 id="Keil-使用-Astyle-格式代码">Keil 使用 Astyle 格式代码</h3><p>配置好后，我们可以在 <strong>Tools-Customize Tools Menu…</strong> 中看到我们新增加的两个自定义工具。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/07.png" alt=""></p><blockquote><p>格式化正在编辑的文件所在目录下所有的 .c 与 .h 文件就选择 Astyle All Files。</p><p>格式化正在编辑的文件则选择 Astyle Current File.</p><p>格式化可以在 keil 的输出窗口看到格式情况。</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/08.png" alt=""></p><h3 id="关于配置参数上的解释">关于配置参数上的解释</h3><p>我们在 keil 中填入了两行参数值：</p><blockquote><p>Astyle All Files</p><ul><li><code>-n &quot;$E*.c&quot; &quot;$E*.h&quot;</code></li></ul><p>Astyle Current File</p><ul><li><code>-n !E</code></li></ul></blockquote><blockquote><p><code>-n</code>，格式化文件时，新的缩进的文件将保留原始文件，创建原始文件的副本，并在原始文件名后附加 .orig ，可以通过 -n 来取消设置备份副本。</p></blockquote><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/09.png" alt=""></p><blockquote><p><code>&quot;$E*.c&quot; &quot;$E*.h&quot;</code>,$E 是 Keil 的指令，表示当前文件所在目录内的全部文件，加上 *.c 与 *.h ，表示当前文件所在目录内 .c 文件与 .h 文件，Astyle 也会只格式化当前文件所在目录内的全部的 .c 与 .h 文件。</p><p><code>!E</code>,!E 是 Keil 的指令，表示当前文件, Astyle 在操作时就只格式化当前正在编辑的文件。</p></blockquote><hr><h2 id="Astyle-的其他配置">Astyle 的其他配置</h2><h3 id="括号格式化风格">括号格式化风格</h3><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201208/10.png" alt=""></p><blockquote><p>具体的可以参照 <a href="http://astyle.sourceforge.net/astyle.html">Astyle文档</a>,不过多叙述。</p></blockquote><hr><h4 id="allman-风格">allman 风格</h4><blockquote><p>–style=allman / --style=bsd / --style=break / -A1</p></blockquote><p><em><strong>Allman style uses broken braces.</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Foo</span><span class="params">(<span class="type">bool</span> isBar)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (isBar)</span><br><span class="line">    &#123;</span><br><span class="line">        bar();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="java-风格">java 风格</h4><blockquote><p>–style=java / --style=attach / -A2</p></blockquote><p><em><strong>Java style uses attached braces.</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Foo</span><span class="params">(<span class="type">bool</span> isBar)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (isBar) &#123;</span><br><span class="line">        bar();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="kr-风格">kr 风格</h4><blockquote><p>–style=kr / --style=k&amp;r / --style=k/r / -A3</p></blockquote><p><em><strong>Kernighan &amp; Ritchie style uses linux braces. Opening braces are broken from namespaces, classes, and function definitions. The braces are attached to everything else, including arrays, structs, enums, and statements within a function.</strong></em></p><p><em><strong>Using the k&amp;r option may cause problems because of the &amp;. This can be resolved by enclosing the k&amp;r in quotes (e.g. --style=“k&amp;r”) or by using one of the alternates --style=kr or --style=k/r.</strong></em></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">Foo</span><span class="params">(<span class="type">bool</span> isBar)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (isBar) &#123;</span><br><span class="line">        bar();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="其他">其他</h4><p>还有很多的风格,可以在对应的文档看，总共有15种风格任君挑选，如 python、google、linux 风格等。<br>因为我用 Keil 开发是 C 语言，所有我选了 A1 的风格，所以相应的在 Keil 上我就配置了:</p><blockquote><p><code>-n  -A1 &quot;$E*.c&quot; &quot;$E*.h&quot;</code></p><p>不生成副本，用 A1 风格，来格式化 .c 与 .h 文件。</p></blockquote><hr><h3 id="格式化缩进长度">格式化缩进长度</h3><h4 id="空格缩进">空格缩进</h4><p>这里我就不在截图了，具体的可以看文档，默认我们不配置缩进选项的话，默认是4个空格，如果你想要更改缩进的空格长度，你可以通过:</p><blockquote><p>–indent=spaces / --indent=spaces=# / -s#</p><p>-s4，就是缩进 4 个空格，那么相应的，要改缩进 x 个空格就更改 <code>-sx</code> 就可以了.</p></blockquote><hr><h4 id="制表符缩进">制表符缩进</h4><p>同上，</p><blockquote><p>–indent=tab / --indent=tab=# / -t / -t#</p><p>-t4，就是缩进 4 个制表符，那么相应的，要改缩进 x 个制表符就更改<code>-tx</code>就可以了。</p></blockquote><hr><h4 id="其他-2">其他</h4><p>还有另外两种缩进方式，我觉得很少使用，就不列举了，有兴趣了解可以访问官方文档。</p><p>还有许多格式化的形式，我也不多加叙述，例如缩进’switch’块、'case’块、注释、'class’和’struct’块、预处理程序缩进等许许多多的格式化方式，官方文档列举的说明十分详细，针对自己需要的、想要的格式化需求，针对性的在文档中寻找并利用，制作一个自己的高效率工具。</p><hr><h2 id="扩展">扩展</h2><p><a href="https://www.nixgnauhcuy.cn/d01acd7e5674/">keil5 的安装及破解</a></p><p><a href="https://www.nixgnauhcuy.cn/693bccaf2128/">keil 软件配置</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> keil </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>keil5 的安装及破解</title>
      <link href="/d01acd7e5674/"/>
      <url>/d01acd7e5674/</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>本文主要针对keil5软件的安装和破解。</p><p>用到的安装包和破解工具可以点击下面<a href="#%E5%AE%89%E8%A3%85%E5%8C%85%E5%92%8C%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7">安装包和破解工具</a>获取：</p><h2 id="Keil5-的下载">Keil5 的下载</h2><p>首先，打开 <a href="https://www.keil.com/download/">Keil 下载地址</a>，点击 <strong>Product Downloads</strong>，进入产品下载页，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/00.png" alt=""></p><p>然后选择 <strong>MDK-Arm</strong> 下载最新版本(这里我显示的最新的版本是5.33)，<br><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/01.png" alt=""></p><p>进入页面后，会要求填写姓名、邮箱、公司等信息，这里随便填就可以了，填完后点击 <strong>Submit</strong> 提交信息并进入下载页面，</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/02.png" alt=""></p><p>接下来点击 <strong>MDK533.EXE</strong> 下载即可。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/03.png" alt=""></p><hr><h2 id="Keil5-的安装">Keil5 的安装</h2><p>打开上边下载的 <strong>MDK533.EXE</strong>，如下图一直 next 填写安装路径和信息后等待安装完成即可。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/04.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/05.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/06.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/07.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/08.png" alt=""></p><p>取消勾选 <strong>Show Release Note</strong> 点击 <strong>Finish</strong>，将弹出的 <strong>Pack Installer</strong> 窗口关闭即可，到这里就软件就装好了。</p><hr><h2 id="Keil5-的破解">Keil5 的破解</h2><p>首先在生成的 <strong>Keil uVision5</strong> 的桌面快捷方式中，右键<strong>属性</strong>，找到<strong>兼容性</strong>，勾选<strong>以管理员身份运行此程序</strong>，然后点击<strong>确定</strong>.</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/09.png" alt=""></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/10.png" alt=""></p><p>然后我们运行软件，在左上角 <strong>File</strong> 中找到 <code>License Management..</code>，点击打开它.</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/11.png" alt=""></p><p>先晾在一边冷静一下,找到下载的破解工具，将 <strong>keygen_new(2032).zip</strong>解压出来,运行 <strong>keygen_new2032.exe</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/12.png" alt=""></p><blockquote><ol><li><p>复制 keil5 中的 <strong>CID</strong> 到 keygan 中的 CID 窗口里</p></li><li><p>keygan 中 Target 选择 <strong>ARM</strong></p></li><li><p>下拉框选择 <strong>Professional</strong></p></li><li><p>点击 <strong>Gemerate</strong> 生成 <strong>License ID Code</strong></p></li><li><p>将生成的 LIC 复制到 Keil 中</p></li><li><p>点击 <strong>Add LIC</strong>，上边会显示 <strong>Expires:Oct 2032</strong></p></li></ol></blockquote><p>上面步骤执行完后，恭喜你,程序已经破解OK了。</p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/markdown/20201207/13.png" alt=""></p><h2 id="安装包和破解工具">安装包和破解工具</h2><p><strong>有需要的小伙伴可以在我的公众号回复 <code>10004</code> 获取 Keil 安装包及破解工具。</strong></p><p><img src="https://testingcf.jsdelivr.net/gh/nixgnauhcuy/blog_cdn@1.0/img/other/wechat_1.jpg" alt=""></p><h2 id="Keil5-的扩展阅读">Keil5 的扩展阅读</h2><p><a href="https://www.nixgnauhcuy.cn/9af76ba34d89/">【规范代码】keil 代码格式化工具</a></p><p><a href="https://www.nixgnauhcuy.cn/693bccaf2128/">keil 软件配置</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> keil </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
